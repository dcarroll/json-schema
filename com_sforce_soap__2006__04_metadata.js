var com_sforce_soap__2006__04_metadata_Module_Factory = function () {
  var com_sforce_soap__2006__04_metadata = {
    name: 'com_sforce_soap__2006__04_metadata',
    defaultElementNamespaceURI: 'http:\/\/soap.sforce.com\/2006\/04\/metadata',
    typeInfos: [{
        localName: 'RelatedList',
        propertyInfos: [{
            name: 'hideOnDetail',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'ReportColumn',
        propertyInfos: [{
            name: 'aggregateTypes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportSummaryType'
          }, {
            name: 'field',
            required: true
          }, {
            name: 'reverseColors',
            typeInfo: 'Boolean'
          }, {
            name: 'showChanges',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ApexTrigger',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'apiVersion',
            required: true,
            typeInfo: 'Double'
          }, {
            name: 'packageVersions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PackageVersion'
          }, {
            name: 'status',
            required: true,
            typeInfo: '.ApexCodeUnitStatus'
          }]
      }, {
        localName: 'SessionHeader',
        typeName: null,
        propertyInfos: [{
            name: 'sessionId',
            required: true
          }]
      }, {
        localName: 'AuraDefinitionBundle',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'svgContent',
            elementName: 'SVGContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'apiVersion',
            typeInfo: 'Double'
          }, {
            name: 'controllerContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'description'
          }, {
            name: 'designContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'documentationContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'helperContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'markup',
            typeInfo: 'Base64Binary'
          }, {
            name: 'modelContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'packageVersions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PackageVersion'
          }, {
            name: 'rendererContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'styleContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'testsuiteContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'type',
            typeInfo: '.AuraBundleType'
          }]
      }, {
        localName: 'FlowRule',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'conditionLogic',
            required: true
          }, {
            name: 'conditions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowCondition'
          }, {
            name: 'connector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'ReputationLevelDefinitions',
        propertyInfos: [{
            name: 'level',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReputationLevel'
          }]
      }, {
        localName: 'Retrieve',
        typeName: null,
        propertyInfos: [{
            name: 'retrieveRequest',
            required: true,
            typeInfo: '.RetrieveRequest'
          }]
      }, {
        localName: 'Roles',
        propertyInfos: [{
            name: 'role',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'KnowledgeCaseSettings',
        propertyInfos: [{
            name: 'articlePDFCreationProfile'
          }, {
            name: 'articlePublicSharingCommunities',
            typeInfo: '.KnowledgeCommunitiesSettings'
          }, {
            name: 'articlePublicSharingSites',
            typeInfo: '.KnowledgeSitesSettings'
          }, {
            name: 'articlePublicSharingSitesChatterAnswers',
            typeInfo: '.KnowledgeSitesSettings'
          }, {
            name: 'assignTo'
          }, {
            name: 'customizationClass'
          }, {
            name: 'defaultContributionArticleType'
          }, {
            name: 'editor',
            typeInfo: '.KnowledgeCaseEditor'
          }, {
            name: 'enableArticleCreation',
            typeInfo: 'Boolean'
          }, {
            name: 'enableArticlePublicSharingSites',
            typeInfo: 'Boolean'
          }, {
            name: 'enableCaseDataCategoryMapping',
            typeInfo: 'Boolean'
          }, {
            name: 'useProfileForPDFCreation',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'InstalledPackage',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'password'
          }, {
            name: 'versionNumber',
            required: true
          }]
      }, {
        localName: 'SaveResult',
        propertyInfos: [{
            name: 'errors',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Error'
          }, {
            name: 'fullName',
            required: true
          }, {
            name: 'success',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'SharingOwnerRule',
        baseTypeInfo: '.SharingBaseRule',
        propertyInfos: [{
            name: 'sharedFrom',
            required: true,
            typeInfo: '.SharedTo'
          }]
      }, {
        localName: 'FlowTranslation',
        propertyInfos: [{
            name: 'choices',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowChoiceTranslation'
          }, {
            name: 'fullName',
            required: true
          }, {
            name: 'label'
          }, {
            name: 'screens',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowScreenTranslation'
          }]
      }, {
        localName: 'ReportTypeSectionTranslation',
        propertyInfos: [{
            name: 'columns',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportTypeColumnTranslation'
          }, {
            name: 'label'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'LookupFilter',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'booleanFilter'
          }, {
            name: 'description'
          }, {
            name: 'errorMessage'
          }, {
            name: 'filterItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FilterItem'
          }, {
            name: 'infoMessage'
          }, {
            name: 'isOptional',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ChannelLayoutItem',
        propertyInfos: [{
            name: 'field',
            required: true
          }]
      }, {
        localName: 'EventSubscription',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            typeInfo: 'Boolean'
          }, {
            name: 'eventParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EventParameterMap'
          }, {
            name: 'eventType',
            required: true
          }, {
            name: 'referenceData',
            required: true
          }]
      }, {
        localName: 'ActionOverride',
        propertyInfos: [{
            name: 'actionName'
          }, {
            name: 'comment'
          }, {
            name: 'content'
          }, {
            name: 'formFactor',
            typeInfo: '.FormFactor'
          }, {
            name: 'skipRecordTypeSelect',
            typeInfo: 'Boolean'
          }, {
            name: 'type',
            typeInfo: '.ActionOverrideType'
          }]
      }, {
        localName: 'ActivitiesSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'allowUsersToRelateMultipleContactsToTasksAndEvents',
            typeInfo: 'Boolean'
          }, {
            name: 'autoRelateEventAttendees',
            typeInfo: 'Boolean'
          }, {
            name: 'enableActivityReminders',
            typeInfo: 'Boolean'
          }, {
            name: 'enableClickCreateEvents',
            typeInfo: 'Boolean'
          }, {
            name: 'enableDragAndDropScheduling',
            typeInfo: 'Boolean'
          }, {
            name: 'enableEmailTracking',
            typeInfo: 'Boolean'
          }, {
            name: 'enableGroupTasks',
            typeInfo: 'Boolean'
          }, {
            name: 'enableListViewScheduling',
            typeInfo: 'Boolean'
          }, {
            name: 'enableLogNote',
            typeInfo: 'Boolean'
          }, {
            name: 'enableMultidayEvents',
            typeInfo: 'Boolean'
          }, {
            name: 'enableRecurringEvents',
            typeInfo: 'Boolean'
          }, {
            name: 'enableRecurringTasks',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSidebarCalendarShortcut',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSimpleTaskCreateUI',
            typeInfo: 'Boolean'
          }, {
            name: 'enableUNSTaskDelegatedToNotifications',
            typeInfo: 'Boolean'
          }, {
            name: 'meetingRequestsLogo'
          }, {
            name: 'showCustomLogoMeetingRequests',
            typeInfo: 'Boolean'
          }, {
            name: 'showEventDetailsMultiUserCalendar',
            typeInfo: 'Boolean'
          }, {
            name: 'showHomePageHoverLinksForEvents',
            typeInfo: 'Boolean'
          }, {
            name: 'showMyTasksHoverLinks',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'DashboardGridComponent',
        propertyInfos: [{
            name: 'colSpan',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'columnIndex',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'dashboardComponent',
            required: true,
            typeInfo: '.DashboardComponent'
          }, {
            name: 'rowIndex',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'rowSpan',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'AutoResponseRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            typeInfo: 'Boolean'
          }, {
            name: 'ruleEntry',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RuleEntry'
          }]
      }, {
        localName: 'EmbeddedServiceBranding',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'contrastInvertedColor'
          }, {
            name: 'contrastPrimaryColor'
          }, {
            name: 'embeddedServiceConfig',
            required: true
          }, {
            name: 'font'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'navBarColor'
          }, {
            name: 'primaryColor'
          }, {
            name: 'secondaryColor'
          }]
      }, {
        localName: 'LicensedCustomPermissions',
        propertyInfos: [{
            name: 'customPermission',
            required: true
          }, {
            name: 'licenseDefinition',
            required: true
          }]
      }, {
        localName: 'DescribeValueType',
        typeName: null,
        propertyInfos: [{
            name: 'type',
            required: true
          }]
      }, {
        localName: 'AuthProvider',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'authorizeUrl'
          }, {
            name: 'consumerKey'
          }, {
            name: 'consumerSecret'
          }, {
            name: 'customMetadataTypeRecord'
          }, {
            name: 'defaultScopes'
          }, {
            name: 'errorUrl'
          }, {
            name: 'executionUser'
          }, {
            name: 'friendlyName',
            required: true
          }, {
            name: 'iconUrl'
          }, {
            name: 'idTokenIssuer'
          }, {
            name: 'includeOrgIdInIdentifier',
            typeInfo: 'Boolean'
          }, {
            name: 'logoutUrl'
          }, {
            name: 'plugin'
          }, {
            name: 'portal'
          }, {
            name: 'providerType',
            required: true,
            typeInfo: '.AuthProviderType'
          }, {
            name: 'registrationHandler'
          }, {
            name: 'sendAccessTokenInHeader',
            typeInfo: 'Boolean'
          }, {
            name: 'sendClientCredentialsInHeader',
            typeInfo: 'Boolean'
          }, {
            name: 'tokenUrl'
          }, {
            name: 'userInfoUrl'
          }]
      }, {
        localName: 'Profile',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'applicationVisibilities',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileApplicationVisibility'
          }, {
            name: 'categoryGroupVisibilities',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileCategoryGroupVisibility'
          }, {
            name: 'classAccesses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileApexClassAccess'
          }, {
            name: 'custom',
            typeInfo: 'Boolean'
          }, {
            name: 'customPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileCustomPermissions'
          }, {
            name: 'description'
          }, {
            name: 'externalDataSourceAccesses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileExternalDataSourceAccess'
          }, {
            name: 'fieldPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileFieldLevelSecurity'
          }, {
            name: 'layoutAssignments',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileLayoutAssignment'
          }, {
            name: 'loginHours',
            typeInfo: '.ProfileLoginHours'
          }, {
            name: 'loginIpRanges',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileLoginIpRange'
          }, {
            name: 'objectPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileObjectPermissions'
          }, {
            name: 'pageAccesses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileApexPageAccess'
          }, {
            name: 'profileActionOverrides',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileActionOverride'
          }, {
            name: 'recordTypeVisibilities',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileRecordTypeVisibility'
          }, {
            name: 'tabVisibilities',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileTabVisibility'
          }, {
            name: 'userLicense'
          }, {
            name: 'userPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileUserPermission'
          }]
      }, {
        localName: 'SocialCustomerServiceSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'caseSubjectOption',
            required: true,
            typeInfo: '.CaseSubjectOption'
          }]
      }, {
        localName: 'ForecastingTypeSettings',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'adjustmentsSettings',
            required: true,
            typeInfo: '.AdjustmentsSettings'
          }, {
            name: 'displayedCategoryApiNames',
            minOccurs: 0,
            collection: true
          }, {
            name: 'forecastRangeSettings',
            required: true,
            typeInfo: '.ForecastRangeSettings'
          }, {
            name: 'forecastedCategoryApiNames',
            minOccurs: 0,
            collection: true
          }, {
            name: 'forecastingDateType',
            required: true,
            typeInfo: '.ForecastingDateType'
          }, {
            name: 'hasProductFamily',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isAmount',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isAvailable',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isQuantity',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'managerAdjustableCategoryApiNames',
            minOccurs: 0,
            collection: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'name',
            required: true
          }, {
            name: 'opportunityListFieldsLabelMappings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.OpportunityListFieldsLabelMapping'
          }, {
            name: 'opportunityListFieldsSelectedSettings',
            required: true,
            typeInfo: '.OpportunityListFieldsSelectedSettings'
          }, {
            name: 'opportunityListFieldsUnselectedSettings',
            required: true,
            typeInfo: '.OpportunityListFieldsUnselectedSettings'
          }, {
            name: 'opportunitySplitName'
          }, {
            name: 'ownerAdjustableCategoryApiNames',
            minOccurs: 0,
            collection: true
          }, {
            name: 'quotasSettings',
            required: true,
            typeInfo: '.QuotasSettings'
          }, {
            name: 'territory2ModelName'
          }]
      }, {
        localName: 'GlobalQuickActionTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'DashboardComponentSection',
        propertyInfos: [{
            name: 'columnSize',
            required: true,
            typeInfo: '.DashboardComponentSize'
          }, {
            name: 'components',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DashboardComponent'
          }]
      }, {
        localName: 'OpportunityListFieldsSelectedSettings',
        propertyInfos: [{
            name: 'field',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'FeedItemSettings',
        propertyInfos: [{
            name: 'characterLimit',
            typeInfo: 'Int'
          }, {
            name: 'collapseThread',
            typeInfo: 'Boolean'
          }, {
            name: 'displayFormat',
            typeInfo: '.FeedItemDisplayFormat'
          }, {
            name: 'feedItemType',
            required: true,
            typeInfo: '.FeedItemType'
          }]
      }, {
        localName: 'ContentAssetLink',
        propertyInfos: [{
            name: 'access',
            required: true,
            typeInfo: '.ContentAssetAccess'
          }, {
            name: 'isManagingWorkspace',
            typeInfo: 'Boolean'
          }, {
            name: 'name'
          }]
      }, {
        localName: 'SiteDotCom',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'siteType',
            required: true,
            typeInfo: '.SiteType'
          }]
      }, {
        localName: 'Network',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'allowInternalUserLogin',
            typeInfo: 'Boolean'
          }, {
            name: 'allowMembersToFlag',
            typeInfo: 'Boolean'
          }, {
            name: 'allowedExtensions'
          }, {
            name: 'caseCommentEmailTemplate'
          }, {
            name: 'changePasswordTemplate',
            required: true
          }, {
            name: 'communityRoles',
            typeInfo: '.CommunityRoles'
          }, {
            name: 'description'
          }, {
            name: 'disableReputationRecordConversations',
            typeInfo: 'Boolean'
          }, {
            name: 'emailFooterLogo'
          }, {
            name: 'emailFooterText'
          }, {
            name: 'emailSenderAddress',
            required: true
          }, {
            name: 'emailSenderName',
            required: true
          }, {
            name: 'enableCustomVFErrorPageOverrides',
            typeInfo: 'Boolean'
          }, {
            name: 'enableDirectMessages',
            typeInfo: 'Boolean'
          }, {
            name: 'enableGuestChatter',
            typeInfo: 'Boolean'
          }, {
            name: 'enableGuestFileAccess',
            typeInfo: 'Boolean'
          }, {
            name: 'enableInvitation',
            typeInfo: 'Boolean'
          }, {
            name: 'enableKnowledgeable',
            typeInfo: 'Boolean'
          }, {
            name: 'enableNicknameDisplay',
            typeInfo: 'Boolean'
          }, {
            name: 'enablePrivateMessages',
            typeInfo: 'Boolean'
          }, {
            name: 'enableReputation',
            typeInfo: 'Boolean'
          }, {
            name: 'enableShowAllNetworkSettings',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSiteAsContainer',
            typeInfo: 'Boolean'
          }, {
            name: 'enableTalkingAboutStats',
            typeInfo: 'Boolean'
          }, {
            name: 'enableTopicAssignmentRules',
            typeInfo: 'Boolean'
          }, {
            name: 'enableTopicSuggestions',
            typeInfo: 'Boolean'
          }, {
            name: 'enableUpDownVote',
            typeInfo: 'Boolean'
          }, {
            name: 'feedChannel'
          }, {
            name: 'forgotPasswordTemplate',
            required: true
          }, {
            name: 'gatherCustomerSentimentData',
            typeInfo: 'Boolean'
          }, {
            name: 'logoutUrl'
          }, {
            name: 'maxFileSizeKb',
            typeInfo: 'Int'
          }, {
            name: 'navigationLinkSet',
            typeInfo: '.NavigationLinkSet'
          }, {
            name: 'networkMemberGroups',
            typeInfo: '.NetworkMemberGroup'
          }, {
            name: 'networkPageOverrides',
            typeInfo: '.NetworkPageOverride'
          }, {
            name: 'newSenderAddress'
          }, {
            name: 'picassoSite'
          }, {
            name: 'recommendationAudience',
            typeInfo: '.RecommendationAudience'
          }, {
            name: 'recommendationDefinition',
            typeInfo: '.RecommendationDefinition'
          }, {
            name: 'reputationLevels',
            typeInfo: '.ReputationLevelDefinitions'
          }, {
            name: 'reputationPointsRules',
            typeInfo: '.ReputationPointsRules'
          }, {
            name: 'selfRegProfile'
          }, {
            name: 'selfRegistration',
            typeInfo: 'Boolean'
          }, {
            name: 'sendWelcomeEmail',
            typeInfo: 'Boolean'
          }, {
            name: 'site',
            required: true
          }, {
            name: 'status',
            required: true,
            typeInfo: '.NetworkStatus'
          }, {
            name: 'tabs',
            required: true,
            typeInfo: '.NetworkTabSet'
          }, {
            name: 'urlPathPrefix'
          }, {
            name: 'welcomeTemplate',
            required: true
          }]
      }, {
        localName: 'DeployResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true,
            typeInfo: '.AsyncResult'
          }]
      }, {
        localName: 'EmbeddedServiceLiveAgent',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'avatarImg'
          }, {
            name: 'customPrechatComponent'
          }, {
            name: 'embeddedServiceConfig',
            required: true
          }, {
            name: 'embeddedServiceQuickActions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EmbeddedServiceQuickAction'
          }, {
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'fontSize',
            required: true,
            typeInfo: '.EmbeddedServiceFontSize'
          }, {
            name: 'headerBackgroundImg'
          }, {
            name: 'liveAgentChatUrl'
          }, {
            name: 'liveAgentContentUrl'
          }, {
            name: 'liveChatButton',
            required: true
          }, {
            name: 'liveChatDeployment',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'prechatBackgroundImg'
          }, {
            name: 'prechatEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'prechatJson'
          }, {
            name: 'scenario',
            required: true,
            typeInfo: '.EmbeddedServiceScenario'
          }, {
            name: 'smallCompanyLogoImg'
          }, {
            name: 'waitingStateBackgroundImg'
          }]
      }, {
        localName: 'FlowMetadataValue',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'DataCategory',
        propertyInfos: [{
            name: 'dataCategory',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DataCategory'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'NetworkTabSet',
        propertyInfos: [{
            name: 'customTab',
            minOccurs: 0,
            collection: true
          }, {
            name: 'defaultTab',
            required: true
          }, {
            name: 'standardTab',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'LayoutColumn',
        propertyInfos: [{
            name: 'layoutItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LayoutItem'
          }, {
            name: 'reserved'
          }]
      }, {
        localName: 'NavigationMenuItem',
        propertyInfos: [{
            name: 'defaultListViewId'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'position',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'publiclyAvailable',
            typeInfo: 'Boolean'
          }, {
            name: 'subMenu',
            typeInfo: '.NavigationSubMenu'
          }, {
            name: 'target'
          }, {
            name: 'targetPreference'
          }, {
            name: 'type',
            required: true
          }]
      }, {
        localName: 'Group',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'doesIncludeBosses',
            typeInfo: 'Boolean'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'AppWorkspaceConfig',
        propertyInfos: [{
            name: 'mappings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkspaceMapping'
          }]
      }, {
        localName: 'NavigationSubMenu',
        propertyInfos: [{
            name: 'navigationMenuItem',
            minOccurs: 0,
            collection: true,
            typeInfo: '.NavigationMenuItem'
          }]
      }, {
        localName: 'ObjectMapping',
        propertyInfos: [{
            name: 'inputObject',
            required: true
          }, {
            name: 'mappingFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ObjectMappingField'
          }, {
            name: 'outputObject',
            required: true
          }]
      }, {
        localName: 'AssignmentRules',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'assignmentRule',
            minOccurs: 0,
            collection: true,
            typeInfo: '.AssignmentRule'
          }]
      }, {
        localName: 'QueueSobject',
        propertyInfos: [{
            name: 'sobjectType',
            required: true
          }]
      }, {
        localName: 'RelatedListItem',
        propertyInfos: [{
            name: 'customButtons',
            minOccurs: 0,
            collection: true
          }, {
            name: 'excludeButtons',
            minOccurs: 0,
            collection: true
          }, {
            name: 'fields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'relatedList',
            required: true
          }, {
            name: 'sortField'
          }, {
            name: 'sortOrder',
            typeInfo: '.SortOrder'
          }]
      }, {
        localName: 'CommunityRoles',
        propertyInfos: [{
            name: 'customerUserRole'
          }, {
            name: 'employeeUserRole'
          }, {
            name: 'partnerUserRole'
          }]
      }, {
        localName: 'CustomLabelTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'KnowledgeWorkOrderLineItemFieldsSettings',
        propertyInfos: [{
            name: 'field',
            minOccurs: 0,
            collection: true,
            typeInfo: '.KnowledgeWorkOrderLineItemField'
          }]
      }, {
        localName: 'Users',
        propertyInfos: [{
            name: 'user',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'EmailTemplate',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'apiVersion',
            typeInfo: 'Double'
          }, {
            name: 'attachedDocuments',
            minOccurs: 0,
            collection: true
          }, {
            name: 'attachments',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Attachment'
          }, {
            name: 'available',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'encodingKey',
            required: true,
            typeInfo: '.Encoding'
          }, {
            name: 'letterhead'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'packageVersions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PackageVersion'
          }, {
            name: 'relatedEntityType'
          }, {
            name: 'style',
            required: true,
            typeInfo: '.EmailTemplateStyle'
          }, {
            name: 'subject'
          }, {
            name: 'textOnly'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.EmailTemplateType'
          }, {
            name: 'uiType',
            typeInfo: '.EmailTemplateUiType'
          }]
      }, {
        localName: 'Territory',
        baseTypeInfo: '.RoleOrTerritory',
        propertyInfos: [{
            name: 'accountAccessLevel'
          }, {
            name: 'parentTerritory'
          }]
      }, {
        localName: 'NetworkAccess',
        propertyInfos: [{
            name: 'ipRanges',
            minOccurs: 0,
            collection: true,
            typeInfo: '.IpRange'
          }]
      }, {
        localName: 'UpdateMetadata',
        typeName: null,
        propertyInfos: [{
            name: 'metadata',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Metadata'
          }]
      }, {
        localName: 'Folder',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'accessType',
            typeInfo: '.FolderAccessTypes'
          }, {
            name: 'folderShares',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FolderShare'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'publicFolderAccess',
            typeInfo: '.PublicFolderAccess'
          }, {
            name: 'sharedTo',
            typeInfo: '.SharedTo'
          }]
      }, {
        localName: 'ContentAssetRelationships',
        propertyInfos: [{
            name: 'insightsApplication',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ContentAssetLink'
          }, {
            name: 'network',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ContentAssetLink'
          }, {
            name: 'organization',
            typeInfo: '.ContentAssetLink'
          }, {
            name: 'workspace',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ContentAssetLink'
          }]
      }, {
        localName: 'ReportDataCategoryFilter',
        propertyInfos: [{
            name: 'dataCategory',
            required: true
          }, {
            name: 'dataCategoryGroup',
            required: true
          }, {
            name: 'operator',
            required: true,
            typeInfo: '.DataCategoryFilterOperation'
          }]
      }, {
        localName: 'ReportType',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'autogenerated',
            typeInfo: 'Boolean'
          }, {
            name: 'baseObject',
            required: true
          }, {
            name: 'category',
            required: true,
            typeInfo: '.ReportTypeCategory'
          }, {
            name: 'deployed',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'join',
            typeInfo: '.ObjectRelationship'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'sections',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportLayoutSection'
          }]
      }, {
        localName: 'NetworkBranding',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'loginFooterText'
          }, {
            name: 'loginLogo'
          }, {
            name: 'loginLogoName'
          }, {
            name: 'loginPrimaryColor'
          }, {
            name: 'loginQuaternaryColor'
          }, {
            name: 'loginRightFrameUrl'
          }, {
            name: 'network'
          }, {
            name: 'pageFooter'
          }, {
            name: 'pageHeader'
          }, {
            name: 'primaryColor',
            required: true
          }, {
            name: 'primaryComplementColor',
            required: true
          }, {
            name: 'quaternaryColor',
            required: true
          }, {
            name: 'quaternaryComplementColor',
            required: true
          }, {
            name: 'secondaryColor',
            required: true
          }, {
            name: 'staticLogoImageUrl'
          }, {
            name: 'tertiaryColor',
            required: true
          }, {
            name: 'tertiaryComplementColor',
            required: true
          }, {
            name: 'zeronaryColor',
            required: true
          }, {
            name: 'zeronaryComplementColor',
            required: true
          }]
      }, {
        localName: 'ComponentInstance',
        propertyInfos: [{
            name: 'componentInstanceProperties',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ComponentInstanceProperty'
          }, {
            name: 'componentName',
            required: true
          }, {
            name: 'visibilityRule',
            typeInfo: '.UiFormulaRule'
          }]
      }, {
        localName: 'LightningBolt',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'category',
            required: true,
            typeInfo: '.LightningBoltCategory'
          }, {
            name: 'lightningBoltFeatures',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LightningBoltFeatures'
          }, {
            name: 'lightningBoltImages',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LightningBoltImages'
          }, {
            name: 'lightningBoltItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LightningBoltItems'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'publisher',
            required: true
          }, {
            name: 'summary',
            required: true
          }]
      }, {
        localName: 'DashboardMobileSettings',
        propertyInfos: [{
            name: 'enableDashboardIPadApp',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'EmbeddedServiceConfig',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'masterLabel',
            required: true
          }, {
            name: 'site',
            required: true
          }]
      }, {
        localName: 'FlowWaitEvent',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'conditionLogic'
          }, {
            name: 'conditions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowCondition'
          }, {
            name: 'connector',
            required: true,
            typeInfo: '.FlowConnector'
          }, {
            name: 'eventType',
            required: true
          }, {
            name: 'inputParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowWaitEventInputParameter'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'outputParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowWaitEventOutputParameter'
          }]
      }, {
        localName: 'Orchestration',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'context',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }]
      }, {
        localName: 'QuickAction',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'canvas'
          }, {
            name: 'description'
          }, {
            name: 'fieldOverrides',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldOverride'
          }, {
            name: 'flowDefinition'
          }, {
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'icon'
          }, {
            name: 'isProtected',
            typeInfo: 'Boolean'
          }, {
            name: 'label'
          }, {
            name: 'lightningComponent'
          }, {
            name: 'optionsCreateFeedItem',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'page'
          }, {
            name: 'quickActionLayout',
            typeInfo: '.QuickActionLayout'
          }, {
            name: 'quickActionSendEmailOptions',
            typeInfo: '.QuickActionSendEmailOptions'
          }, {
            name: 'standardLabel',
            typeInfo: '.QuickActionLabel'
          }, {
            name: 'successMessage'
          }, {
            name: 'targetObject'
          }, {
            name: 'targetParentField'
          }, {
            name: 'targetRecordType'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.QuickActionType'
          }, {
            name: 'width',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'CustomDataType',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'customDataTypeComponents',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomDataTypeComponent'
          }, {
            name: 'description'
          }, {
            name: 'displayFormula'
          }, {
            name: 'editComponentsOnSeparateLines',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'rightAligned',
            typeInfo: 'Boolean'
          }, {
            name: 'supportComponentsInReports',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'LetterheadLine',
        propertyInfos: [{
            name: 'color',
            required: true
          }, {
            name: 'height',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'ContentAssetVersion',
        propertyInfos: [{
            name: 'number',
            required: true
          }, {
            name: 'pathOnClient',
            required: true
          }, {
            name: 'zipEntry'
          }]
      }, {
        localName: 'FindSimilarOppFilter',
        propertyInfos: [{
            name: 'similarOpportunitiesDisplayColumns',
            minOccurs: 0,
            collection: true
          }, {
            name: 'similarOpportunitiesMatchFields',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'FlowActionCallInputParameter',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'RoleAndSubordinatesInternal',
        propertyInfos: [{
            name: 'roleAndSubordinateInternal',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'ChartSummary',
        propertyInfos: [{
            name: 'aggregate',
            typeInfo: '.ReportSummaryType'
          }, {
            name: 'axisBinding',
            typeInfo: '.ChartAxis'
          }, {
            name: 'column',
            required: true
          }]
      }, {
        localName: 'ProfileUserPermission',
        propertyInfos: [{
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'PermissionSetApexPageAccess',
        propertyInfos: [{
            name: 'apexPage',
            required: true
          }, {
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'RelatedContentItem',
        propertyInfos: [{
            name: 'layoutItem',
            required: true,
            typeInfo: '.LayoutItem'
          }]
      }, {
        localName: 'FieldSetItem',
        propertyInfos: [{
            name: 'field'
          }, {
            name: 'isFieldManaged',
            typeInfo: 'Boolean'
          }, {
            name: 'isRequired',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'EscalationAction',
        propertyInfos: [{
            name: 'assignedTo'
          }, {
            name: 'assignedToTemplate'
          }, {
            name: 'assignedToType',
            typeInfo: '.AssignToLookupValueType'
          }, {
            name: 'minutesToEscalation',
            typeInfo: 'Int'
          }, {
            name: 'notifyCaseOwner',
            typeInfo: 'Boolean'
          }, {
            name: 'notifyEmail',
            minOccurs: 0,
            collection: true
          }, {
            name: 'notifyTo'
          }, {
            name: 'notifyToTemplate'
          }]
      }, {
        localName: 'LightningBoltImages',
        propertyInfos: [{
            name: 'image',
            required: true
          }, {
            name: 'order',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'WorkflowRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'actions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowActionReference'
          }, {
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'booleanFilter'
          }, {
            name: 'criteriaItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FilterItem'
          }, {
            name: 'description'
          }, {
            name: 'formula'
          }, {
            name: 'triggerType',
            required: true,
            typeInfo: '.WorkflowTriggerTypes'
          }, {
            name: 'workflowTimeTriggers',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowTimeTrigger'
          }]
      }, {
        localName: 'AppActionOverride',
        baseTypeInfo: '.ActionOverride',
        propertyInfos: [{
            name: 'pageOrSobjectType',
            required: true
          }]
      }, {
        localName: 'DuplicateRuleMatchRule',
        propertyInfos: [{
            name: 'matchRuleSObjectType',
            required: true
          }, {
            name: 'matchingRule',
            required: true
          }, {
            name: 'objectMapping',
            required: true,
            typeInfo: '.ObjectMapping'
          }]
      }, {
        localName: 'MatchingRuleItem',
        propertyInfos: [{
            name: 'blankValueBehavior',
            typeInfo: '.BlankValueBehavior'
          }, {
            name: 'fieldName',
            required: true
          }, {
            name: 'matchingMethod',
            required: true,
            typeInfo: '.MatchingMethod'
          }]
      }, {
        localName: 'PasswordPolicies',
        propertyInfos: [{
            name: 'apiOnlyUserHomePageURL'
          }, {
            name: 'complexity',
            typeInfo: '.Complexity'
          }, {
            name: 'expiration',
            typeInfo: '.Expiration'
          }, {
            name: 'historyRestriction'
          }, {
            name: 'lockoutInterval',
            typeInfo: '.LockoutInterval'
          }, {
            name: 'maxLoginAttempts',
            typeInfo: '.MaxLoginAttempts'
          }, {
            name: 'minimumPasswordLength'
          }, {
            name: 'minimumPasswordLifetime',
            typeInfo: 'Boolean'
          }, {
            name: 'obscureSecretAnswer',
            typeInfo: 'Boolean'
          }, {
            name: 'passwordAssistanceMessage'
          }, {
            name: 'passwordAssistanceURL'
          }, {
            name: 'questionRestriction',
            typeInfo: '.QuestionRestriction'
          }]
      }, {
        localName: 'WebLink',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'availability',
            required: true,
            typeInfo: '.WebLinkAvailability'
          }, {
            name: 'description'
          }, {
            name: 'displayType',
            required: true,
            typeInfo: '.WebLinkDisplayType'
          }, {
            name: 'encodingKey',
            typeInfo: '.Encoding'
          }, {
            name: 'hasMenubar',
            typeInfo: 'Boolean'
          }, {
            name: 'hasScrollbars',
            typeInfo: 'Boolean'
          }, {
            name: 'hasToolbar',
            typeInfo: 'Boolean'
          }, {
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'isResizable',
            typeInfo: 'Boolean'
          }, {
            name: 'linkType',
            required: true,
            typeInfo: '.WebLinkType'
          }, {
            name: 'masterLabel'
          }, {
            name: 'openType',
            required: true,
            typeInfo: '.WebLinkWindowType'
          }, {
            name: 'page'
          }, {
            name: 'position',
            typeInfo: '.WebLinkPosition'
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }, {
            name: 'requireRowSelection',
            typeInfo: 'Boolean'
          }, {
            name: 'scontrol'
          }, {
            name: 'showsLocation',
            typeInfo: 'Boolean'
          }, {
            name: 'showsStatus',
            typeInfo: 'Boolean'
          }, {
            name: 'url'
          }, {
            name: 'width',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'SharingRecalculation',
        propertyInfos: [{
            name: 'className',
            required: true
          }]
      }, {
        localName: 'FlowConnector',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'targetReference',
            required: true
          }]
      }, {
        localName: 'ApexPage',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'apiVersion',
            required: true,
            typeInfo: 'Double'
          }, {
            name: 'availableInTouch',
            typeInfo: 'Boolean'
          }, {
            name: 'confirmationTokenRequired',
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'packageVersions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PackageVersion'
          }]
      }, {
        localName: 'ApprovalStep',
        propertyInfos: [{
            name: 'allowDelegate',
            typeInfo: 'Boolean'
          }, {
            name: 'approvalActions',
            typeInfo: '.ApprovalAction'
          }, {
            name: 'assignedApprover',
            required: true,
            typeInfo: '.ApprovalStepApprover'
          }, {
            name: 'description'
          }, {
            name: 'entryCriteria',
            typeInfo: '.ApprovalEntryCriteria'
          }, {
            name: 'ifCriteriaNotMet',
            typeInfo: '.StepCriteriaNotMetType'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }, {
            name: 'rejectBehavior',
            typeInfo: '.ApprovalStepRejectBehavior'
          }, {
            name: 'rejectionActions',
            typeInfo: '.ApprovalAction'
          }]
      }, {
        localName: 'FlowScreenFieldTranslation',
        propertyInfos: [{
            name: 'fieldText'
          }, {
            name: 'helpText'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'validationRule',
            typeInfo: '.FlowInputValidationRuleTranslation'
          }]
      }, {
        localName: 'ConnectedAppMobileDetailConfig',
        propertyInfos: [{
            name: 'applicationBinaryFile',
            typeInfo: 'Base64Binary'
          }, {
            name: 'applicationBinaryFileName'
          }, {
            name: 'applicationBundleIdentifier'
          }, {
            name: 'applicationFileLength',
            typeInfo: 'Int'
          }, {
            name: 'applicationIconFile'
          }, {
            name: 'applicationIconFileName'
          }, {
            name: 'applicationInstallUrl'
          }, {
            name: 'devicePlatform',
            required: true,
            typeInfo: '.DevicePlatformType'
          }, {
            name: 'deviceType',
            typeInfo: '.DeviceType'
          }, {
            name: 'minimumOsVersion'
          }, {
            name: 'privateApp',
            typeInfo: 'Boolean'
          }, {
            name: 'version',
            required: true
          }]
      }, {
        localName: 'DescribeMetadata',
        typeName: null,
        propertyInfos: [{
            name: 'asOfVersion',
            required: true,
            typeInfo: 'Double'
          }]
      }, {
        localName: 'WaveXmdDimensionMember',
        propertyInfos: [{
            name: 'color'
          }, {
            name: 'label'
          }, {
            name: 'member',
            required: true
          }, {
            name: 'sortIndex',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'WaveXmdOrganization',
        propertyInfos: [{
            name: 'instanceUrl',
            required: true
          }, {
            name: 'label',
            required: true
          }, {
            name: 'organizationIdentifier',
            required: true
          }, {
            name: 'sortIndex',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'CustomConsoleComponents',
        propertyInfos: [{
            name: 'primaryTabComponents',
            typeInfo: '.PrimaryTabComponents'
          }, {
            name: 'subtabComponents',
            typeInfo: '.SubtabComponents'
          }]
      }, {
        localName: 'CustomMetadataValue',
        propertyInfos: [{
            name: 'field',
            required: true
          }, {
            name: 'value',
            required: true,
            typeInfo: 'AnyType'
          }]
      }, {
        localName: 'CountriesAndStates',
        propertyInfos: [{
            name: 'countries',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Country'
          }]
      }, {
        localName: 'FlowTextTemplate',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'text',
            required: true
          }]
      }, {
        localName: 'AccountSharingRuleSettings',
        propertyInfos: [{
            name: 'caseAccessLevel',
            required: true
          }, {
            name: 'contactAccessLevel',
            required: true
          }, {
            name: 'opportunityAccessLevel',
            required: true
          }]
      }, {
        localName: 'SidebarComponent',
        propertyInfos: [{
            name: 'componentType',
            required: true
          }, {
            name: 'createAction'
          }, {
            name: 'enableLinking',
            typeInfo: 'Boolean'
          }, {
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'label'
          }, {
            name: 'lookup'
          }, {
            name: 'page'
          }, {
            name: 'relatedLists',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RelatedList'
          }, {
            name: 'unit'
          }, {
            name: 'updateAction'
          }, {
            name: 'width',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'MarketingResourceType',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'object',
            required: true
          }, {
            name: 'provider',
            required: true
          }]
      }, {
        localName: 'PrimaryTabComponents',
        propertyInfos: [{
            name: 'containers',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Container'
          }]
      }, {
        localName: 'FlowAssignment',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'assignmentItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowAssignmentItem'
          }, {
            name: 'connector',
            typeInfo: '.FlowConnector'
          }]
      }, {
        localName: 'ReportFilter',
        propertyInfos: [{
            name: 'booleanFilter'
          }, {
            name: 'criteriaItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportFilterItem'
          }, {
            name: 'language',
            typeInfo: '.Language'
          }]
      }, {
        localName: 'SharingTerritoryRule',
        baseTypeInfo: '.SharingOwnerRule'
      }, {
        localName: 'ListViewFilter',
        propertyInfos: [{
            name: 'field',
            required: true
          }, {
            name: 'operation',
            required: true,
            typeInfo: '.FilterOperation'
          }, {
            name: 'value'
          }]
      }, {
        localName: 'RunTestsResult',
        propertyInfos: [{
            name: 'apexLogId'
          }, {
            name: 'codeCoverage',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CodeCoverageResult'
          }, {
            name: 'codeCoverageWarnings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CodeCoverageWarning'
          }, {
            name: 'failures',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RunTestFailure'
          }, {
            name: 'numFailures',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'numTestsRun',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'successes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RunTestSuccess'
          }, {
            name: 'totalTime',
            required: true,
            typeInfo: 'Double'
          }]
      }, {
        localName: 'SFDCMobileSettings',
        propertyInfos: [{
            name: 'enableMobileLite',
            typeInfo: 'Boolean'
          }, {
            name: 'enableUserToDeviceLinking',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ReportBlockInfo',
        propertyInfos: [{
            name: 'aggregateReferences',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportAggregateReference'
          }, {
            name: 'blockId',
            required: true
          }, {
            name: 'joinTable',
            required: true
          }]
      }, {
        localName: 'LogInfo',
        propertyInfos: [{
            name: 'category',
            required: true,
            typeInfo: '.LogCategory'
          }, {
            name: 'level',
            required: true,
            typeInfo: '.LogCategoryLevel'
          }]
      }, {
        localName: 'CompanySettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'fiscalYear',
            typeInfo: '.FiscalYearSettings'
          }]
      }, {
        localName: 'CustomExperienceTabSet',
        propertyInfos: [{
            name: 'customTab',
            minOccurs: 0,
            collection: true
          }, {
            name: 'defaultTab',
            required: true
          }, {
            name: 'standardTab',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'PostTemplate',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: '_default',
            elementName: 'default',
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'fields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'FileProperties',
        propertyInfos: [{
            name: 'createdById',
            required: true
          }, {
            name: 'createdByName',
            required: true
          }, {
            name: 'createdDate',
            required: true,
            typeInfo: 'DateTime'
          }, {
            name: 'fileName',
            required: true
          }, {
            name: 'fullName',
            required: true
          }, {
            name: 'id',
            required: true
          }, {
            name: 'lastModifiedById',
            required: true
          }, {
            name: 'lastModifiedByName',
            required: true
          }, {
            name: 'lastModifiedDate',
            required: true,
            typeInfo: 'DateTime'
          }, {
            name: 'manageableState',
            typeInfo: '.ManageableState'
          }, {
            name: 'namespacePrefix'
          }, {
            name: 'type',
            required: true
          }]
      }, {
        localName: 'RecordTypeTranslation',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'CustomObject',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'actionOverrides',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ActionOverride'
          }, {
            name: 'allowInChatterGroups',
            typeInfo: 'Boolean'
          }, {
            name: 'articleTypeChannelDisplay',
            typeInfo: '.ArticleTypeChannelDisplay'
          }, {
            name: 'businessProcesses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.BusinessProcess'
          }, {
            name: 'compactLayoutAssignment'
          }, {
            name: 'compactLayouts',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CompactLayout'
          }, {
            name: 'customHelp'
          }, {
            name: 'customHelpPage'
          }, {
            name: 'customSettingsType',
            typeInfo: '.CustomSettingsType'
          }, {
            name: 'dataStewardGroup'
          }, {
            name: 'dataStewardUser'
          }, {
            name: 'deploymentStatus',
            typeInfo: '.DeploymentStatus'
          }, {
            name: 'deprecated',
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'enableActivities',
            typeInfo: 'Boolean'
          }, {
            name: 'enableBulkApi',
            typeInfo: 'Boolean'
          }, {
            name: 'enableChangeDataCapture',
            typeInfo: 'Boolean'
          }, {
            name: 'enableDivisions',
            typeInfo: 'Boolean'
          }, {
            name: 'enableEnhancedLookup',
            typeInfo: 'Boolean'
          }, {
            name: 'enableFeeds',
            typeInfo: 'Boolean'
          }, {
            name: 'enableHistory',
            typeInfo: 'Boolean'
          }, {
            name: 'enableReports',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSearch',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSharing',
            typeInfo: 'Boolean'
          }, {
            name: 'enableStreamingApi',
            typeInfo: 'Boolean'
          }, {
            name: 'eventType',
            typeInfo: '.PlatformEventType'
          }, {
            name: 'externalDataSource'
          }, {
            name: 'externalName'
          }, {
            name: 'externalRepository'
          }, {
            name: 'externalSharingModel',
            typeInfo: '.SharingModel'
          }, {
            name: 'fieldSets',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldSet'
          }, {
            name: 'fields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomField'
          }, {
            name: 'gender',
            typeInfo: '.Gender'
          }, {
            name: 'historyRetentionPolicy',
            typeInfo: '.HistoryRetentionPolicy'
          }, {
            name: 'household',
            typeInfo: 'Boolean'
          }, {
            name: 'indexes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Index'
          }, {
            name: 'label'
          }, {
            name: 'listViews',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ListView'
          }, {
            name: 'nameField',
            typeInfo: '.CustomField'
          }, {
            name: 'pluralLabel'
          }, {
            name: 'recordTypeTrackFeedHistory',
            typeInfo: 'Boolean'
          }, {
            name: 'recordTypeTrackHistory',
            typeInfo: 'Boolean'
          }, {
            name: 'recordTypes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RecordType'
          }, {
            name: 'searchLayouts',
            typeInfo: '.SearchLayouts'
          }, {
            name: 'sharingModel',
            typeInfo: '.SharingModel'
          }, {
            name: 'sharingReasons',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SharingReason'
          }, {
            name: 'sharingRecalculations',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SharingRecalculation'
          }, {
            name: 'startsWith',
            typeInfo: '.StartsWith'
          }, {
            name: 'validationRules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ValidationRule'
          }, {
            name: 'visibility',
            typeInfo: '.SetupObjectVisibility'
          }, {
            name: 'webLinks',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WebLink'
          }]
      }, {
        localName: 'ReputationPointsRule',
        propertyInfos: [{
            name: 'eventType',
            required: true
          }, {
            name: 'points',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'FlowScreenFieldOutputParameter',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'assignToReference',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'FlowElementReferenceOrValue',
        propertyInfos: [{
            name: 'booleanValue',
            mixed: false,
            allowDom: false,
            typeInfo: 'Boolean',
            type: 'elementRef'
          }, {
            name: 'dateTimeValue',
            typeInfo: 'DateTime'
          }, {
            name: 'dateValue',
            typeInfo: 'Date'
          }, {
            name: 'elementReference'
          }, {
            name: 'numberValue',
            mixed: false,
            allowDom: false,
            typeInfo: 'Double',
            type: 'elementRef'
          }, {
            name: 'stringValue'
          }]
      }, {
        localName: 'CustomFieldTranslation',
        propertyInfos: [{
            name: 'caseValues',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ObjectNameCaseValue'
          }, {
            name: 'gender',
            typeInfo: '.Gender'
          }, {
            name: 'help'
          }, {
            name: 'label'
          }, {
            name: 'lookupFilter',
            typeInfo: '.LookupFilterTranslation'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'picklistValues',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PicklistValueTranslation'
          }, {
            name: 'relationshipLabel'
          }, {
            name: 'startsWith',
            typeInfo: '.StartsWith'
          }]
      }, {
        localName: 'CheckDeployStatus',
        typeName: null,
        propertyInfos: [{
            name: 'asyncProcessId',
            required: true
          }, {
            name: 'includeDetails',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'CallCenterItem',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }, {
            name: 'value',
            required: true
          }]
      }, {
        localName: 'AsyncResult',
        propertyInfos: [{
            name: 'done',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'id',
            required: true
          }, {
            name: 'message'
          }, {
            name: 'state',
            required: true,
            typeInfo: '.AsyncRequestState'
          }, {
            name: 'statusCode',
            values: ['ALL_OR_NONE_OPERATION_ROLLED_BACK', 'ALREADY_IN_PROCESS', 'APEX_DATA_ACCESS_RESTRICTION', 'ASSIGNEE_TYPE_REQUIRED', 'AURA_COMPILE_ERROR', 'BAD_CUSTOM_ENTITY_PARENT_DOMAIN', 'BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED', 'CANNOT_CASCADE_PRODUCT_ACTIVE', 'CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD', 'CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD', 'CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE', 'CANNOT_DEACTIVATE_DIVISION', 'CANNOT_DELETE_GLOBAL_ACTION_LIST', 'CANNOT_DELETE_LAST_DATED_CONVERSION_RATE', 'CANNOT_DELETE_MANAGED_OBJECT', 'CANNOT_DISABLE_LAST_ADMIN', 'CANNOT_ENABLE_IP_RESTRICT_REQUESTS', 'CANNOT_EXECUTE_FLOW_TRIGGER', 'CANNOT_FREEZE_SELF', 'CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY', 'CANNOT_MODIFY_MANAGED_OBJECT', 'CANNOT_PASSWORD_LOCKOUT', 'CANNOT_POST_TO_ARCHIVED_GROUP', 'CANNOT_RENAME_APEX_REFERENCED_FIELD', 'CANNOT_RENAME_APEX_REFERENCED_OBJECT', 'CANNOT_RENAME_REFERENCED_FIELD', 'CANNOT_RENAME_REFERENCED_OBJECT', 'CANNOT_REPARENT_RECORD', 'CANNOT_UPDATE_CONVERTED_LEAD', 'CANT_DISABLE_CORP_CURRENCY', 'CANT_UNSET_CORP_CURRENCY', 'CHILD_SHARE_FAILS_PARENT', 'CIRCULAR_DEPENDENCY', 'CLEAN_SERVICE_ERROR', 'COLLISION_DETECTED', 'COMMERCIAL_CONTROL_ERROR', 'COMMUNITY_NOT_ACCESSIBLE', 'CONFLICTING_ENVIRONMENT_HUB_MEMBER', 'CONFLICTING_SSO_USER_MAPPING', 'CUSTOM_APEX_ERROR', 'CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED', 'CUSTOM_ENTITY_OR_FIELD_LIMIT', 'CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED', 'CUSTOM_INDEX_EXISTS', 'CUSTOM_LINK_LIMIT_EXCEEDED', 'CUSTOM_METADATA_LIMIT_EXCEEDED', 'CUSTOM_METADATA_REL_FIELD_MANAGEABILITY', 'CUSTOM_SETTINGS_LIMIT_EXCEEDED', 'CUSTOM_TAB_LIMIT_EXCEEDED', 'DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR', 'DATAASSESSMENT_CONFIG_SERVICE_ERROR', 'DATACLOUDADDRESS_NO_RECORDS_FOUND', 'DATACLOUDADDRESS_PROCESSING_ERROR', 'DATACLOUDADDRESS_SERVER_ERROR', 'DELETE_FAILED', 'DELETE_NOT_ALLOWED', 'DELETE_OPERATION_TOO_LARGE', 'DELETE_REQUIRED_ON_CASCADE', 'DEPENDENCY_EXISTS', 'DUPLICATES_DETECTED', 'DUPLICATE_CASE_SOLUTION', 'DUPLICATE_COMM_NICKNAME', 'DUPLICATE_CUSTOM_ENTITY_DEFINITION', 'DUPLICATE_CUSTOM_TAB_MOTIF', 'DUPLICATE_DEVELOPER_NAME', 'DUPLICATE_EXTERNAL_ID', 'DUPLICATE_MASTER_LABEL', 'DUPLICATE_SENDER_DISPLAY_NAME', 'DUPLICATE_USERNAME', 'DUPLICATE_VALUE', 'EMAIL_ADDRESS_BOUNCED', 'EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR', 'EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR', 'EMAIL_OPTED_OUT', 'EMAIL_TEMPLATE_FORMULA_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR', 'EMAIL_TEMPLATE_PROCESSING_ERROR', 'EMPTY_SCONTROL_FILE_NAME', 'ENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR', 'ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE', 'ENTITY_IS_ARCHIVED', 'ENTITY_IS_DELETED', 'ENTITY_IS_LOCKED', 'ENTITY_SAVE_ERROR', 'ENTITY_SAVE_VALIDATION_ERROR', 'ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT', 'ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB', 'ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB', 'ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN', 'ERROR_IN_MAILER', 'EXCHANGE_WEB_SERVICES_URL_INVALID', 'FAILED_ACTIVATION', 'FIELD_CUSTOM_VALIDATION_EXCEPTION', 'FIELD_FILTER_VALIDATION_EXCEPTION', 'FIELD_INTEGRITY_EXCEPTION', 'FIELD_KEYWORD_LIST_MATCH_LIMIT', 'FIELD_MAPPING_ERROR', 'FIELD_MODERATION_RULE_BLOCK', 'FIELD_NOT_UPDATABLE', 'FILE_EXTENSION_NOT_ALLOWED', 'FILE_SIZE_LIMIT_EXCEEDED', 'FILTERED_LOOKUP_LIMIT_EXCEEDED', 'FIND_DUPLICATES_ERROR', 'FLOW_EXCEPTION', 'FUNCTIONALITY_NOT_ENABLED', 'HAS_PUBLIC_REFERENCES', 'HTML_FILE_UPLOAD_NOT_ALLOWED', 'IMAGE_TOO_LARGE', 'INACTIVE_OWNER_OR_USER', 'INACTIVE_RULE_ERROR', 'INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE', 'INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY', 'INSUFFICIENT_ACCESS_OR_READONLY', 'INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA', 'INSUFFICIENT_CREDITS', 'INTERNAL_ERROR', 'INVALID_ACCESS_LEVEL', 'INVALID_ACCESS_TOKEN', 'INVALID_API_INPUT', 'INVALID_ARGUMENT_TYPE', 'INVALID_ASSIGNEE_TYPE', 'INVALID_ASSIGNMENT_RULE', 'INVALID_BATCH_OPERATION', 'INVALID_CONTENT_TYPE', 'INVALID_CREDIT_CARD_INFO', 'INVALID_CROSS_REFERENCE_KEY', 'INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD', 'INVALID_CURRENCY_CONV_RATE', 'INVALID_CURRENCY_CORP_RATE', 'INVALID_CURRENCY_ISO', 'INVALID_DATASET_REFERENCE_INPUT', 'INVALID_DATA_CATEGORY_GROUP_REFERENCE', 'INVALID_DATA_URI', 'INVALID_EMAIL_ADDRESS', 'INVALID_EMPTY_KEY_OWNER', 'INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR', 'INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR', 'INVALID_ENTITY_FOR_UPSERT', 'INVALID_ENVIRONMENT_HUB_MEMBER', 'INVALID_EVENT_DELIVERY', 'INVALID_EVENT_INPUT', 'INVALID_EVENT_SUBSCRIPTION', 'INVALID_EXTENSION_ID', 'INVALID_FIELD', 'INVALID_FIELD_FOR_INSERT_UPDATE', 'INVALID_FIELD_WHEN_USING_TEMPLATE', 'INVALID_FILTER_ACTION', 'INVALID_GOOGLE_DOCS_URL', 'INVALID_ID_FIELD', 'INVALID_INET_ADDRESS', 'INVALID_INPUT', 'INVALID_KEY_FIELD_INPUT', 'INVALID_LINEITEM_CLONE_STATE', 'INVALID_MARKUP', 'INVALID_MASTER_OR_TRANSLATED_SOLUTION', 'INVALID_MESSAGE_ID_REFERENCE', 'INVALID_NAMESPACE_PREFIX', 'INVALID_OAUTH_URL', 'INVALID_OPERATION', 'INVALID_OPERATOR', 'INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST', 'INVALID_OWNER', 'INVALID_PACKAGE_LICENSE', 'INVALID_PACKAGE_VERSION', 'INVALID_PARTNER_NETWORK_STATUS', 'INVALID_PAYLOAD_VERSION', 'INVALID_PERSON_ACCOUNT_OPERATION', 'INVALID_PROVIDER_TYPE', 'INVALID_QUERY_LOCATOR', 'INVALID_READ_ONLY_USER_DML', 'INVALID_REFRESH_TOKEN', 'INVALID_RUNTIME_VALUE', 'INVALID_SAVE_AS_ACTIVITY_FLAG', 'INVALID_SESSION_ID', 'INVALID_SETUP_OWNER', 'INVALID_SIGNUP_COUNTRY', 'INVALID_SIGNUP_OPTION', 'INVALID_SITE_DELETE_EXCEPTION', 'INVALID_SITE_FILE_IMPORTED_EXCEPTION', 'INVALID_SITE_FILE_TYPE_EXCEPTION', 'INVALID_STATUS', 'INVALID_SUBDOMAIN', 'INVALID_TEXT_REPRESENTATION', 'INVALID_TYPE', 'INVALID_TYPE_FOR_OPERATION', 'INVALID_TYPE_ON_FIELD_IN_RECORD', 'INVALID_USERID', 'IP_RANGE_LIMIT_EXCEEDED', 'ITEM_NOT_FOUND', 'JIGSAW_IMPORT_LIMIT_EXCEEDED', 'LICENSE_LIMIT_EXCEEDED', 'LIGHT_PORTAL_USER_EXCEPTION', 'LIMIT_EXCEEDED', 'MALFORMED_ID', 'MANAGER_NOT_DEFINED', 'MASSMAIL_RETRY_LIMIT_EXCEEDED', 'MASS_MAIL_LIMIT_EXCEEDED', 'MATCH_DEFINITION_ERROR', 'MATCH_OPERATION_ERROR', 'MATCH_OPERATION_INVALID_ENGINE_ERROR', 'MATCH_OPERATION_INVALID_RULE_ERROR', 'MATCH_OPERATION_MISSING_ENGINE_ERROR', 'MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR', 'MATCH_OPERATION_MISSING_OPTIONS_ERROR', 'MATCH_OPERATION_MISSING_RULE_ERROR', 'MATCH_OPERATION_UNKNOWN_RULE_ERROR', 'MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR', 'MATCH_PRECONDITION_FAILED', 'MATCH_RUNTIME_ERROR', 'MATCH_SERVICE_ERROR', 'MATCH_SERVICE_TIMED_OUT', 'MATCH_SERVICE_UNAVAILABLE_ERROR', 'MAXIMUM_CCEMAILS_EXCEEDED', 'MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED', 'MAXIMUM_HIERARCHY_CHILDREN_REACHED', 'MAXIMUM_HIERARCHY_LEVELS_REACHED', 'MAXIMUM_HIERARCHY_TREE_SIZE_REACHED', 'MAXIMUM_SIZE_OF_ATTACHMENT', 'MAXIMUM_SIZE_OF_DOCUMENT', 'MAX_ACTIONS_PER_RULE_EXCEEDED', 'MAX_ACTIVE_RULES_EXCEEDED', 'MAX_APPROVAL_STEPS_EXCEEDED', 'MAX_DEPTH_IN_FLOW_EXECUTION', 'MAX_FORMULAS_PER_RULE_EXCEEDED', 'MAX_LIMIT_EXCEEDED', 'MAX_RULES_EXCEEDED', 'MAX_RULE_ENTRIES_EXCEEDED', 'MAX_TASK_DESCRIPTION_EXCEEEDED', 'MAX_TM_RULES_EXCEEDED', 'MAX_TM_RULE_ITEMS_EXCEEDED', 'MAX_TRIGGERS_EXCEEDED', 'MERGE_FAILED', 'METADATA_FIELD_UPDATE_ERROR', 'MISSING_ARGUMENT', 'MISSING_RECORD', 'MIXED_DML_OPERATION', 'NONUNIQUE_SHIPPING_ADDRESS', 'NO_ACCESS_TOKEN', 'NO_ACCESS_TOKEN_FROM_REFRESH', 'NO_APPLICABLE_PROCESS', 'NO_ATTACHMENT_PERMISSION', 'NO_AUTH_PROVIDER', 'NO_INACTIVE_DIVISION_MEMBERS', 'NO_MASS_MAIL_PERMISSION', 'NO_PARTNER_PERMISSION', 'NO_REFRESH_TOKEN', 'NO_SUCH_USER_EXISTS', 'NO_TOKEN_ENDPOINT', 'NUMBER_OUTSIDE_VALID_RANGE', 'NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED', 'OPTED_OUT_OF_MASS_MAIL', 'OP_WITH_INVALID_USER_TYPE_EXCEPTION', 'ORCHESTRATION_INVALID', 'PACKAGE_LICENSE_REQUIRED', 'PACKAGING_API_INSTALL_FAILED', 'PACKAGING_API_UNINSTALL_FAILED', 'PALI_INVALID_ACTION_ID', 'PALI_INVALID_ACTION_NAME', 'PALI_INVALID_ACTION_TYPE', 'PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID', 'PAL_INVALID_ENTITY_ID', 'PAL_INVALID_FLEXIPAGE_ID', 'PAL_INVALID_LAYOUT_ID', 'PAL_INVALID_PARAMETERS', 'PAYLOAD_SIZE_EXCEEDED', 'PA_API_EXCEPTION', 'PA_AXIS_FAULT', 'PA_INVALID_ID_EXCEPTION', 'PA_NO_ACCESS_EXCEPTION', 'PA_NO_DATA_FOUND_EXCEPTION', 'PA_URI_SYNTAX_EXCEPTION', 'PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION', 'PORTAL_NO_ACCESS', 'PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT', 'PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION', 'PRIVATE_CONTACT_ON_ASSET', 'PROCESSING_HALTED', 'QA_INVALID_CREATE_FEED_ITEM', 'QA_INVALID_SUCCESS_MESSAGE', 'QUERY_TIMEOUT', 'QUICK_ACTION_LIST_ITEM_NOT_ALLOWED', 'QUICK_ACTION_LIST_NOT_ALLOWED', 'RECORD_IN_USE_BY_WORKFLOW', 'REL_FIELD_BAD_ACCESSIBILITY', 'REPUTATION_MINIMUM_NUMBER_NOT_REACHED', 'REQUEST_RUNNING_TOO_LONG', 'REQUIRED_FEATURE_MISSING', 'REQUIRED_FIELD_MISSING', 'RETRIEVE_EXCHANGE_ATTACHMENT_FAILED', 'RETRIEVE_EXCHANGE_EMAIL_FAILED', 'RETRIEVE_EXCHANGE_EVENT_FAILED', 'RETRIEVE_GOOGLE_EMAIL_FAILED', 'RETRIEVE_GOOGLE_EVENT_FAILED', 'RETRIEVE_USER_CONFIG_ERROR', 'SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR', 'SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR', 'SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR', 'SELF_REFERENCE_FROM_FLOW', 'SELF_REFERENCE_FROM_TRIGGER', 'SHARE_NEEDED_FOR_CHILD_OWNER', 'SINGLE_EMAIL_LIMIT_EXCEEDED', 'SOCIAL_ACCOUNT_NOT_FOUND', 'SOCIAL_ACTION_INVALID', 'SOCIAL_PERSONA_NOT_FOUND', 'SOCIAL_POST_INVALID', 'SOCIAL_POST_NOT_FOUND', 'STANDARD_PRICE_NOT_DEFINED', 'STORAGE_LIMIT_EXCEEDED', 'STRING_TOO_LONG', 'SUBDOMAIN_IN_USE', 'TABSET_LIMIT_EXCEEDED', 'TEMPLATE_NOT_ACTIVE', 'TEMPLATE_NOT_FOUND', 'TERMS_OF_SERVICE_UNREAD', 'TERRITORY_REALIGN_IN_PROGRESS', 'TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET', 'TOO_MANY_APEX_REQUESTS', 'TOO_MANY_ENUM_VALUE', 'TOO_MANY_POSSIBLE_USERS_EXIST', 'TRANSFER_REQUIRES_READ', 'UNABLE_TO_LOCK_ROW', 'UNAVAILABLE_RECORDTYPE_EXCEPTION', 'UNAVAILABLE_REF', 'UNDELETE_FAILED', 'UNKNOWN_EXCEPTION', 'UNKNOWN_TOKEN_ERROR', 'UNSAFE_HTML_CONTENT', 'UNSPECIFIED_EMAIL_ADDRESS', 'UNSUPPORTED_APEX_TRIGGER_OPERATON', 'UNSUPPORTED_SOCIAL_PROVIDER', 'UNVERIFIED_SENDER_ADDRESS', 'UPDATE_GOOGLE_EMAIL_LABEL_FAILED', 'USER_OWNS_PORTAL_ACCOUNT_EXCEPTION', 'USER_WITH_APEX_SHARES_EXCEPTION', 'VF_COMPILE_ERROR', 'WEBLINK_SIZE_LIMIT_EXCEEDED', 'WEBLINK_URL_INVALID', 'WRONG_CONTROLLER_TYPE', 'XCLEAN_UNEXPECTED_ERROR']
          }]
      }, {
        localName: 'ApprovalEntryCriteria',
        propertyInfos: [{
            name: 'booleanFilter'
          }, {
            name: 'criteriaItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FilterItem'
          }, {
            name: 'formula'
          }]
      }, {
        localName: 'Approver',
        propertyInfos: [{
            name: 'name'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.NextOwnerType'
          }]
      }, {
        localName: 'FlowNode',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'locationX',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'locationY',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'AppComponentList',
        propertyInfos: [{
            name: 'alignment',
            required: true
          }, {
            name: 'components',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'SubtabComponents',
        propertyInfos: [{
            name: 'containers',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Container'
          }]
      }, {
        localName: 'FlowApexPluginCallInputParameter',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'GlobalValueSet',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'customValue',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomValue'
          }, {
            name: 'description'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'sorted',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'MatchingRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'booleanFilter'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'matchingRuleItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.MatchingRuleItem'
          }, {
            name: 'ruleStatus',
            required: true,
            typeInfo: '.MatchingRuleStatus'
          }]
      }, {
        localName: 'RecommendationDefinition',
        propertyInfos: [{
            name: 'recommendationDefinitionDetails',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RecommendationDefinitionDetail'
          }]
      }, {
        localName: 'QuoteSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableQuote',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'CustomDataTypeComponentTranslation',
        propertyInfos: [{
            name: 'developerSuffix',
            required: true
          }, {
            name: 'label'
          }]
      }, {
        localName: 'DashboardTableColumn',
        propertyInfos: [{
            name: 'aggregateType',
            typeInfo: '.ReportSummaryType'
          }, {
            name: 'calculatePercent',
            typeInfo: 'Boolean'
          }, {
            name: 'column',
            required: true
          }, {
            name: 'decimalPlaces',
            typeInfo: 'Int'
          }, {
            name: 'showTotal',
            typeInfo: 'Boolean'
          }, {
            name: 'sortBy',
            typeInfo: '.DashboardComponentFilter'
          }]
      }, {
        localName: 'ApprovalAction',
        propertyInfos: [{
            name: 'action',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowActionReference'
          }]
      }, {
        localName: 'FlowApexPluginCall',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'apexClass',
            required: true
          }, {
            name: 'connector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'faultConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'inputParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowApexPluginCallInputParameter'
          }, {
            name: 'outputParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowApexPluginCallOutputParameter'
          }]
      }, {
        localName: 'CustomShortcut',
        baseTypeInfo: '.DefaultShortcut',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'eventName',
            required: true
          }]
      }, {
        localName: 'DashboardFlexTableComponentProperties',
        propertyInfos: [{
            name: 'flexTableColumn',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DashboardComponentColumn'
          }, {
            name: 'flexTableSortInfo',
            typeInfo: '.DashboardComponentSortInfo'
          }, {
            name: 'hideChatterPhotos',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'RemoteSiteSetting',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'disableProtocolSecurity',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isActive',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'url',
            required: true
          }]
      }, {
        localName: 'CustomPermissionDependencyRequired',
        propertyInfos: [{
            name: 'customPermission',
            required: true
          }, {
            name: 'dependency',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'AnalyticsCloudComponentLayoutItem',
        propertyInfos: [{
            name: 'assetType',
            required: true
          }, {
            name: 'devName',
            required: true
          }, {
            name: 'error'
          }, {
            name: 'filter'
          }, {
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'hideOnError',
            typeInfo: 'Boolean'
          }, {
            name: 'showHeader',
            typeInfo: 'Boolean'
          }, {
            name: 'showSharing',
            typeInfo: 'Boolean'
          }, {
            name: 'showTitle',
            typeInfo: 'Boolean'
          }, {
            name: 'width'
          }]
      }, {
        localName: 'LiveChatAgentConfig',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'assignments',
            typeInfo: '.AgentConfigAssignments'
          }, {
            name: 'autoGreeting'
          }, {
            name: 'capacity',
            typeInfo: 'Int'
          }, {
            name: 'criticalWaitTime',
            typeInfo: 'Int'
          }, {
            name: 'customAgentName'
          }, {
            name: 'enableAgentFileTransfer',
            typeInfo: 'Boolean'
          }, {
            name: 'enableAgentSneakPeek',
            typeInfo: 'Boolean'
          }, {
            name: 'enableAssistanceFlag',
            typeInfo: 'Boolean'
          }, {
            name: 'enableAutoAwayOnDecline',
            typeInfo: 'Boolean'
          }, {
            name: 'enableAutoAwayOnPushTimeout',
            typeInfo: 'Boolean'
          }, {
            name: 'enableChatConferencing',
            typeInfo: 'Boolean'
          }, {
            name: 'enableChatMonitoring',
            typeInfo: 'Boolean'
          }, {
            name: 'enableChatTransferToAgent',
            typeInfo: 'Boolean'
          }, {
            name: 'enableChatTransferToButton',
            typeInfo: 'Boolean'
          }, {
            name: 'enableChatTransferToSkill',
            typeInfo: 'Boolean'
          }, {
            name: 'enableLogoutSound',
            typeInfo: 'Boolean'
          }, {
            name: 'enableNotifications',
            typeInfo: 'Boolean'
          }, {
            name: 'enableRequestSound',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSneakPeek',
            typeInfo: 'Boolean'
          }, {
            name: 'enableVisitorBlocking',
            typeInfo: 'Boolean'
          }, {
            name: 'enableWhisperMessage',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'supervisorDefaultAgentStatusFilter',
            typeInfo: '.SupervisorAgentStatusFilter'
          }, {
            name: 'supervisorDefaultButtonFilter'
          }, {
            name: 'supervisorDefaultSkillFilter'
          }, {
            name: 'supervisorSkills',
            typeInfo: '.SupervisorAgentConfigSkills'
          }, {
            name: 'transferableButtons',
            typeInfo: '.AgentConfigButtons'
          }, {
            name: 'transferableSkills',
            typeInfo: '.AgentConfigSkills'
          }]
      }, {
        localName: 'StaticResource',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'cacheControl',
            required: true,
            typeInfo: '.StaticResourceCacheControl'
          }, {
            name: 'contentType',
            required: true
          }, {
            name: 'description'
          }]
      }, {
        localName: 'WaveDataset',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'application',
            required: true
          }, {
            name: 'description'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'templateAssetSourceName'
          }]
      }, {
        localName: 'ForecastRangeSettings',
        propertyInfos: [{
            name: 'beginning',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'displaying',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'periodType',
            required: true,
            typeInfo: '.PeriodTypes'
          }]
      }, {
        localName: 'QuickActionLayoutItem',
        propertyInfos: [{
            name: 'emptySpace',
            typeInfo: 'Boolean'
          }, {
            name: 'field'
          }, {
            name: 'uiBehavior',
            typeInfo: '.UiBehavior'
          }]
      }, {
        localName: 'DeployRecentValidation',
        typeName: null,
        propertyInfos: [{
            name: 'validationId',
            required: true
          }]
      }, {
        localName: 'FlowScreenFieldInputParameter',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'DeployDetails',
        propertyInfos: [{
            name: 'componentFailures',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DeployMessage'
          }, {
            name: 'componentSuccesses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DeployMessage'
          }, {
            name: 'retrieveResult',
            typeInfo: '.RetrieveResult'
          }, {
            name: 'runTestResult',
            typeInfo: '.RunTestsResult'
          }]
      }, {
        localName: 'Territory2SettingsOpportunityFilter',
        propertyInfos: [{
            name: 'apexClassName',
            required: true
          }, {
            name: 'enableFilter',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'runOnCreate',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ConnectedAppSamlConfig',
        propertyInfos: [{
            name: 'acsUrl',
            required: true
          }, {
            name: 'certificate'
          }, {
            name: 'encryptionCertificate'
          }, {
            name: 'encryptionType',
            typeInfo: '.SamlEncryptionType'
          }, {
            name: 'entityUrl',
            required: true
          }, {
            name: 'issuer'
          }, {
            name: 'samlIdpSLOBindingEnum',
            typeInfo: '.SamlIdpSLOBinding'
          }, {
            name: 'samlNameIdFormat',
            typeInfo: '.SamlNameIdFormatType'
          }, {
            name: 'samlSloUrl'
          }, {
            name: 'samlSubjectCustomAttr'
          }, {
            name: 'samlSubjectType',
            required: true,
            typeInfo: '.SamlSubjectType'
          }]
      }, {
        localName: 'CustomFeedFilter',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'criteria',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FeedFilterCriterion'
          }, {
            name: 'description'
          }, {
            name: 'isProtected',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'FlexiPageTemplateInstance',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'properties',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ComponentInstanceProperty'
          }]
      }, {
        localName: 'UserCriteria',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'creationAgeInSeconds',
            typeInfo: 'Int'
          }, {
            name: 'description'
          }, {
            name: 'lastChatterActivityAgeInSeconds',
            typeInfo: 'Int'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'profiles',
            minOccurs: 0,
            collection: true
          }, {
            name: 'userTypes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.NetworkUserType'
          }]
      }, {
        localName: 'LayoutItem',
        propertyInfos: [{
            name: 'analyticsCloudComponent',
            typeInfo: '.AnalyticsCloudComponentLayoutItem'
          }, {
            name: 'behavior',
            typeInfo: '.UiBehavior'
          }, {
            name: 'canvas'
          }, {
            name: 'component'
          }, {
            name: 'customLink'
          }, {
            name: 'emptySpace',
            typeInfo: 'Boolean'
          }, {
            name: 'field'
          }, {
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'page'
          }, {
            name: 'reportChartComponent',
            typeInfo: '.ReportChartComponentLayoutItem'
          }, {
            name: 'scontrol'
          }, {
            name: 'showLabel',
            typeInfo: 'Boolean'
          }, {
            name: 'showScrollbars',
            typeInfo: 'Boolean'
          }, {
            name: 'width'
          }]
      }, {
        localName: 'CustomDataTypeTranslation',
        propertyInfos: [{
            name: 'components',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomDataTypeComponentTranslation'
          }, {
            name: 'customDataTypeName',
            required: true
          }, {
            name: 'description'
          }, {
            name: 'label'
          }]
      }, {
        localName: 'UpsertMetadataResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            minOccurs: 0,
            collection: true,
            typeInfo: '.UpsertResult'
          }]
      }, {
        localName: 'PermissionSetCustomPermissions',
        propertyInfos: [{
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'Layout',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'customButtons',
            minOccurs: 0,
            collection: true
          }, {
            name: 'customConsoleComponents',
            typeInfo: '.CustomConsoleComponents'
          }, {
            name: 'emailDefault',
            typeInfo: 'Boolean'
          }, {
            name: 'excludeButtons',
            minOccurs: 0,
            collection: true
          }, {
            name: 'feedLayout',
            typeInfo: '.FeedLayout'
          }, {
            name: 'headers',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LayoutHeader'
          }, {
            name: 'layoutSections',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LayoutSection'
          }, {
            name: 'miniLayout',
            typeInfo: '.MiniLayout'
          }, {
            name: 'multilineLayoutFields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'platformActionList',
            typeInfo: '.PlatformActionList'
          }, {
            name: 'quickActionList',
            typeInfo: '.QuickActionList'
          }, {
            name: 'relatedContent',
            typeInfo: '.RelatedContent'
          }, {
            name: 'relatedLists',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RelatedListItem'
          }, {
            name: 'relatedObjects',
            minOccurs: 0,
            collection: true
          }, {
            name: 'runAssignmentRulesDefault',
            typeInfo: 'Boolean'
          }, {
            name: 'showEmailCheckbox',
            typeInfo: 'Boolean'
          }, {
            name: 'showHighlightsPanel',
            typeInfo: 'Boolean'
          }, {
            name: 'showInteractionLogPanel',
            typeInfo: 'Boolean'
          }, {
            name: 'showKnowledgeComponent',
            typeInfo: 'Boolean'
          }, {
            name: 'showRunAssignmentRulesCheckbox',
            typeInfo: 'Boolean'
          }, {
            name: 'showSolutionSection',
            typeInfo: 'Boolean'
          }, {
            name: 'showSubmitAndAttachButton',
            typeInfo: 'Boolean'
          }, {
            name: 'summaryLayout',
            typeInfo: '.SummaryLayout'
          }]
      }, {
        localName: 'BrandingSetProperty',
        propertyInfos: [{
            name: 'propertyName',
            required: true
          }, {
            name: 'propertyValue'
          }]
      }, {
        localName: 'MacroSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableAdvancedSearch',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'PermissionSetUserPermission',
        propertyInfos: [{
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'ConnectedAppAttribute',
        propertyInfos: [{
            name: 'formula',
            required: true
          }, {
            name: 'key',
            required: true
          }]
      }, {
        localName: 'WorkflowFlowActionParameter',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value'
          }]
      }, {
        localName: 'TabLimitConfig',
        propertyInfos: [{
            name: 'maxNumberOfPrimaryTabs'
          }, {
            name: 'maxNumberOfSubTabs'
          }]
      }, {
        localName: 'LetterheadHeaderFooter',
        propertyInfos: [{
            name: 'backgroundColor',
            required: true
          }, {
            name: 'height',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'horizontalAlignment',
            typeInfo: '.LetterheadHorizontalAlignment'
          }, {
            name: 'logo'
          }, {
            name: 'verticalAlignment',
            typeInfo: '.LetterheadVerticalAlignment'
          }]
      }, {
        localName: 'QuickActionLayoutColumn',
        propertyInfos: [{
            name: 'quickActionLayoutItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.QuickActionLayoutItem'
          }]
      }, {
        localName: 'LightningExperienceTheme',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'defaultBrandingSet',
            required: true
          }, {
            name: 'description'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'shouldOverrideLoadingImage',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ArticleTypeChannelDisplay',
        propertyInfos: [{
            name: 'articleTypeTemplates',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ArticleTypeTemplate'
          }]
      }, {
        localName: 'PermissionSetApexClassAccess',
        propertyInfos: [{
            name: 'apexClass',
            required: true
          }, {
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'SharingReasonTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'FlowActionCall',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'actionName',
            required: true
          }, {
            name: 'actionType',
            required: true,
            typeInfo: '.InvocableActionType'
          }, {
            name: 'connector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'faultConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'inputParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowActionCallInputParameter'
          }, {
            name: 'outputParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowActionCallOutputParameter'
          }]
      }, {
        localName: 'FlowCategoryItems',
        propertyInfos: [{
            name: 'flow',
            required: true
          }]
      }, {
        localName: 'LiveChatButtonDeployments',
        propertyInfos: [{
            name: 'deployment',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'CallOptions',
        typeName: null,
        propertyInfos: [{
            name: 'client',
            required: true
          }]
      }, {
        localName: 'FlowRecordDelete',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'connector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'faultConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'filters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowRecordFilter'
          }, {
            name: 'inputReference'
          }, {
            name: 'object'
          }]
      }, {
        localName: 'CleanDataService',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'cleanRules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CleanRule'
          }, {
            name: 'description',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'matchEngine',
            required: true
          }]
      }, {
        localName: 'LayoutSection',
        propertyInfos: [{
            name: 'customLabel',
            typeInfo: 'Boolean'
          }, {
            name: 'detailHeading',
            typeInfo: 'Boolean'
          }, {
            name: 'editHeading',
            typeInfo: 'Boolean'
          }, {
            name: 'label'
          }, {
            name: 'layoutColumns',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LayoutColumn'
          }, {
            name: 'style',
            required: true,
            typeInfo: '.LayoutSectionStyle'
          }]
      }, {
        localName: 'CommunityThemeSetting',
        propertyInfos: [{
            name: 'customThemeLayoutType'
          }, {
            name: 'themeLayout',
            required: true
          }, {
            name: 'themeLayoutType',
            typeInfo: '.CommunityThemeLayoutType'
          }]
      }, {
        localName: 'HistoryRetentionPolicy',
        propertyInfos: [{
            name: 'archiveAfterMonths',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'archiveRetentionYears',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'description'
          }]
      }, {
        localName: 'WaveXmdRecordDisplayLookup',
        propertyInfos: [{
            name: 'recordDisplayField',
            required: true
          }]
      }, {
        localName: 'WaveXmdDimensionCustomAction',
        propertyInfos: [{
            name: 'customActionName',
            required: true
          }, {
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'icon'
          }, {
            name: 'method'
          }, {
            name: 'sortIndex',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'target'
          }, {
            name: 'tooltip'
          }, {
            name: 'url'
          }]
      }, {
        localName: 'PersonListSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enablePersonList',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ListMetadata',
        typeName: null,
        propertyInfos: [{
            name: 'queries',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ListMetadataQuery'
          }, {
            name: 'asOfVersion',
            required: true,
            typeInfo: 'Double'
          }]
      }, {
        localName: 'LicenseDefinition',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'aggregationGroup',
            required: true
          }, {
            name: 'description'
          }, {
            name: 'isPublished',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'licensedCustomPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LicensedCustomPermissions'
          }, {
            name: 'licensingAuthority',
            required: true
          }, {
            name: 'licensingAuthorityProvider',
            required: true
          }, {
            name: 'minPlatformVersion',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'origin',
            required: true
          }, {
            name: 'revision',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'trialLicenseDuration',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'trialLicenseQuantity',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'ApprovalStepApprover',
        propertyInfos: [{
            name: 'approver',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Approver'
          }, {
            name: 'whenMultipleApprovers',
            typeInfo: '.RoutingType'
          }]
      }, {
        localName: 'LeadConvertSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'allowOwnerChange',
            typeInfo: 'Boolean'
          }, {
            name: 'objectMapping',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ObjectMapping'
          }, {
            name: 'opportunityCreationOptions',
            typeInfo: '.VisibleOrRequired'
          }]
      }, {
        localName: 'DashboardFilterOption',
        propertyInfos: [{
            name: 'operator',
            required: true,
            typeInfo: '.DashboardFilterOperation'
          }, {
            name: 'values',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'EntitlementProcessMilestoneItem',
        propertyInfos: [{
            name: 'businessHours'
          }, {
            name: 'criteriaBooleanFilter'
          }, {
            name: 'milestoneCriteriaFilterItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FilterItem'
          }, {
            name: 'milestoneCriteriaFormula'
          }, {
            name: 'milestoneName'
          }, {
            name: 'minutesCustomClass'
          }, {
            name: 'minutesToComplete',
            typeInfo: 'Int'
          }, {
            name: 'successActions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowActionReference'
          }, {
            name: 'timeTriggers',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EntitlementProcessMilestoneTimeTrigger'
          }, {
            name: 'useCriteriaStartTime',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'DashboardGridLayout',
        propertyInfos: [{
            name: 'dashboardGridComponents',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DashboardGridComponent'
          }, {
            name: 'numberOfColumns',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'rowHeight',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'WorkflowKnowledgePublish',
        baseTypeInfo: '.WorkflowAction',
        propertyInfos: [{
            name: 'action',
            required: true,
            typeInfo: '.KnowledgeWorkflowAction'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'language'
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'WorkflowOutboundMessage',
        baseTypeInfo: '.WorkflowAction',
        propertyInfos: [{
            name: 'apiVersion',
            required: true,
            typeInfo: 'Double'
          }, {
            name: 'description'
          }, {
            name: 'endpointUrl',
            required: true
          }, {
            name: 'fields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'includeSessionId',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'integrationUser',
            required: true
          }, {
            name: 'name',
            required: true
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }, {
            name: 'useDeadLetterQueue',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlowCondition',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'leftValueReference',
            required: true
          }, {
            name: 'operator',
            required: true,
            typeInfo: '.FlowComparisonOperator'
          }, {
            name: 'rightValue',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'ProfileLoginHours',
        propertyInfos: [{
            name: 'fridayEnd'
          }, {
            name: 'fridayStart'
          }, {
            name: 'mondayEnd'
          }, {
            name: 'mondayStart'
          }, {
            name: 'saturdayEnd'
          }, {
            name: 'saturdayStart'
          }, {
            name: 'sundayEnd'
          }, {
            name: 'sundayStart'
          }, {
            name: 'thursdayEnd'
          }, {
            name: 'thursdayStart'
          }, {
            name: 'tuesdayEnd'
          }, {
            name: 'tuesdayStart'
          }, {
            name: 'wednesdayEnd'
          }, {
            name: 'wednesdayStart'
          }]
      }, {
        localName: 'WorkflowEmailRecipient',
        propertyInfos: [{
            name: 'field'
          }, {
            name: 'recipient'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.ActionEmailRecipientTypes'
          }]
      }, {
        localName: 'FlowVariable',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'dataType',
            required: true,
            typeInfo: '.FlowDataType'
          }, {
            name: 'isCollection',
            typeInfo: 'Boolean'
          }, {
            name: 'isInput',
            typeInfo: 'Boolean'
          }, {
            name: 'isOutput',
            typeInfo: 'Boolean'
          }, {
            name: 'objectType'
          }, {
            name: 'scale',
            typeInfo: 'Int'
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'SharingSet',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'accessMappings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.AccessMapping'
          }, {
            name: 'description'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'profiles',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'ScontrolTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'SharedTo',
        propertyInfos: [{
            name: 'allCustomerPortalUsers'
          }, {
            name: 'allInternalUsers'
          }, {
            name: 'allPartnerUsers'
          }, {
            name: 'channelProgramGroup',
            minOccurs: 0,
            collection: true
          }, {
            name: 'channelProgramGroups',
            minOccurs: 0,
            collection: true
          }, {
            name: 'group',
            minOccurs: 0,
            collection: true
          }, {
            name: 'groups',
            minOccurs: 0,
            collection: true
          }, {
            name: 'managerSubordinates',
            minOccurs: 0,
            collection: true
          }, {
            name: 'managers',
            minOccurs: 0,
            collection: true
          }, {
            name: 'portalRole',
            minOccurs: 0,
            collection: true
          }, {
            name: 'portalRoleAndSubordinates',
            minOccurs: 0,
            collection: true
          }, {
            name: 'queue',
            minOccurs: 0,
            collection: true
          }, {
            name: 'role',
            minOccurs: 0,
            collection: true
          }, {
            name: 'roleAndSubordinates',
            minOccurs: 0,
            collection: true
          }, {
            name: 'roleAndSubordinatesInternal',
            minOccurs: 0,
            collection: true
          }, {
            name: 'roles',
            minOccurs: 0,
            collection: true
          }, {
            name: 'rolesAndSubordinates',
            minOccurs: 0,
            collection: true
          }, {
            name: 'territories',
            minOccurs: 0,
            collection: true
          }, {
            name: 'territoriesAndSubordinates',
            minOccurs: 0,
            collection: true
          }, {
            name: 'territory',
            minOccurs: 0,
            collection: true
          }, {
            name: 'territoryAndSubordinates',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'ProfileExternalDataSourceAccess',
        propertyInfos: [{
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'externalDataSource',
            required: true
          }]
      }, {
        localName: 'NextAutomatedApprover',
        propertyInfos: [{
            name: 'useApproverFieldOfRecordOwner',
            typeInfo: 'Boolean'
          }, {
            name: 'userHierarchyField',
            required: true
          }]
      }, {
        localName: 'FlowChoice',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'choiceText',
            required: true
          }, {
            name: 'dataType',
            required: true,
            typeInfo: '.FlowDataType'
          }, {
            name: 'userInput',
            typeInfo: '.FlowChoiceUserInput'
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'RecommendationDefinitionDetail',
        propertyInfos: [{
            name: 'actionUrl'
          }, {
            name: 'description'
          }, {
            name: 'linkText'
          }, {
            name: 'scheduledRecommendations',
            typeInfo: '.ScheduledRecommendation'
          }, {
            name: 'setupName'
          }, {
            name: 'title'
          }]
      }, {
        localName: 'ObjectUsage',
        propertyInfos: [{
            name: 'object',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'Package',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'apiAccessLevel',
            typeInfo: '.APIAccessLevel'
          }, {
            name: 'description'
          }, {
            name: 'namespacePrefix'
          }, {
            name: 'objectPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ProfileObjectPermissions'
          }, {
            name: 'packageType'
          }, {
            name: 'postInstallClass'
          }, {
            name: 'setupWeblink'
          }, {
            name: 'types',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PackageTypeMembers'
          }, {
            name: 'uninstallClass'
          }, {
            name: 'version',
            required: true
          }]
      }, {
        localName: 'KnowledgeCommunitiesSettings',
        propertyInfos: [{
            name: 'community',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'Deploy',
        typeName: null,
        propertyInfos: [{
            name: 'zipFile',
            required: true,
            elementName: 'ZipFile',
            typeInfo: 'Base64Binary'
          }, {
            name: 'deployOptions',
            required: true,
            elementName: 'DeployOptions',
            typeInfo: '.DeployOptions'
          }]
      }, {
        localName: 'ValidationRuleTranslation',
        propertyInfos: [{
            name: 'errorMessage',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'LiveAgentSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableLiveAgent',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'RoleOrTerritory',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'caseAccessLevel'
          }, {
            name: 'contactAccessLevel'
          }, {
            name: 'description'
          }, {
            name: 'mayForecastManagerShare',
            typeInfo: 'Boolean'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'opportunityAccessLevel'
          }]
      }, {
        localName: 'AutoResponseRules',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'autoResponseRule',
            minOccurs: 0,
            collection: true,
            typeInfo: '.AutoResponseRule'
          }]
      }, {
        localName: 'ProfileObjectPermissions',
        propertyInfos: [{
            name: 'allowCreate',
            typeInfo: 'Boolean'
          }, {
            name: 'allowDelete',
            typeInfo: 'Boolean'
          }, {
            name: 'allowEdit',
            typeInfo: 'Boolean'
          }, {
            name: 'allowRead',
            typeInfo: 'Boolean'
          }, {
            name: 'modifyAllRecords',
            typeInfo: 'Boolean'
          }, {
            name: 'object',
            required: true
          }, {
            name: 'viewAllRecords',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'KnowledgeWorkOrderFieldsSettings',
        propertyInfos: [{
            name: 'field',
            minOccurs: 0,
            collection: true,
            typeInfo: '.KnowledgeWorkOrderField'
          }]
      }, {
        localName: 'FlowDecision',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'defaultConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'defaultConnectorLabel'
          }, {
            name: 'rules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowRule'
          }]
      }, {
        localName: 'IntegrationHubSettingsType',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'canonicalName'
          }, {
            name: 'canonicalNameBindingChar'
          }, {
            name: 'description'
          }, {
            name: 'isEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'isProtected',
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'setupNamespace'
          }, {
            name: 'setupSimpleName',
            required: true
          }, {
            name: 'uuid',
            elementName: 'uUID'
          }, {
            name: 'version'
          }, {
            name: 'versionBuild',
            typeInfo: 'Int'
          }, {
            name: 'versionMajor',
            typeInfo: 'Int'
          }, {
            name: 'versionMinor',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'VisualizationType',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'developerName',
            required: true
          }, {
            name: 'icon',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'scriptBootstrapMethod'
          }]
      }, {
        localName: 'MarketingActionSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableMarketingAction',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ProfileActionOverride',
        propertyInfos: [{
            name: 'actionName',
            required: true
          }, {
            name: 'content'
          }, {
            name: 'formFactor',
            required: true,
            typeInfo: '.FormFactor'
          }, {
            name: 'pageOrSobjectType',
            required: true
          }, {
            name: 'recordType'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.ActionOverrideType'
          }]
      }, {
        localName: 'PicklistEntry',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'defaultValue',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'validFor'
          }, {
            name: 'value',
            required: true
          }]
      }, {
        localName: 'FlowApexPluginCallOutputParameter',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'assignToReference',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'WorkspaceMapping',
        propertyInfos: [{
            name: 'fieldName'
          }, {
            name: 'tab',
            required: true
          }]
      }, {
        localName: 'FieldValue',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            required: true,
            typeInfo: 'AnyType'
          }]
      }, {
        localName: 'EventParameterMap',
        propertyInfos: [{
            name: 'parameterName',
            required: true
          }, {
            name: 'parameterValue'
          }]
      }, {
        localName: 'ComponentInstanceProperty',
        propertyInfos: [{
            name: 'name'
          }, {
            name: 'type',
            typeInfo: '.ComponentInstancePropertyTypeEnum'
          }, {
            name: 'value'
          }]
      }, {
        localName: 'KnowledgeCaseField',
        propertyInfos: [{
            name: 'name'
          }]
      }, {
        localName: 'CheckRetrieveStatus',
        typeName: null,
        propertyInfos: [{
            name: 'asyncProcessId',
            required: true
          }, {
            name: 'includeZip',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'EscalationRules',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'escalationRule',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EscalationRule'
          }]
      }, {
        localName: 'ReportGrouping',
        propertyInfos: [{
            name: 'aggregateType',
            typeInfo: '.ReportAggrType'
          }, {
            name: 'dateGranularity',
            typeInfo: '.UserDateGranularity'
          }, {
            name: 'field',
            required: true
          }, {
            name: 'sortByName'
          }, {
            name: 'sortOrder',
            required: true,
            typeInfo: '.SortOrder'
          }, {
            name: 'sortType',
            typeInfo: '.ReportSortType'
          }]
      }, {
        localName: 'RecommendationAudience',
        propertyInfos: [{
            name: 'recommendationAudienceDetails',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RecommendationAudienceDetail'
          }]
      }, {
        localName: 'ApexTestSuite',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'testClassName',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'Container',
        propertyInfos: [{
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'isContainerAutoSizeEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'region',
            required: true
          }, {
            name: 'sidebarComponents',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SidebarComponent'
          }, {
            name: 'style',
            required: true
          }, {
            name: 'unit',
            required: true
          }, {
            name: 'width',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'DashboardFilter',
        propertyInfos: [{
            name: 'dashboardFilterOptions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DashboardFilterOption'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'Role',
        baseTypeInfo: '.RoleOrTerritory',
        propertyInfos: [{
            name: 'parentRole'
          }]
      }, {
        localName: 'BusinessProcess',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'isActive',
            typeInfo: 'Boolean'
          }, {
            name: 'values',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PicklistValue'
          }]
      }, {
        localName: 'FlowBaseElement',
        propertyInfos: [{
            name: 'processMetadataValues',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowMetadataValue'
          }]
      }, {
        localName: 'RenameMetadataResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true,
            typeInfo: '.SaveResult'
          }]
      }, {
        localName: 'WorkflowFieldUpdate',
        baseTypeInfo: '.WorkflowAction',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'field',
            required: true
          }, {
            name: 'formula'
          }, {
            name: 'literalValue'
          }, {
            name: 'lookupValue'
          }, {
            name: 'lookupValueType',
            typeInfo: '.LookupValueType'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'notifyAssignee',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'operation',
            required: true,
            typeInfo: '.FieldUpdateOperation'
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }, {
            name: 'reevaluateOnChange',
            typeInfo: 'Boolean'
          }, {
            name: 'targetObject'
          }]
      }, {
        localName: 'AgentConfigUserAssignments',
        propertyInfos: [{
            name: 'user',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'DescribeMetadataResult',
        propertyInfos: [{
            name: 'metadataObjects',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DescribeMetadataObject'
          }, {
            name: 'organizationNamespace',
            required: true
          }, {
            name: 'partialSaveAllowed',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'testRequired',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'RetrieveResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true,
            typeInfo: '.AsyncResult'
          }]
      }, {
        localName: 'ReportTypeColumnTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'LayoutTranslation',
        propertyInfos: [{
            name: 'layout',
            required: true
          }, {
            name: 'layoutType'
          }, {
            name: 'sections',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LayoutSectionTranslation'
          }]
      }, {
        localName: 'FlowFormula',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'dataType',
            typeInfo: '.FlowDataType'
          }, {
            name: 'expression',
            required: true
          }, {
            name: 'scale',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'BusinessHoursSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'businessHours',
            minOccurs: 0,
            collection: true,
            typeInfo: '.BusinessHoursEntry'
          }, {
            name: 'holidays',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Holiday'
          }]
      }, {
        localName: 'FlowStage',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'isActive',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'stageOrder',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'StandardFieldTranslation',
        propertyInfos: [{
            name: 'label'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'SamlSsoConfig',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'attributeName'
          }, {
            name: 'attributeNameIdFormat'
          }, {
            name: 'decryptionCertificate'
          }, {
            name: 'errorUrl'
          }, {
            name: 'executionUserId'
          }, {
            name: 'identityLocation',
            required: true,
            typeInfo: '.SamlIdentityLocationType'
          }, {
            name: 'identityMapping',
            required: true,
            typeInfo: '.SamlIdentityType'
          }, {
            name: 'issuer',
            required: true
          }, {
            name: 'loginUrl'
          }, {
            name: 'logoutUrl'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'oauthTokenEndpoint'
          }, {
            name: 'redirectBinding',
            typeInfo: 'Boolean'
          }, {
            name: 'requestSignatureMethod'
          }, {
            name: 'requestSigningCertId'
          }, {
            name: 'salesforceLoginUrl'
          }, {
            name: 'samlEntityId',
            required: true
          }, {
            name: 'samlJitHandlerId'
          }, {
            name: 'samlVersion',
            required: true,
            typeInfo: '.SamlType'
          }, {
            name: 'singleLogoutBinding',
            typeInfo: '.SamlSpSLOBinding'
          }, {
            name: 'singleLogoutUrl'
          }, {
            name: 'userProvisioning',
            typeInfo: 'Boolean'
          }, {
            name: 'validationCert',
            required: true
          }]
      }, {
        localName: 'ProfileLayoutAssignment',
        propertyInfos: [{
            name: 'layout',
            required: true
          }, {
            name: 'recordType'
          }]
      }, {
        localName: 'MobileSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'chatterMobile',
            typeInfo: '.ChatterMobileSettings'
          }, {
            name: 'dashboardMobile',
            typeInfo: '.DashboardMobileSettings'
          }, {
            name: 'salesforceMobile',
            typeInfo: '.SFDCMobileSettings'
          }, {
            name: 'touchMobile',
            typeInfo: '.TouchMobileSettings'
          }]
      }, {
        localName: 'PathAssistantSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'pathAssistantEnabled',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'LightningBoltItems',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'type',
            required: true
          }]
      }, {
        localName: 'Attachment',
        propertyInfos: [{
            name: 'content',
            required: true,
            typeInfo: 'Base64Binary'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'CheckDeployStatusResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true,
            typeInfo: '.DeployResult'
          }]
      }, {
        localName: 'IdeaReputationLevel',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'QuickActionList',
        propertyInfos: [{
            name: 'quickActionListItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.QuickActionListItem'
          }]
      }, {
        localName: 'FlowScreenRule',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'conditionLogic'
          }, {
            name: 'conditions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowCondition'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'ruleActions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowScreenRuleAction'
          }]
      }, {
        localName: 'FlowDefinitionTranslation',
        propertyInfos: [{
            name: 'flows',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowTranslation'
          }, {
            name: 'fullName',
            required: true
          }, {
            name: 'label'
          }]
      }, {
        localName: 'WorkflowFlowAction',
        baseTypeInfo: '.WorkflowAction',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'flow',
            required: true
          }, {
            name: 'flowInputs',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowFlowActionParameter'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'language'
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlexiPageRegion',
        propertyInfos: [{
            name: 'appendable',
            typeInfo: '.RegionFlagStatus'
          }, {
            name: 'componentInstances',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ComponentInstance'
          }, {
            name: 'mode',
            typeInfo: '.FlexiPageRegionMode'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'prependable',
            typeInfo: '.RegionFlagStatus'
          }, {
            name: 'replaceable',
            typeInfo: '.RegionFlagStatus'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.FlexiPageRegionType'
          }]
      }, {
        localName: 'IdeasSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableChatterProfile',
            typeInfo: 'Boolean'
          }, {
            name: 'enableIdeaThemes',
            typeInfo: 'Boolean'
          }, {
            name: 'enableIdeas',
            typeInfo: 'Boolean'
          }, {
            name: 'enableIdeasReputation',
            typeInfo: 'Boolean'
          }, {
            name: 'halfLife',
            typeInfo: 'Double'
          }, {
            name: 'ideasProfilePage'
          }]
      }, {
        localName: 'EclairMap',
        propertyInfos: [{
            name: 'boundingBoxBottom',
            typeInfo: 'Double'
          }, {
            name: 'boundingBoxLeft',
            typeInfo: 'Double'
          }, {
            name: 'boundingBoxRight',
            typeInfo: 'Double'
          }, {
            name: 'boundingBoxTop',
            typeInfo: 'Double'
          }, {
            name: 'mapLabel'
          }, {
            name: 'mapName',
            required: true
          }, {
            name: 'projection',
            required: true
          }]
      }, {
        localName: 'RenameMetadata',
        typeName: null,
        propertyInfos: [{
            name: 'type',
            required: true
          }, {
            name: 'oldFullName',
            required: true
          }, {
            name: 'newFullName',
            required: true
          }]
      }, {
        localName: 'MetadataWithContent',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'content',
            typeInfo: 'Base64Binary'
          }]
      }, {
        localName: 'TopicsForObjects',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableTopics',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'entityApiName',
            required: true
          }]
      }, {
        localName: 'RetrieveMessage',
        propertyInfos: [{
            name: 'fileName',
            required: true
          }, {
            name: 'problem',
            required: true
          }]
      }, {
        localName: 'KnowledgeSuggestedArticlesSettings',
        propertyInfos: [{
            name: 'caseFields',
            typeInfo: '.KnowledgeCaseFieldsSettings'
          }, {
            name: 'useSuggestedArticlesForCase',
            typeInfo: 'Boolean'
          }, {
            name: 'workOrderFields',
            typeInfo: '.KnowledgeWorkOrderFieldsSettings'
          }, {
            name: 'workOrderLineItemFields',
            typeInfo: '.KnowledgeWorkOrderLineItemFieldsSettings'
          }]
      }, {
        localName: 'PicklistValue',
        baseTypeInfo: '.GlobalPicklistValue',
        propertyInfos: [{
            name: 'allowEmail',
            typeInfo: 'Boolean'
          }, {
            name: 'closed',
            typeInfo: 'Boolean'
          }, {
            name: 'controllingFieldValues',
            minOccurs: 0,
            collection: true
          }, {
            name: 'converted',
            typeInfo: 'Boolean'
          }, {
            name: 'cssExposed',
            typeInfo: 'Boolean'
          }, {
            name: 'forecastCategory',
            typeInfo: '.ForecastCategories'
          }, {
            name: 'highPriority',
            typeInfo: 'Boolean'
          }, {
            name: 'probability',
            typeInfo: 'Int'
          }, {
            name: 'reverseRole'
          }, {
            name: 'reviewed',
            typeInfo: 'Boolean'
          }, {
            name: 'won',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ServiceCloudConsoleConfig',
        propertyInfos: [{
            name: 'componentList',
            typeInfo: '.AppComponentList'
          }, {
            name: 'detailPageRefreshMethod',
            required: true
          }, {
            name: 'footerColor'
          }, {
            name: 'headerColor'
          }, {
            name: 'keyboardShortcuts',
            required: true,
            typeInfo: '.KeyboardShortcuts'
          }, {
            name: 'listPlacement',
            required: true,
            typeInfo: '.ListPlacement'
          }, {
            name: 'listRefreshMethod',
            required: true
          }, {
            name: 'liveAgentConfig',
            typeInfo: '.LiveAgentConfig'
          }, {
            name: 'primaryTabColor'
          }, {
            name: 'pushNotifications',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PushNotification'
          }, {
            name: 'tabLimitConfig',
            typeInfo: '.TabLimitConfig'
          }, {
            name: 'whitelistedDomains',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'FlowScreenTranslation',
        propertyInfos: [{
            name: 'fields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowScreenFieldTranslation'
          }, {
            name: 'helpText'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'pausedText'
          }]
      }, {
        localName: 'FlowOutputFieldAssignment',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'assignToReference',
            required: true
          }, {
            name: 'field',
            required: true
          }]
      }, {
        localName: 'ApexComponent',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'apiVersion',
            typeInfo: 'Double'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'packageVersions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PackageVersion'
          }]
      }, {
        localName: 'FlowDefinition',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'activeVersionNumber',
            typeInfo: 'Int'
          }, {
            name: 'description'
          }, {
            name: 'masterLabel'
          }]
      }, {
        localName: 'MatchingRules',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'matchingRules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.MatchingRule'
          }]
      }, {
        localName: 'RecordType',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'businessProcess'
          }, {
            name: 'compactLayoutAssignment'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'picklistValues',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RecordTypePicklistValue'
          }]
      }, {
        localName: 'CustomPageWebLinkTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'KnowledgeSitesSettings',
        propertyInfos: [{
            name: 'site',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'SharingBaseRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'accessLevel',
            required: true
          }, {
            name: 'accountSettings',
            typeInfo: '.AccountSharingRuleSettings'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'sharedTo',
            required: true,
            typeInfo: '.SharedTo'
          }]
      }, {
        localName: 'ReportColorRange',
        propertyInfos: [{
            name: 'aggregate',
            typeInfo: '.ReportSummaryType'
          }, {
            name: 'columnName',
            required: true
          }, {
            name: 'highBreakpoint',
            typeInfo: 'Double'
          }, {
            name: 'highColor',
            required: true
          }, {
            name: 'lowBreakpoint',
            typeInfo: 'Double'
          }, {
            name: 'lowColor',
            required: true
          }, {
            name: 'midColor',
            required: true
          }]
      }, {
        localName: 'CustomField',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'businessOwnerGroup'
          }, {
            name: 'businessOwnerUser'
          }, {
            name: 'businessStatus'
          }, {
            name: 'caseSensitive',
            typeInfo: 'Boolean'
          }, {
            name: 'customDataType'
          }, {
            name: 'defaultValue'
          }, {
            name: 'deleteConstraint',
            typeInfo: '.DeleteConstraint'
          }, {
            name: 'deprecated',
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'displayFormat'
          }, {
            name: 'encrypted',
            typeInfo: 'Boolean'
          }, {
            name: 'escapeMarkup',
            typeInfo: 'Boolean'
          }, {
            name: 'externalDeveloperName'
          }, {
            name: 'externalId',
            typeInfo: 'Boolean'
          }, {
            name: 'fieldManageability',
            typeInfo: '.FieldManageability'
          }, {
            name: 'formula'
          }, {
            name: 'formulaTreatBlanksAs',
            typeInfo: '.TreatBlanksAs'
          }, {
            name: 'inlineHelpText'
          }, {
            name: 'isConvertLeadDisabled',
            typeInfo: 'Boolean'
          }, {
            name: 'isFilteringDisabled',
            typeInfo: 'Boolean'
          }, {
            name: 'isNameField',
            typeInfo: 'Boolean'
          }, {
            name: 'isSortingDisabled',
            typeInfo: 'Boolean'
          }, {
            name: 'label'
          }, {
            name: 'length',
            typeInfo: 'Int'
          }, {
            name: 'lookupFilter',
            typeInfo: '.LookupFilter'
          }, {
            name: 'maskChar',
            typeInfo: '.EncryptedFieldMaskChar'
          }, {
            name: 'maskType',
            typeInfo: '.EncryptedFieldMaskType'
          }, {
            name: 'metadataRelationshipControllingField'
          }, {
            name: 'populateExistingRows',
            typeInfo: 'Boolean'
          }, {
            name: 'precision',
            typeInfo: 'Int'
          }, {
            name: 'referenceTargetField'
          }, {
            name: 'referenceTo'
          }, {
            name: 'relationshipLabel'
          }, {
            name: 'relationshipName'
          }, {
            name: 'relationshipOrder',
            typeInfo: 'Int'
          }, {
            name: 'reparentableMasterDetail',
            typeInfo: 'Boolean'
          }, {
            name: 'required',
            typeInfo: 'Boolean'
          }, {
            name: 'restrictedAdminField',
            typeInfo: 'Boolean'
          }, {
            name: 'scale',
            typeInfo: 'Int'
          }, {
            name: 'securityClassification',
            typeInfo: '.SecurityClassification'
          }, {
            name: 'startingNumber',
            typeInfo: 'Int'
          }, {
            name: 'stripMarkup',
            typeInfo: 'Boolean'
          }, {
            name: 'summarizedField'
          }, {
            name: 'summaryFilterItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FilterItem'
          }, {
            name: 'summaryForeignKey'
          }, {
            name: 'summaryOperation',
            typeInfo: '.SummaryOperations'
          }, {
            name: 'trackFeedHistory',
            typeInfo: 'Boolean'
          }, {
            name: 'trackHistory',
            typeInfo: 'Boolean'
          }, {
            name: 'trackTrending',
            typeInfo: 'Boolean'
          }, {
            name: 'type',
            typeInfo: '.FieldType'
          }, {
            name: 'unique',
            typeInfo: 'Boolean'
          }, {
            name: 'valueSet',
            typeInfo: '.ValueSet'
          }, {
            name: 'visibleLines',
            typeInfo: 'Int'
          }, {
            name: 'writeRequiresMasterRead',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'NavigationLinkSet',
        propertyInfos: [{
            name: 'navigationMenuItem',
            minOccurs: 0,
            collection: true,
            typeInfo: '.NavigationMenuItem'
          }]
      }, {
        localName: 'ConnectedAppIpRange',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'end',
            required: true
          }, {
            name: 'start',
            required: true
          }]
      }, {
        localName: 'IntegrationHubSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'canonicalName'
          }, {
            name: 'canonicalNameBindingChar'
          }, {
            name: 'description'
          }, {
            name: 'isEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'isProtected',
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'setupData'
          }, {
            name: 'setupDefinition'
          }, {
            name: 'setupNamespace'
          }, {
            name: 'setupSimpleName',
            required: true
          }, {
            name: 'uuid',
            elementName: 'uUID'
          }, {
            name: 'version'
          }, {
            name: 'versionBuild',
            typeInfo: 'Int'
          }, {
            name: 'versionMajor',
            typeInfo: 'Int'
          }, {
            name: 'versionMinor',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'OrchestrationContextEvent',
        propertyInfos: [{
            name: 'eventType',
            required: true
          }, {
            name: 'orchestrationEvent',
            required: true
          }, {
            name: 'platformEvent',
            required: true
          }, {
            name: 'platformEventPrimaryKey',
            required: true
          }]
      }, {
        localName: 'ModerationRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'action',
            required: true,
            typeInfo: '.ModerationRuleAction'
          }, {
            name: 'actionLimit',
            typeInfo: 'Int'
          }, {
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'entitiesAndFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ModeratedEntityField'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'notifyLimit',
            typeInfo: 'Int'
          }, {
            name: 'timePeriod',
            typeInfo: '.RateLimitTimePeriod'
          }, {
            name: 'type',
            typeInfo: '.ModerationRuleType'
          }, {
            name: 'userCriteria',
            minOccurs: 0,
            collection: true
          }, {
            name: 'userMessage'
          }]
      }, {
        localName: 'SharingRules',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'sharingCriteriaRules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SharingCriteriaRule'
          }, {
            name: 'sharingOwnerRules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SharingOwnerRule'
          }, {
            name: 'sharingTerritoryRules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SharingTerritoryRule'
          }]
      }, {
        localName: 'ValueSettings',
        propertyInfos: [{
            name: 'controllingFieldValue',
            minOccurs: 0,
            collection: true
          }, {
            name: 'valueName',
            required: true
          }]
      }, {
        localName: 'ApprovalProcess',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'allowRecall',
            typeInfo: 'Boolean'
          }, {
            name: 'allowedSubmitters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ApprovalSubmitter'
          }, {
            name: 'approvalPageFields',
            typeInfo: '.ApprovalPageField'
          }, {
            name: 'approvalStep',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ApprovalStep'
          }, {
            name: 'description'
          }, {
            name: 'emailTemplate'
          }, {
            name: 'enableMobileDeviceAccess',
            typeInfo: 'Boolean'
          }, {
            name: 'entryCriteria',
            typeInfo: '.ApprovalEntryCriteria'
          }, {
            name: 'finalApprovalActions',
            typeInfo: '.ApprovalAction'
          }, {
            name: 'finalApprovalRecordLock',
            typeInfo: 'Boolean'
          }, {
            name: 'finalRejectionActions',
            typeInfo: '.ApprovalAction'
          }, {
            name: 'finalRejectionRecordLock',
            typeInfo: 'Boolean'
          }, {
            name: 'initialSubmissionActions',
            typeInfo: '.ApprovalAction'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'nextAutomatedApprover',
            typeInfo: '.NextAutomatedApprover'
          }, {
            name: 'postTemplate'
          }, {
            name: 'recallActions',
            typeInfo: '.ApprovalAction'
          }, {
            name: 'recordEditability',
            required: true,
            typeInfo: '.RecordEditabilityType'
          }, {
            name: 'showApprovalHistory',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'CancelDeployResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true,
            typeInfo: '.CancelDeployResult'
          }]
      }, {
        localName: 'DescribeValueTypeResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true,
            typeInfo: '.DescribeValueTypeResult'
          }]
      }, {
        localName: 'ReputationLevels',
        propertyInfos: [{
            name: 'chatterAnswersReputationLevels',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ChatterAnswersReputationLevel'
          }, {
            name: 'ideaReputationLevels',
            minOccurs: 0,
            collection: true,
            typeInfo: '.IdeaReputationLevel'
          }]
      }, {
        localName: 'CommunityCustomThemeLayoutType',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'SearchLayouts',
        propertyInfos: [{
            name: 'customTabListAdditionalFields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'excludedStandardButtons',
            minOccurs: 0,
            collection: true
          }, {
            name: 'listViewButtons',
            minOccurs: 0,
            collection: true
          }, {
            name: 'lookupDialogsAdditionalFields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'lookupFilterFields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'lookupPhoneDialogsAdditionalFields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'searchFilterFields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'searchResultsAdditionalFields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'searchResultsCustomButtons',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'WorkflowAlert',
        baseTypeInfo: '.WorkflowAction',
        propertyInfos: [{
            name: 'ccEmails',
            minOccurs: 0,
            collection: true
          }, {
            name: 'description',
            required: true
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }, {
            name: 'recipients',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowEmailRecipient'
          }, {
            name: 'senderAddress'
          }, {
            name: 'senderType',
            typeInfo: '.ActionEmailSenderType'
          }, {
            name: 'template',
            required: true
          }]
      }, {
        localName: 'LayoutSectionTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'section',
            required: true
          }]
      }, {
        localName: 'FlowAssignmentItem',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'assignToReference',
            required: true
          }, {
            name: 'operator',
            required: true,
            typeInfo: '.FlowAssignmentOperator'
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'ForecastingSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'displayCurrency',
            typeInfo: '.DisplayCurrency'
          }, {
            name: 'enableForecasts',
            typeInfo: 'Boolean'
          }, {
            name: 'forecastingCategoryMappings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ForecastingCategoryMapping'
          }, {
            name: 'forecastingDisplayedFamilySettings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ForecastingDisplayedFamilySettings'
          }, {
            name: 'forecastingTypeSettings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ForecastingTypeSettings'
          }]
      }, {
        localName: 'SecuritySettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'networkAccess',
            typeInfo: '.NetworkAccess'
          }, {
            name: 'passwordPolicies',
            typeInfo: '.PasswordPolicies'
          }, {
            name: 'sessionSettings',
            typeInfo: '.SessionSettings'
          }]
      }, {
        localName: 'LiveChatDeploymentDomainWhitelist',
        propertyInfos: [{
            name: 'domain',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'UiFormulaRule',
        propertyInfos: [{
            name: 'booleanFilter'
          }, {
            name: 'criteria',
            minOccurs: 0,
            collection: true,
            typeInfo: '.UiFormulaCriterion'
          }]
      }, {
        localName: 'CustomTabTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'EmailToCaseSettings',
        propertyInfos: [{
            name: 'enableE2CSourceTracking',
            typeInfo: 'Boolean'
          }, {
            name: 'enableEmailToCase',
            typeInfo: 'Boolean'
          }, {
            name: 'enableHtmlEmail',
            typeInfo: 'Boolean'
          }, {
            name: 'enableOnDemandEmailToCase',
            typeInfo: 'Boolean'
          }, {
            name: 'enableThreadIDInBody',
            typeInfo: 'Boolean'
          }, {
            name: 'enableThreadIDInSubject',
            typeInfo: 'Boolean'
          }, {
            name: 'notifyOwnerOnNewCaseEmail',
            typeInfo: 'Boolean'
          }, {
            name: 'overEmailLimitAction',
            typeInfo: '.EmailToCaseOnFailureActionType'
          }, {
            name: 'preQuoteSignature',
            typeInfo: 'Boolean'
          }, {
            name: 'routingAddresses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EmailToCaseRoutingAddress'
          }, {
            name: 'unauthorizedSenderAction',
            typeInfo: '.EmailToCaseOnFailureActionType'
          }]
      }, {
        localName: 'FlexiPage',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'flexiPageRegions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlexiPageRegion'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'parentFlexiPage'
          }, {
            name: 'platformActionlist',
            typeInfo: '.PlatformActionList'
          }, {
            name: 'quickActionList',
            typeInfo: '.QuickActionList'
          }, {
            name: 'sobjectType'
          }, {
            name: 'template',
            required: true,
            typeInfo: '.FlexiPageTemplateInstance'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.FlexiPageType'
          }]
      }, {
        localName: 'SynonymDictionary',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'groups',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SynonymGroup'
          }, {
            name: 'isProtected',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'ArticleTypeTemplate',
        propertyInfos: [{
            name: 'channel',
            required: true,
            typeInfo: '.Channel'
          }, {
            name: 'page'
          }, {
            name: 'template',
            required: true,
            typeInfo: '.Template'
          }]
      }, {
        localName: 'CustomExperienceBranding',
        propertyInfos: [{
            name: 'loginFooterText'
          }, {
            name: 'loginLogo'
          }, {
            name: 'pageFooter'
          }, {
            name: 'pageHeader'
          }, {
            name: 'primaryColor',
            required: true
          }, {
            name: 'primaryComplementColor',
            required: true
          }, {
            name: 'quaternaryColor',
            required: true
          }, {
            name: 'quaternaryComplementColor',
            required: true
          }, {
            name: 'secondaryColor',
            required: true
          }, {
            name: 'tertiaryColor',
            required: true
          }, {
            name: 'tertiaryComplementColor',
            required: true
          }, {
            name: 'zeronaryColor',
            required: true
          }, {
            name: 'zeronaryComplementColor',
            required: true
          }]
      }, {
        localName: 'ObjectSearchSetting',
        propertyInfos: [{
            name: 'enhancedLookupEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'lookupAutoCompleteEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'resultsPerPageCount',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'LiveChatButtonSkills',
        propertyInfos: [{
            name: 'skill',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'WorkflowActionReference',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'type',
            required: true,
            typeInfo: '.WorkflowActionType'
          }]
      }, {
        localName: 'TransactionSecurityNotification',
        propertyInfos: [{
            name: 'inApp',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'sendEmail',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'user',
            required: true
          }]
      }, {
        localName: 'MiniLayout',
        propertyInfos: [{
            name: 'fields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'relatedLists',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RelatedListItem'
          }]
      }, {
        localName: 'ReportTypeTranslation',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'label'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'sections',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportTypeSectionTranslation'
          }]
      }, {
        localName: 'CustomDataTypeComponent',
        propertyInfos: [{
            name: 'developerSuffix',
            required: true
          }, {
            name: 'enforceFieldRequiredness',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'length',
            typeInfo: 'Int'
          }, {
            name: 'precision',
            typeInfo: 'Int'
          }, {
            name: 'scale',
            typeInfo: 'Int'
          }, {
            name: 'sortOrder',
            typeInfo: '.SortOrder'
          }, {
            name: 'sortPriority',
            typeInfo: 'Int'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.FieldType'
          }]
      }, {
        localName: 'HomePageComponent',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'body'
          }, {
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'links',
            minOccurs: 0,
            collection: true
          }, {
            name: 'page'
          }, {
            name: 'pageComponentType',
            required: true,
            typeInfo: '.PageComponentType'
          }, {
            name: 'showLabel',
            typeInfo: 'Boolean'
          }, {
            name: 'showScrollbars',
            typeInfo: 'Boolean'
          }, {
            name: 'width',
            typeInfo: '.PageComponentWidth'
          }]
      }, {
        localName: 'OpportunityListFieldsLabelMapping',
        propertyInfos: [{
            name: 'field',
            required: true
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'ProfileApplicationVisibility',
        propertyInfos: [{
            name: 'application',
            required: true
          }, {
            name: '_default',
            required: true,
            elementName: 'default',
            typeInfo: 'Boolean'
          }, {
            name: 'visible',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'DuplicateRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'actionOnInsert',
            required: true,
            typeInfo: '.DupeActionType'
          }, {
            name: 'actionOnUpdate',
            required: true,
            typeInfo: '.DupeActionType'
          }, {
            name: 'alertText',
            required: true
          }, {
            name: 'description',
            required: true
          }, {
            name: 'duplicateRuleFilter',
            required: true,
            typeInfo: '.DuplicateRuleFilter'
          }, {
            name: 'duplicateRuleMatchRules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DuplicateRuleMatchRule'
          }, {
            name: 'isActive',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'operationsOnInsert',
            minOccurs: 0,
            collection: true
          }, {
            name: 'operationsOnUpdate',
            minOccurs: 0,
            collection: true
          }, {
            name: 'securityOption',
            required: true,
            typeInfo: '.DupeSecurityOptionType'
          }, {
            name: 'sortOrder',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'ProfileCustomPermissions',
        propertyInfos: [{
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'CustomPageWebLink',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'availability',
            required: true,
            typeInfo: '.WebLinkAvailability'
          }, {
            name: 'description'
          }, {
            name: 'displayType',
            required: true,
            typeInfo: '.WebLinkDisplayType'
          }, {
            name: 'encodingKey',
            typeInfo: '.Encoding'
          }, {
            name: 'hasMenubar',
            typeInfo: 'Boolean'
          }, {
            name: 'hasScrollbars',
            typeInfo: 'Boolean'
          }, {
            name: 'hasToolbar',
            typeInfo: 'Boolean'
          }, {
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'isResizable',
            typeInfo: 'Boolean'
          }, {
            name: 'linkType',
            required: true,
            typeInfo: '.WebLinkType'
          }, {
            name: 'masterLabel'
          }, {
            name: 'openType',
            required: true,
            typeInfo: '.WebLinkWindowType'
          }, {
            name: 'page'
          }, {
            name: 'position',
            typeInfo: '.WebLinkPosition'
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }, {
            name: 'requireRowSelection',
            typeInfo: 'Boolean'
          }, {
            name: 'scontrol'
          }, {
            name: 'showsLocation',
            typeInfo: 'Boolean'
          }, {
            name: 'showsStatus',
            typeInfo: 'Boolean'
          }, {
            name: 'url'
          }, {
            name: 'width',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'QuickActionTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'ReportChartComponentLayoutItem',
        propertyInfos: [{
            name: 'cacheData',
            typeInfo: 'Boolean'
          }, {
            name: 'contextFilterableField'
          }, {
            name: 'error'
          }, {
            name: 'hideOnError',
            typeInfo: 'Boolean'
          }, {
            name: 'includeContext',
            typeInfo: 'Boolean'
          }, {
            name: 'reportName',
            required: true
          }, {
            name: 'showTitle',
            typeInfo: 'Boolean'
          }, {
            name: 'size',
            typeInfo: '.ReportChartComponentSize'
          }]
      }, {
        localName: 'CustomApplicationTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'AccessMapping',
        propertyInfos: [{
            name: 'accessLevel',
            required: true
          }, {
            name: 'object',
            required: true
          }, {
            name: 'objectField',
            required: true
          }, {
            name: 'userField',
            required: true
          }]
      }, {
        localName: 'ReputationPointsRules',
        propertyInfos: [{
            name: 'pointsRule',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReputationPointsRule'
          }]
      }, {
        localName: 'RecommendationStrategy',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'recommendationStrategyName',
            required: true
          }, {
            name: 'strategyNode',
            minOccurs: 0,
            collection: true,
            typeInfo: '.StrategyNode'
          }]
      }, {
        localName: 'IndexField',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'sortDirection',
            required: true
          }]
      }, {
        localName: 'AssistantRecommendationType',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'platformActionlist',
            typeInfo: '.PlatformActionList'
          }, {
            name: 'sobjectType',
            required: true
          }, {
            name: 'title',
            required: true
          }]
      }, {
        localName: 'VisualizationResource',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'file',
            required: true
          }, {
            name: 'rank',
            typeInfo: 'Int'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.VisualizationResourceType'
          }]
      }, {
        localName: 'EntitlementSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'assetLookupLimitedToActiveEntitlementsOnAccount',
            typeInfo: 'Boolean'
          }, {
            name: 'assetLookupLimitedToActiveEntitlementsOnContact',
            typeInfo: 'Boolean'
          }, {
            name: 'assetLookupLimitedToSameAccount',
            typeInfo: 'Boolean'
          }, {
            name: 'assetLookupLimitedToSameContact',
            typeInfo: 'Boolean'
          }, {
            name: 'enableEntitlementVersioning',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enableEntitlements',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'entitlementLookupLimitedToActiveStatus',
            typeInfo: 'Boolean'
          }, {
            name: 'entitlementLookupLimitedToSameAccount',
            typeInfo: 'Boolean'
          }, {
            name: 'entitlementLookupLimitedToSameAsset',
            typeInfo: 'Boolean'
          }, {
            name: 'entitlementLookupLimitedToSameContact',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlowRecordUpdate',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'connector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'faultConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'filters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowRecordFilter'
          }, {
            name: 'inputAssignments',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowInputFieldAssignment'
          }, {
            name: 'inputReference'
          }, {
            name: 'object'
          }]
      }, {
        localName: 'Territory2Model',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'customFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldValue'
          }, {
            name: 'description'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'WaveXmdDimension',
        propertyInfos: [{
            name: 'customActions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WaveXmdDimensionCustomAction'
          }, {
            name: 'customActionsEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'dateFormat'
          }, {
            name: 'description'
          }, {
            name: 'field',
            required: true
          }, {
            name: 'fullyQualifiedName'
          }, {
            name: 'imageTemplate'
          }, {
            name: 'isDerived',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isMultiValue',
            typeInfo: 'Boolean'
          }, {
            name: 'label'
          }, {
            name: 'linkTemplate'
          }, {
            name: 'linkTemplateEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'linkTooltip'
          }, {
            name: 'members',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WaveXmdDimensionMember'
          }, {
            name: 'origin'
          }, {
            name: 'recordDisplayFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WaveXmdRecordDisplayLookup'
          }, {
            name: 'recordIdField'
          }, {
            name: 'recordOrganizationIdField'
          }, {
            name: 'salesforceActions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WaveXmdDimensionSalesforceAction'
          }, {
            name: 'salesforceActionsEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'showDetailsDefaultFieldIndex',
            typeInfo: 'Int'
          }, {
            name: 'showInExplorer',
            typeInfo: 'Boolean'
          }, {
            name: 'sortIndex',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'FiscalYearSettings',
        propertyInfos: [{
            name: 'fiscalYearNameBasedOn'
          }, {
            name: 'startMonth'
          }]
      }, {
        localName: 'CustomValue',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'color'
          }, {
            name: '_default',
            required: true,
            elementName: 'default',
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'isActive',
            typeInfo: 'Boolean'
          }, {
            name: 'label'
          }]
      }, {
        localName: 'DocumentFolder',
        baseTypeInfo: '.Folder'
      }, {
        localName: 'ReportAggregate',
        propertyInfos: [{
            name: 'acrossGroupingContext'
          }, {
            name: 'calculatedFormula',
            required: true
          }, {
            name: 'datatype',
            required: true,
            typeInfo: '.ReportAggregateDatatype'
          }, {
            name: 'description'
          }, {
            name: 'developerName',
            required: true
          }, {
            name: 'downGroupingContext'
          }, {
            name: 'isActive',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isCrossBlock',
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'reportType'
          }, {
            name: 'scale',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'ReputationBranding',
        propertyInfos: [{
            name: 'smallImage'
          }]
      }, {
        localName: 'FeedFilterCriterion',
        propertyInfos: [{
            name: 'feedItemType',
            required: true,
            typeInfo: '.FeedItemType'
          }, {
            name: 'feedItemVisibility',
            typeInfo: '.FeedItemVisibility'
          }, {
            name: 'relatedSObjectType'
          }]
      }, {
        localName: 'PermissionSetRecordTypeVisibility',
        propertyInfos: [{
            name: 'recordType',
            required: true
          }, {
            name: 'visible',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'WeightedSourceCategory',
        propertyInfos: [{
            name: 'sourceCategoryApiName',
            required: true
          }, {
            name: 'weight',
            required: true,
            typeInfo: 'Double'
          }]
      }, {
        localName: 'PermissionSetExternalDataSourceAccess',
        propertyInfos: [{
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'externalDataSource',
            required: true
          }]
      }, {
        localName: 'PublicGroups',
        propertyInfos: [{
            name: 'publicGroup',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'ReportHistoricalSelector',
        propertyInfos: [{
            name: 'snapshot',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'ReputationLevel',
        propertyInfos: [{
            name: 'branding',
            typeInfo: '.ReputationBranding'
          }, {
            name: 'label'
          }, {
            name: 'lowerThreshold',
            required: true,
            typeInfo: 'Double'
          }]
      }, {
        localName: 'PermissionSetFieldPermissions',
        propertyInfos: [{
            name: 'editable',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'field',
            required: true
          }, {
            name: 'readable',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'AgentConfigAssignments',
        propertyInfos: [{
            name: 'profiles',
            typeInfo: '.AgentConfigProfileAssignments'
          }, {
            name: 'users',
            typeInfo: '.AgentConfigUserAssignments'
          }]
      }, {
        localName: 'ReportFilterItem',
        propertyInfos: [{
            name: 'column',
            required: true
          }, {
            name: 'columnToColumn',
            typeInfo: 'Boolean'
          }, {
            name: 'isUnlocked',
            typeInfo: 'Boolean'
          }, {
            name: 'operator',
            required: true,
            typeInfo: '.FilterOperation'
          }, {
            name: 'snapshot'
          }, {
            name: 'value'
          }]
      }, {
        localName: 'FlowSubflow',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'connector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'flowName',
            required: true
          }, {
            name: 'inputAssignments',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowSubflowInputAssignment'
          }, {
            name: 'outputAssignments',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowSubflowOutputAssignment'
          }]
      }, {
        localName: 'AdjustmentsSettings',
        propertyInfos: [{
            name: 'enableAdjustments',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enableOwnerAdjustments',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'DeployMessage',
        propertyInfos: [{
            name: 'changed',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'columnNumber',
            typeInfo: 'Int'
          }, {
            name: 'componentType'
          }, {
            name: 'created',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'createdDate',
            required: true,
            typeInfo: 'DateTime'
          }, {
            name: 'deleted',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'fileName',
            required: true
          }, {
            name: 'fullName',
            required: true
          }, {
            name: 'id'
          }, {
            name: 'lineNumber',
            typeInfo: 'Int'
          }, {
            name: 'problem'
          }, {
            name: 'problemType',
            typeInfo: '.DeployProblemType'
          }, {
            name: 'success',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlowInputValidationRule',
        propertyInfos: [{
            name: 'errorMessage',
            required: true
          }, {
            name: 'formulaExpression',
            required: true
          }]
      }, {
        localName: 'WaveXmdDimensionSalesforceAction',
        propertyInfos: [{
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'salesforceActionName',
            required: true
          }, {
            name: 'sortIndex',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'ProfileFieldLevelSecurity',
        propertyInfos: [{
            name: 'editable',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'field',
            required: true
          }, {
            name: 'readable',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'RoleAndSubordinates',
        propertyInfos: [{
            name: 'roleAndSubordinate',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'ApprovalSubmitter',
        propertyInfos: [{
            name: 'submitter'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.ProcessSubmitterType'
          }]
      }, {
        localName: 'WorkflowTimeTrigger',
        propertyInfos: [{
            name: 'actions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowActionReference'
          }, {
            name: 'offsetFromField'
          }, {
            name: 'timeLength'
          }, {
            name: 'workflowTimeTriggerUnit',
            required: true,
            typeInfo: '.WorkflowTimeUnits'
          }]
      }, {
        localName: 'TransactionSecurityAction',
        propertyInfos: [{
            name: 'block',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'endSession',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'freezeUser',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'notifications',
            minOccurs: 0,
            collection: true,
            typeInfo: '.TransactionSecurityNotification'
          }, {
            name: 'twoFactorAuthentication',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlowInputValidationRuleTranslation',
        propertyInfos: [{
            name: 'errorMessage'
          }]
      }, {
        localName: 'LiveMessageSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableLiveMessage',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'SearchSettingsByObject',
        propertyInfos: [{
            name: 'searchSettingsByObject',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ObjectSearchSetting'
          }]
      }, {
        localName: 'QuickActionLayout',
        propertyInfos: [{
            name: 'layoutSectionStyle',
            required: true,
            typeInfo: '.LayoutSectionStyle'
          }, {
            name: 'quickActionLayoutColumns',
            minOccurs: 0,
            collection: true,
            typeInfo: '.QuickActionLayoutColumn'
          }]
      }, {
        localName: 'DeployResult',
        propertyInfos: [{
            name: 'canceledBy'
          }, {
            name: 'canceledByName'
          }, {
            name: 'checkOnly',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'completedDate',
            typeInfo: 'DateTime'
          }, {
            name: 'createdBy',
            required: true
          }, {
            name: 'createdByName',
            required: true
          }, {
            name: 'createdDate',
            required: true,
            typeInfo: 'DateTime'
          }, {
            name: 'details',
            required: true,
            typeInfo: '.DeployDetails'
          }, {
            name: 'done',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'errorMessage'
          }, {
            name: 'errorStatusCode',
            values: ['ALL_OR_NONE_OPERATION_ROLLED_BACK', 'ALREADY_IN_PROCESS', 'APEX_DATA_ACCESS_RESTRICTION', 'ASSIGNEE_TYPE_REQUIRED', 'AURA_COMPILE_ERROR', 'BAD_CUSTOM_ENTITY_PARENT_DOMAIN', 'BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED', 'CANNOT_CASCADE_PRODUCT_ACTIVE', 'CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD', 'CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD', 'CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE', 'CANNOT_DEACTIVATE_DIVISION', 'CANNOT_DELETE_GLOBAL_ACTION_LIST', 'CANNOT_DELETE_LAST_DATED_CONVERSION_RATE', 'CANNOT_DELETE_MANAGED_OBJECT', 'CANNOT_DISABLE_LAST_ADMIN', 'CANNOT_ENABLE_IP_RESTRICT_REQUESTS', 'CANNOT_EXECUTE_FLOW_TRIGGER', 'CANNOT_FREEZE_SELF', 'CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY', 'CANNOT_MODIFY_MANAGED_OBJECT', 'CANNOT_PASSWORD_LOCKOUT', 'CANNOT_POST_TO_ARCHIVED_GROUP', 'CANNOT_RENAME_APEX_REFERENCED_FIELD', 'CANNOT_RENAME_APEX_REFERENCED_OBJECT', 'CANNOT_RENAME_REFERENCED_FIELD', 'CANNOT_RENAME_REFERENCED_OBJECT', 'CANNOT_REPARENT_RECORD', 'CANNOT_UPDATE_CONVERTED_LEAD', 'CANT_DISABLE_CORP_CURRENCY', 'CANT_UNSET_CORP_CURRENCY', 'CHILD_SHARE_FAILS_PARENT', 'CIRCULAR_DEPENDENCY', 'CLEAN_SERVICE_ERROR', 'COLLISION_DETECTED', 'COMMERCIAL_CONTROL_ERROR', 'COMMUNITY_NOT_ACCESSIBLE', 'CONFLICTING_ENVIRONMENT_HUB_MEMBER', 'CONFLICTING_SSO_USER_MAPPING', 'CUSTOM_APEX_ERROR', 'CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED', 'CUSTOM_ENTITY_OR_FIELD_LIMIT', 'CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED', 'CUSTOM_INDEX_EXISTS', 'CUSTOM_LINK_LIMIT_EXCEEDED', 'CUSTOM_METADATA_LIMIT_EXCEEDED', 'CUSTOM_METADATA_REL_FIELD_MANAGEABILITY', 'CUSTOM_SETTINGS_LIMIT_EXCEEDED', 'CUSTOM_TAB_LIMIT_EXCEEDED', 'DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR', 'DATAASSESSMENT_CONFIG_SERVICE_ERROR', 'DATACLOUDADDRESS_NO_RECORDS_FOUND', 'DATACLOUDADDRESS_PROCESSING_ERROR', 'DATACLOUDADDRESS_SERVER_ERROR', 'DELETE_FAILED', 'DELETE_NOT_ALLOWED', 'DELETE_OPERATION_TOO_LARGE', 'DELETE_REQUIRED_ON_CASCADE', 'DEPENDENCY_EXISTS', 'DUPLICATES_DETECTED', 'DUPLICATE_CASE_SOLUTION', 'DUPLICATE_COMM_NICKNAME', 'DUPLICATE_CUSTOM_ENTITY_DEFINITION', 'DUPLICATE_CUSTOM_TAB_MOTIF', 'DUPLICATE_DEVELOPER_NAME', 'DUPLICATE_EXTERNAL_ID', 'DUPLICATE_MASTER_LABEL', 'DUPLICATE_SENDER_DISPLAY_NAME', 'DUPLICATE_USERNAME', 'DUPLICATE_VALUE', 'EMAIL_ADDRESS_BOUNCED', 'EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR', 'EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR', 'EMAIL_OPTED_OUT', 'EMAIL_TEMPLATE_FORMULA_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR', 'EMAIL_TEMPLATE_PROCESSING_ERROR', 'EMPTY_SCONTROL_FILE_NAME', 'ENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR', 'ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE', 'ENTITY_IS_ARCHIVED', 'ENTITY_IS_DELETED', 'ENTITY_IS_LOCKED', 'ENTITY_SAVE_ERROR', 'ENTITY_SAVE_VALIDATION_ERROR', 'ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT', 'ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB', 'ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB', 'ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN', 'ERROR_IN_MAILER', 'EXCHANGE_WEB_SERVICES_URL_INVALID', 'FAILED_ACTIVATION', 'FIELD_CUSTOM_VALIDATION_EXCEPTION', 'FIELD_FILTER_VALIDATION_EXCEPTION', 'FIELD_INTEGRITY_EXCEPTION', 'FIELD_KEYWORD_LIST_MATCH_LIMIT', 'FIELD_MAPPING_ERROR', 'FIELD_MODERATION_RULE_BLOCK', 'FIELD_NOT_UPDATABLE', 'FILE_EXTENSION_NOT_ALLOWED', 'FILE_SIZE_LIMIT_EXCEEDED', 'FILTERED_LOOKUP_LIMIT_EXCEEDED', 'FIND_DUPLICATES_ERROR', 'FLOW_EXCEPTION', 'FUNCTIONALITY_NOT_ENABLED', 'HAS_PUBLIC_REFERENCES', 'HTML_FILE_UPLOAD_NOT_ALLOWED', 'IMAGE_TOO_LARGE', 'INACTIVE_OWNER_OR_USER', 'INACTIVE_RULE_ERROR', 'INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE', 'INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY', 'INSUFFICIENT_ACCESS_OR_READONLY', 'INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA', 'INSUFFICIENT_CREDITS', 'INTERNAL_ERROR', 'INVALID_ACCESS_LEVEL', 'INVALID_ACCESS_TOKEN', 'INVALID_API_INPUT', 'INVALID_ARGUMENT_TYPE', 'INVALID_ASSIGNEE_TYPE', 'INVALID_ASSIGNMENT_RULE', 'INVALID_BATCH_OPERATION', 'INVALID_CONTENT_TYPE', 'INVALID_CREDIT_CARD_INFO', 'INVALID_CROSS_REFERENCE_KEY', 'INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD', 'INVALID_CURRENCY_CONV_RATE', 'INVALID_CURRENCY_CORP_RATE', 'INVALID_CURRENCY_ISO', 'INVALID_DATASET_REFERENCE_INPUT', 'INVALID_DATA_CATEGORY_GROUP_REFERENCE', 'INVALID_DATA_URI', 'INVALID_EMAIL_ADDRESS', 'INVALID_EMPTY_KEY_OWNER', 'INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR', 'INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR', 'INVALID_ENTITY_FOR_UPSERT', 'INVALID_ENVIRONMENT_HUB_MEMBER', 'INVALID_EVENT_DELIVERY', 'INVALID_EVENT_INPUT', 'INVALID_EVENT_SUBSCRIPTION', 'INVALID_EXTENSION_ID', 'INVALID_FIELD', 'INVALID_FIELD_FOR_INSERT_UPDATE', 'INVALID_FIELD_WHEN_USING_TEMPLATE', 'INVALID_FILTER_ACTION', 'INVALID_GOOGLE_DOCS_URL', 'INVALID_ID_FIELD', 'INVALID_INET_ADDRESS', 'INVALID_INPUT', 'INVALID_KEY_FIELD_INPUT', 'INVALID_LINEITEM_CLONE_STATE', 'INVALID_MARKUP', 'INVALID_MASTER_OR_TRANSLATED_SOLUTION', 'INVALID_MESSAGE_ID_REFERENCE', 'INVALID_NAMESPACE_PREFIX', 'INVALID_OAUTH_URL', 'INVALID_OPERATION', 'INVALID_OPERATOR', 'INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST', 'INVALID_OWNER', 'INVALID_PACKAGE_LICENSE', 'INVALID_PACKAGE_VERSION', 'INVALID_PARTNER_NETWORK_STATUS', 'INVALID_PAYLOAD_VERSION', 'INVALID_PERSON_ACCOUNT_OPERATION', 'INVALID_PROVIDER_TYPE', 'INVALID_QUERY_LOCATOR', 'INVALID_READ_ONLY_USER_DML', 'INVALID_REFRESH_TOKEN', 'INVALID_RUNTIME_VALUE', 'INVALID_SAVE_AS_ACTIVITY_FLAG', 'INVALID_SESSION_ID', 'INVALID_SETUP_OWNER', 'INVALID_SIGNUP_COUNTRY', 'INVALID_SIGNUP_OPTION', 'INVALID_SITE_DELETE_EXCEPTION', 'INVALID_SITE_FILE_IMPORTED_EXCEPTION', 'INVALID_SITE_FILE_TYPE_EXCEPTION', 'INVALID_STATUS', 'INVALID_SUBDOMAIN', 'INVALID_TEXT_REPRESENTATION', 'INVALID_TYPE', 'INVALID_TYPE_FOR_OPERATION', 'INVALID_TYPE_ON_FIELD_IN_RECORD', 'INVALID_USERID', 'IP_RANGE_LIMIT_EXCEEDED', 'ITEM_NOT_FOUND', 'JIGSAW_IMPORT_LIMIT_EXCEEDED', 'LICENSE_LIMIT_EXCEEDED', 'LIGHT_PORTAL_USER_EXCEPTION', 'LIMIT_EXCEEDED', 'MALFORMED_ID', 'MANAGER_NOT_DEFINED', 'MASSMAIL_RETRY_LIMIT_EXCEEDED', 'MASS_MAIL_LIMIT_EXCEEDED', 'MATCH_DEFINITION_ERROR', 'MATCH_OPERATION_ERROR', 'MATCH_OPERATION_INVALID_ENGINE_ERROR', 'MATCH_OPERATION_INVALID_RULE_ERROR', 'MATCH_OPERATION_MISSING_ENGINE_ERROR', 'MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR', 'MATCH_OPERATION_MISSING_OPTIONS_ERROR', 'MATCH_OPERATION_MISSING_RULE_ERROR', 'MATCH_OPERATION_UNKNOWN_RULE_ERROR', 'MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR', 'MATCH_PRECONDITION_FAILED', 'MATCH_RUNTIME_ERROR', 'MATCH_SERVICE_ERROR', 'MATCH_SERVICE_TIMED_OUT', 'MATCH_SERVICE_UNAVAILABLE_ERROR', 'MAXIMUM_CCEMAILS_EXCEEDED', 'MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED', 'MAXIMUM_HIERARCHY_CHILDREN_REACHED', 'MAXIMUM_HIERARCHY_LEVELS_REACHED', 'MAXIMUM_HIERARCHY_TREE_SIZE_REACHED', 'MAXIMUM_SIZE_OF_ATTACHMENT', 'MAXIMUM_SIZE_OF_DOCUMENT', 'MAX_ACTIONS_PER_RULE_EXCEEDED', 'MAX_ACTIVE_RULES_EXCEEDED', 'MAX_APPROVAL_STEPS_EXCEEDED', 'MAX_DEPTH_IN_FLOW_EXECUTION', 'MAX_FORMULAS_PER_RULE_EXCEEDED', 'MAX_LIMIT_EXCEEDED', 'MAX_RULES_EXCEEDED', 'MAX_RULE_ENTRIES_EXCEEDED', 'MAX_TASK_DESCRIPTION_EXCEEEDED', 'MAX_TM_RULES_EXCEEDED', 'MAX_TM_RULE_ITEMS_EXCEEDED', 'MAX_TRIGGERS_EXCEEDED', 'MERGE_FAILED', 'METADATA_FIELD_UPDATE_ERROR', 'MISSING_ARGUMENT', 'MISSING_RECORD', 'MIXED_DML_OPERATION', 'NONUNIQUE_SHIPPING_ADDRESS', 'NO_ACCESS_TOKEN', 'NO_ACCESS_TOKEN_FROM_REFRESH', 'NO_APPLICABLE_PROCESS', 'NO_ATTACHMENT_PERMISSION', 'NO_AUTH_PROVIDER', 'NO_INACTIVE_DIVISION_MEMBERS', 'NO_MASS_MAIL_PERMISSION', 'NO_PARTNER_PERMISSION', 'NO_REFRESH_TOKEN', 'NO_SUCH_USER_EXISTS', 'NO_TOKEN_ENDPOINT', 'NUMBER_OUTSIDE_VALID_RANGE', 'NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED', 'OPTED_OUT_OF_MASS_MAIL', 'OP_WITH_INVALID_USER_TYPE_EXCEPTION', 'ORCHESTRATION_INVALID', 'PACKAGE_LICENSE_REQUIRED', 'PACKAGING_API_INSTALL_FAILED', 'PACKAGING_API_UNINSTALL_FAILED', 'PALI_INVALID_ACTION_ID', 'PALI_INVALID_ACTION_NAME', 'PALI_INVALID_ACTION_TYPE', 'PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID', 'PAL_INVALID_ENTITY_ID', 'PAL_INVALID_FLEXIPAGE_ID', 'PAL_INVALID_LAYOUT_ID', 'PAL_INVALID_PARAMETERS', 'PAYLOAD_SIZE_EXCEEDED', 'PA_API_EXCEPTION', 'PA_AXIS_FAULT', 'PA_INVALID_ID_EXCEPTION', 'PA_NO_ACCESS_EXCEPTION', 'PA_NO_DATA_FOUND_EXCEPTION', 'PA_URI_SYNTAX_EXCEPTION', 'PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION', 'PORTAL_NO_ACCESS', 'PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT', 'PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION', 'PRIVATE_CONTACT_ON_ASSET', 'PROCESSING_HALTED', 'QA_INVALID_CREATE_FEED_ITEM', 'QA_INVALID_SUCCESS_MESSAGE', 'QUERY_TIMEOUT', 'QUICK_ACTION_LIST_ITEM_NOT_ALLOWED', 'QUICK_ACTION_LIST_NOT_ALLOWED', 'RECORD_IN_USE_BY_WORKFLOW', 'REL_FIELD_BAD_ACCESSIBILITY', 'REPUTATION_MINIMUM_NUMBER_NOT_REACHED', 'REQUEST_RUNNING_TOO_LONG', 'REQUIRED_FEATURE_MISSING', 'REQUIRED_FIELD_MISSING', 'RETRIEVE_EXCHANGE_ATTACHMENT_FAILED', 'RETRIEVE_EXCHANGE_EMAIL_FAILED', 'RETRIEVE_EXCHANGE_EVENT_FAILED', 'RETRIEVE_GOOGLE_EMAIL_FAILED', 'RETRIEVE_GOOGLE_EVENT_FAILED', 'RETRIEVE_USER_CONFIG_ERROR', 'SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR', 'SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR', 'SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR', 'SELF_REFERENCE_FROM_FLOW', 'SELF_REFERENCE_FROM_TRIGGER', 'SHARE_NEEDED_FOR_CHILD_OWNER', 'SINGLE_EMAIL_LIMIT_EXCEEDED', 'SOCIAL_ACCOUNT_NOT_FOUND', 'SOCIAL_ACTION_INVALID', 'SOCIAL_PERSONA_NOT_FOUND', 'SOCIAL_POST_INVALID', 'SOCIAL_POST_NOT_FOUND', 'STANDARD_PRICE_NOT_DEFINED', 'STORAGE_LIMIT_EXCEEDED', 'STRING_TOO_LONG', 'SUBDOMAIN_IN_USE', 'TABSET_LIMIT_EXCEEDED', 'TEMPLATE_NOT_ACTIVE', 'TEMPLATE_NOT_FOUND', 'TERMS_OF_SERVICE_UNREAD', 'TERRITORY_REALIGN_IN_PROGRESS', 'TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET', 'TOO_MANY_APEX_REQUESTS', 'TOO_MANY_ENUM_VALUE', 'TOO_MANY_POSSIBLE_USERS_EXIST', 'TRANSFER_REQUIRES_READ', 'UNABLE_TO_LOCK_ROW', 'UNAVAILABLE_RECORDTYPE_EXCEPTION', 'UNAVAILABLE_REF', 'UNDELETE_FAILED', 'UNKNOWN_EXCEPTION', 'UNKNOWN_TOKEN_ERROR', 'UNSAFE_HTML_CONTENT', 'UNSPECIFIED_EMAIL_ADDRESS', 'UNSUPPORTED_APEX_TRIGGER_OPERATON', 'UNSUPPORTED_SOCIAL_PROVIDER', 'UNVERIFIED_SENDER_ADDRESS', 'UPDATE_GOOGLE_EMAIL_LABEL_FAILED', 'USER_OWNS_PORTAL_ACCOUNT_EXCEPTION', 'USER_WITH_APEX_SHARES_EXCEPTION', 'VF_COMPILE_ERROR', 'WEBLINK_SIZE_LIMIT_EXCEEDED', 'WEBLINK_URL_INVALID', 'WRONG_CONTROLLER_TYPE', 'XCLEAN_UNEXPECTED_ERROR']
          }, {
            name: 'id',
            required: true
          }, {
            name: 'ignoreWarnings',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'lastModifiedDate',
            typeInfo: 'DateTime'
          }, {
            name: 'numberComponentErrors',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'numberComponentsDeployed',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'numberComponentsTotal',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'numberTestErrors',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'numberTestsCompleted',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'numberTestsTotal',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'rollbackOnError',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'runTestsEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'startDate',
            typeInfo: 'DateTime'
          }, {
            name: 'stateDetail'
          }, {
            name: 'status',
            required: true,
            typeInfo: '.DeployStatus'
          }, {
            name: 'success',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'PermissionSetGroup',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'isCalculatingChanges',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'permissionSets',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'WebLinkTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'FlowWait',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'defaultConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'defaultConnectorLabel',
            required: true
          }, {
            name: 'faultConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'waitEvents',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowWaitEvent'
          }]
      }, {
        localName: 'PackageTypeMembers',
        propertyInfos: [{
            name: 'members',
            minOccurs: 0,
            collection: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'Territory2Rule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'booleanFilter'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'objectType',
            required: true
          }, {
            name: 'ruleItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Territory2RuleItem'
          }]
      }, {
        localName: 'ReportTimeFrameFilter',
        propertyInfos: [{
            name: 'dateColumn',
            required: true
          }, {
            name: 'endDate',
            typeInfo: 'Date'
          }, {
            name: 'interval',
            required: true,
            typeInfo: '.UserDateInterval'
          }, {
            name: 'startDate',
            typeInfo: 'Date'
          }]
      }, {
        localName: 'FieldServiceSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'fieldServiceNotificationsOrgPref',
            typeInfo: 'Boolean'
          }, {
            name: 'fieldServiceOrgPref',
            typeInfo: 'Boolean'
          }, {
            name: 'serviceAppointmentsDueDateOffsetOrgValue',
            typeInfo: 'Int'
          }, {
            name: 'workOrderLineItemSearchFields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'workOrderSearchFields',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'LightningComponentBundle',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'apiVersion',
            typeInfo: 'Double'
          }, {
            name: 'isExposed',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ChannelLayout',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enabledChannels',
            minOccurs: 0,
            collection: true
          }, {
            name: 'label',
            required: true
          }, {
            name: 'layoutItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ChannelLayoutItem'
          }, {
            name: 'recordType'
          }]
      }, {
        localName: 'WaveDataflow',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'dataflowType'
          }, {
            name: 'description'
          }, {
            name: 'masterLabel',
            required: true
          }]
      }, {
        localName: 'ConnectedAppOauthConfig',
        propertyInfos: [{
            name: 'callbackUrl',
            required: true
          }, {
            name: 'certificate'
          }, {
            name: 'consumerKey'
          }, {
            name: 'consumerSecret'
          }, {
            name: 'scopes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ConnectedAppOauthAccessScope'
          }, {
            name: 'singleLogoutUrl'
          }]
      }, {
        localName: 'FeedLayoutFilter',
        propertyInfos: [{
            name: 'feedFilterName'
          }, {
            name: 'feedFilterType',
            required: true,
            typeInfo: '.FeedLayoutFilterType'
          }, {
            name: 'feedItemType',
            typeInfo: '.FeedItemType'
          }]
      }, {
        localName: 'CustomMetadata',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'label'
          }, {
            name: '_protected',
            elementName: 'protected',
            typeInfo: 'Boolean'
          }, {
            name: 'values',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomMetadataValue'
          }]
      }, {
        localName: 'ProfileRecordTypeVisibility',
        propertyInfos: [{
            name: '_default',
            required: true,
            elementName: 'default',
            typeInfo: 'Boolean'
          }, {
            name: 'personAccountDefault',
            typeInfo: 'Boolean'
          }, {
            name: 'recordType',
            required: true
          }, {
            name: 'visible',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'SessionSettings',
        propertyInfos: [{
            name: 'disableTimeoutWarning',
            typeInfo: 'Boolean'
          }, {
            name: 'enableCSPOnEmail',
            typeInfo: 'Boolean'
          }, {
            name: 'enableCSRFOnGet',
            typeInfo: 'Boolean'
          }, {
            name: 'enableCSRFOnPost',
            typeInfo: 'Boolean'
          }, {
            name: 'enableCacheAndAutocomplete',
            typeInfo: 'Boolean'
          }, {
            name: 'enableClickjackNonsetupSFDC',
            typeInfo: 'Boolean'
          }, {
            name: 'enableClickjackNonsetupUser',
            typeInfo: 'Boolean'
          }, {
            name: 'enableClickjackNonsetupUserHeaderless',
            typeInfo: 'Boolean'
          }, {
            name: 'enableClickjackSetup',
            typeInfo: 'Boolean'
          }, {
            name: 'enableContentSniffingProtection',
            typeInfo: 'Boolean'
          }, {
            name: 'enablePostForSessions',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSMSIdentity',
            typeInfo: 'Boolean'
          }, {
            name: 'enableUpgradeInsecureRequests',
            typeInfo: 'Boolean'
          }, {
            name: 'enableXssProtection',
            typeInfo: 'Boolean'
          }, {
            name: 'enforceIpRangesEveryRequest',
            typeInfo: 'Boolean'
          }, {
            name: 'forceLogoutOnSessionTimeout',
            typeInfo: 'Boolean'
          }, {
            name: 'forceRelogin',
            typeInfo: 'Boolean'
          }, {
            name: 'hstsOnForcecomSites',
            typeInfo: 'Boolean'
          }, {
            name: 'identityConfirmationOnEmailChange',
            typeInfo: 'Boolean'
          }, {
            name: 'identityConfirmationOnTwoFactorRegistrationEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'lockSessionsToDomain',
            typeInfo: 'Boolean'
          }, {
            name: 'lockSessionsToIp',
            typeInfo: 'Boolean'
          }, {
            name: 'logoutURL'
          }, {
            name: 'redirectionWarning',
            typeInfo: 'Boolean'
          }, {
            name: 'referrerPolicy',
            typeInfo: 'Boolean'
          }, {
            name: 'requireHttpOnly',
            typeInfo: 'Boolean'
          }, {
            name: 'requireHttps',
            typeInfo: 'Boolean'
          }, {
            name: 'securityCentralKillSession',
            typeInfo: 'Boolean'
          }, {
            name: 'sessionTimeout',
            typeInfo: '.SessionTimeout'
          }]
      }, {
        localName: 'CancelDeploy',
        typeName: null,
        propertyInfos: [{
            name: 'string',
            required: true,
            elementName: 'String'
          }]
      }, {
        localName: 'WebToCaseSettings',
        propertyInfos: [{
            name: 'caseOrigin'
          }, {
            name: 'defaultResponseTemplate'
          }, {
            name: 'enableWebToCase',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'BrandingSet',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'brandingSetProperty',
            minOccurs: 0,
            collection: true,
            typeInfo: '.BrandingSetProperty'
          }, {
            name: 'description'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'type'
          }]
      }, {
        localName: 'DebuggingInfo',
        typeName: null,
        propertyInfos: [{
            name: 'debugLog',
            required: true
          }]
      }, {
        localName: 'FlowRecordLookup',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'assignNullValuesIfNoRecordsFound',
            typeInfo: 'Boolean'
          }, {
            name: 'connector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'faultConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'filters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowRecordFilter'
          }, {
            name: 'object',
            required: true
          }, {
            name: 'outputAssignments',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowOutputFieldAssignment'
          }, {
            name: 'outputReference'
          }, {
            name: 'queriedFields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'sortField'
          }, {
            name: 'sortOrder',
            typeInfo: '.SortOrder'
          }]
      }, {
        localName: 'ListPlacement',
        propertyInfos: [{
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'location',
            required: true
          }, {
            name: 'units'
          }, {
            name: 'width',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'StrategyNode',
        propertyInfos: [{
            name: 'definition',
            required: true
          }, {
            name: 'description',
            required: true
          }, {
            name: 'name',
            required: true
          }, {
            name: 'parentNode',
            required: true
          }, {
            name: 'type',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'ExternalServiceRegistration',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'namedCredential'
          }, {
            name: 'schema'
          }, {
            name: 'schemaType'
          }, {
            name: 'schemaUrl'
          }, {
            name: 'status',
            required: true
          }]
      }, {
        localName: 'FlowCategory',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'flowCategoryItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowCategoryItems'
          }, {
            name: 'masterLabel',
            required: true
          }]
      }, {
        localName: 'Workflow',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'alerts',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowAlert'
          }, {
            name: 'fieldUpdates',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowFieldUpdate'
          }, {
            name: 'flowActions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowFlowAction'
          }, {
            name: 'knowledgePublishes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowKnowledgePublish'
          }, {
            name: 'outboundMessages',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowOutboundMessage'
          }, {
            name: 'rules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowRule'
          }, {
            name: 'send',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowSend'
          }, {
            name: 'tasks',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowTask'
          }]
      }, {
        localName: 'FlowWaitEventInputParameter',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'CustomTab',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'actionOverrides',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ActionOverride'
          }, {
            name: 'auraComponent'
          }, {
            name: 'customObject',
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'flexiPage'
          }, {
            name: 'frameHeight',
            typeInfo: 'Int'
          }, {
            name: 'hasSidebar',
            typeInfo: 'Boolean'
          }, {
            name: 'icon'
          }, {
            name: 'label'
          }, {
            name: 'mobileReady',
            typeInfo: 'Boolean'
          }, {
            name: 'motif'
          }, {
            name: 'page'
          }, {
            name: 'scontrol'
          }, {
            name: 'splashPageLink'
          }, {
            name: 'url'
          }, {
            name: 'urlEncodingKey',
            typeInfo: '.Encoding'
          }]
      }, {
        localName: 'ReportAggregateReference',
        propertyInfos: [{
            name: 'aggregate',
            required: true
          }]
      }, {
        localName: 'ReportLayoutSection',
        propertyInfos: [{
            name: 'columns',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportTypeColumn'
          }, {
            name: 'masterLabel',
            required: true
          }]
      }, {
        localName: 'ReportBucketFieldValue',
        propertyInfos: [{
            name: 'sourceValues',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportBucketFieldSourceValue'
          }, {
            name: 'value',
            required: true
          }]
      }, {
        localName: 'ActionLinkGroupTemplate',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'actionLinkTemplates',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ActionLinkTemplate'
          }, {
            name: 'category',
            required: true,
            typeInfo: '.PlatformActionGroupCategory'
          }, {
            name: 'executionsAllowed',
            required: true,
            typeInfo: '.ActionLinkExecutionsAllowed'
          }, {
            name: 'hoursUntilExpiration',
            typeInfo: 'Int'
          }, {
            name: 'isPublished',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'ConnectedAppCanvasConfig',
        propertyInfos: [{
            name: 'accessMethod',
            required: true,
            typeInfo: '.AccessMethod'
          }, {
            name: 'canvasUrl',
            required: true
          }, {
            name: 'lifecycleClass'
          }, {
            name: 'locations',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CanvasLocationOptions'
          }, {
            name: 'options',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CanvasOptions'
          }, {
            name: 'samlInitiationMethod',
            typeInfo: '.SamlInitiationMethod'
          }]
      }, {
        localName: 'AppMenuItem',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'type',
            required: true
          }]
      }, {
        localName: 'FlowElement',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'DeployOptions',
        propertyInfos: [{
            name: 'allowMissingFiles',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'autoUpdatePackage',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'checkOnly',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'ignoreWarnings',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'performRetrieve',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'purgeOnDelete',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'rollbackOnError',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'runTests',
            minOccurs: 0,
            collection: true
          }, {
            name: 'singlePackage',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'testLevel',
            required: true,
            typeInfo: '.TestLevel'
          }]
      }, {
        localName: 'ReportChart',
        propertyInfos: [{
            name: 'backgroundColor1'
          }, {
            name: 'backgroundColor2'
          }, {
            name: 'backgroundFadeDir',
            typeInfo: '.ChartBackgroundDirection'
          }, {
            name: 'chartSummaries',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ChartSummary'
          }, {
            name: 'chartType',
            required: true,
            typeInfo: '.ChartType'
          }, {
            name: 'enableHoverLabels',
            typeInfo: 'Boolean'
          }, {
            name: 'expandOthers',
            typeInfo: 'Boolean'
          }, {
            name: 'groupingColumn'
          }, {
            name: 'legendPosition',
            typeInfo: '.ChartLegendPosition'
          }, {
            name: 'location',
            typeInfo: '.ChartPosition'
          }, {
            name: 'secondaryGroupingColumn'
          }, {
            name: 'showAxisLabels',
            typeInfo: 'Boolean'
          }, {
            name: 'showPercentage',
            typeInfo: 'Boolean'
          }, {
            name: 'showTotal',
            typeInfo: 'Boolean'
          }, {
            name: 'showValues',
            typeInfo: 'Boolean'
          }, {
            name: 'size',
            typeInfo: '.ReportChartSize'
          }, {
            name: 'summaryAxisManualRangeEnd',
            typeInfo: 'Double'
          }, {
            name: 'summaryAxisManualRangeStart',
            typeInfo: 'Double'
          }, {
            name: 'summaryAxisRange',
            typeInfo: '.ChartRangeType'
          }, {
            name: 'textColor'
          }, {
            name: 'textSize',
            typeInfo: 'Int'
          }, {
            name: 'title'
          }, {
            name: 'titleColor'
          }, {
            name: 'titleSize',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'CancelDeployResult',
        propertyInfos: [{
            name: 'done',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'id',
            required: true
          }]
      }, {
        localName: 'DescribeValueTypeResult',
        propertyInfos: [{
            name: 'apiCreatable',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'apiDeletable',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'apiReadable',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'apiUpdatable',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'parentField',
            typeInfo: '.ValueTypeField'
          }, {
            name: 'valueTypeFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ValueTypeField'
          }]
      }, {
        localName: 'FlowDynamicChoiceSet',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'dataType',
            required: true,
            typeInfo: '.FlowDataType'
          }, {
            name: 'displayField',
            required: true
          }, {
            name: 'filters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowRecordFilter'
          }, {
            name: 'limit',
            typeInfo: 'Int'
          }, {
            name: 'object',
            required: true
          }, {
            name: 'outputAssignments',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowOutputFieldAssignment'
          }, {
            name: 'picklistField'
          }, {
            name: 'picklistObject'
          }, {
            name: 'sortField'
          }, {
            name: 'sortOrder',
            typeInfo: '.SortOrder'
          }, {
            name: 'valueField'
          }]
      }, {
        localName: 'ProfileApexClassAccess',
        propertyInfos: [{
            name: 'apexClass',
            required: true
          }, {
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'QuickActionSendEmailOptions',
        propertyInfos: [{
            name: 'defaultEmailTemplateName'
          }, {
            name: 'ignoreDefaultEmailTemplateSubject',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlowInputFieldAssignment',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'field',
            required: true
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'LiveChatDeployment',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'brandingImage'
          }, {
            name: 'connectionTimeoutDuration',
            typeInfo: 'Int'
          }, {
            name: 'connectionWarningDuration',
            typeInfo: 'Int'
          }, {
            name: 'displayQueuePosition',
            typeInfo: 'Boolean'
          }, {
            name: 'domainWhiteList',
            typeInfo: '.LiveChatDeploymentDomainWhitelist'
          }, {
            name: 'enablePrechatApi',
            typeInfo: 'Boolean'
          }, {
            name: 'enableTranscriptSave',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'mobileBrandingImage'
          }, {
            name: 'site'
          }, {
            name: 'windowTitle',
            required: true
          }]
      }, {
        localName: 'ChatterAnswersSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'emailFollowersOnBestAnswer',
            typeInfo: 'Boolean'
          }, {
            name: 'emailFollowersOnReply',
            typeInfo: 'Boolean'
          }, {
            name: 'emailOwnerOnPrivateReply',
            typeInfo: 'Boolean'
          }, {
            name: 'emailOwnerOnReply',
            typeInfo: 'Boolean'
          }, {
            name: 'enableAnswerViaEmail',
            typeInfo: 'Boolean'
          }, {
            name: 'enableChatterAnswers',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enableFacebookSSO',
            typeInfo: 'Boolean'
          }, {
            name: 'enableInlinePublisher',
            typeInfo: 'Boolean'
          }, {
            name: 'enableReputation',
            typeInfo: 'Boolean'
          }, {
            name: 'enableRichTextEditor',
            typeInfo: 'Boolean'
          }, {
            name: 'facebookAuthProvider'
          }, {
            name: 'showInPortals',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlowWaitEventOutputParameter',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'assignToReference',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'CspTrustedSite',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'endpointUrl',
            required: true
          }, {
            name: 'isActive',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'PathAssistantStep',
        propertyInfos: [{
            name: 'fieldNames',
            minOccurs: 0,
            collection: true
          }, {
            name: 'info'
          }, {
            name: 'picklistValueName',
            required: true
          }]
      }, {
        localName: 'ValidationRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'errorConditionFormula',
            required: true
          }, {
            name: 'errorDisplayField'
          }, {
            name: 'errorMessage',
            required: true
          }]
      }, {
        localName: 'PlatformCachePartition',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'isDefaultPartition',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'platformCachePartitionTypes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PlatformCachePartitionType'
          }]
      }, {
        localName: 'FolderShare',
        propertyInfos: [{
            name: 'accessLevel',
            required: true,
            typeInfo: '.FolderShareAccessLevel'
          }, {
            name: 'sharedTo',
            required: true
          }, {
            name: 'sharedToType',
            required: true,
            typeInfo: '.FolderSharedToType'
          }]
      }, {
        localName: 'OrganizationSettingsDetail',
        propertyInfos: [{
            name: 'settingName',
            required: true
          }, {
            name: 'settingValue',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'State',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'integrationValue',
            required: true
          }, {
            name: 'isoCode',
            required: true
          }, {
            name: 'label',
            required: true
          }, {
            name: 'standard',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'visible',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'NetworkMemberGroup',
        propertyInfos: [{
            name: 'permissionSet',
            minOccurs: 0,
            collection: true
          }, {
            name: 'profile',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'AppBrand',
        propertyInfos: [{
            name: 'footerColor'
          }, {
            name: 'headerColor'
          }, {
            name: 'logo'
          }, {
            name: 'logoVersion',
            typeInfo: 'Int'
          }, {
            name: 'shouldOverrideOrgTheme',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'RecordTypePicklistValue',
        propertyInfos: [{
            name: 'picklist',
            required: true
          }, {
            name: 'values',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PicklistValue'
          }]
      }, {
        localName: 'LookupFilterTranslation',
        propertyInfos: [{
            name: 'errorMessage',
            required: true
          }, {
            name: 'informationalMessage',
            required: true
          }]
      }, {
        localName: 'DelegateGroup',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'customObjects',
            minOccurs: 0,
            collection: true
          }, {
            name: 'groups',
            minOccurs: 0,
            collection: true
          }, {
            name: 'label',
            required: true
          }, {
            name: 'loginAccess',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'permissionSets',
            minOccurs: 0,
            collection: true
          }, {
            name: 'profiles',
            minOccurs: 0,
            collection: true
          }, {
            name: 'roles',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'FlowScreen',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'allowBack',
            typeInfo: 'Boolean'
          }, {
            name: 'allowFinish',
            typeInfo: 'Boolean'
          }, {
            name: 'allowPause',
            typeInfo: 'Boolean'
          }, {
            name: 'connector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'fields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowScreenField'
          }, {
            name: 'helpText'
          }, {
            name: 'pausedText'
          }, {
            name: 'rules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowScreenRule'
          }, {
            name: 'showFooter',
            typeInfo: 'Boolean'
          }, {
            name: 'showHeader',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'Certificate',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'caSigned',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'encryptedWithPlatformEncryption',
            mixed: false,
            allowDom: false,
            typeInfo: 'Boolean',
            type: 'elementRef'
          }, {
            name: 'expirationDate',
            mixed: false,
            allowDom: false,
            typeInfo: 'DateTime',
            type: 'elementRef'
          }, {
            name: 'keySize',
            typeInfo: 'Int'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'privateKeyExportable',
            mixed: false,
            allowDom: false,
            typeInfo: 'Boolean',
            type: 'elementRef'
          }]
      }, {
        localName: 'FileTypeDispositionAssignmentBean',
        propertyInfos: [{
            name: 'behavior',
            required: true,
            typeInfo: '.FileDownloadBehavior'
          }, {
            name: 'fileType',
            required: true,
            typeInfo: '.FileType'
          }, {
            name: 'securityRiskFileType',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'NameSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableMiddleName',
            typeInfo: 'Boolean'
          }, {
            name: 'enableNameSuffix',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FeedLayout',
        propertyInfos: [{
            name: 'autocollapsePublisher',
            typeInfo: 'Boolean'
          }, {
            name: 'compactFeed',
            typeInfo: 'Boolean'
          }, {
            name: 'feedFilterPosition',
            typeInfo: '.FeedLayoutFilterPosition'
          }, {
            name: 'feedFilters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FeedLayoutFilter'
          }, {
            name: 'fullWidthFeed',
            typeInfo: 'Boolean'
          }, {
            name: 'hideSidebar',
            typeInfo: 'Boolean'
          }, {
            name: 'highlightExternalFeedItems',
            typeInfo: 'Boolean'
          }, {
            name: 'leftComponents',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FeedLayoutComponent'
          }, {
            name: 'rightComponents',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FeedLayoutComponent'
          }, {
            name: 'useInlineFiltersInConsole',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ChatterMobileSettings',
        propertyInfos: [{
            name: 'enablePushNotifications',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ProfileTabVisibility',
        propertyInfos: [{
            name: 'tab',
            required: true
          }, {
            name: 'visibility',
            required: true,
            typeInfo: '.TabVisibility'
          }]
      }, {
        localName: 'SupervisorAgentConfigSkills',
        propertyInfos: [{
            name: 'skill',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'EmailToCaseRoutingAddress',
        propertyInfos: [{
            name: 'addressType',
            typeInfo: '.EmailToCaseRoutingAddressType'
          }, {
            name: 'authorizedSenders'
          }, {
            name: 'caseOrigin'
          }, {
            name: 'caseOwner'
          }, {
            name: 'caseOwnerType'
          }, {
            name: 'casePriority'
          }, {
            name: 'createTask',
            typeInfo: 'Boolean'
          }, {
            name: 'emailAddress'
          }, {
            name: 'emailServicesAddress'
          }, {
            name: 'isVerified',
            typeInfo: 'Boolean'
          }, {
            name: 'routingName'
          }, {
            name: 'saveEmailHeaders',
            typeInfo: 'Boolean'
          }, {
            name: 'taskStatus'
          }]
      }, {
        localName: 'AnalyticSnapshotMapping',
        propertyInfos: [{
            name: 'aggregateType',
            typeInfo: '.ReportSummaryType'
          }, {
            name: 'sourceField',
            required: true
          }, {
            name: 'sourceType',
            required: true,
            typeInfo: '.ReportJobSourceTypes'
          }, {
            name: 'targetField',
            required: true
          }]
      }, {
        localName: 'StandardValue',
        baseTypeInfo: '.CustomValue',
        propertyInfos: [{
            name: 'allowEmail',
            typeInfo: 'Boolean'
          }, {
            name: 'closed',
            typeInfo: 'Boolean'
          }, {
            name: 'converted',
            typeInfo: 'Boolean'
          }, {
            name: 'cssExposed',
            typeInfo: 'Boolean'
          }, {
            name: 'forecastCategory',
            typeInfo: '.ForecastCategories'
          }, {
            name: 'groupingString'
          }, {
            name: 'highPriority',
            typeInfo: 'Boolean'
          }, {
            name: 'probability',
            typeInfo: 'Int'
          }, {
            name: 'reverseRole'
          }, {
            name: 'reviewed',
            typeInfo: 'Boolean'
          }, {
            name: 'won',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ApprovalStepRejectBehavior',
        propertyInfos: [{
            name: 'type',
            required: true,
            typeInfo: '.StepRejectBehaviorType'
          }]
      }, {
        localName: 'WorkflowTask',
        baseTypeInfo: '.WorkflowAction',
        propertyInfos: [{
            name: 'assignedTo'
          }, {
            name: 'assignedToType',
            required: true,
            typeInfo: '.ActionTaskAssignedToTypes'
          }, {
            name: 'description'
          }, {
            name: 'dueDateOffset',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'notifyAssignee',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'offsetFromField'
          }, {
            name: 'priority',
            required: true
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }, {
            name: 'status',
            required: true
          }, {
            name: 'subject',
            required: true
          }]
      }, {
        localName: 'CustomExperience',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'allowInternalUserLogin',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'branding',
            typeInfo: '.CustomExperienceBranding'
          }, {
            name: 'changePasswordEmailTemplate',
            required: true
          }, {
            name: 'emailFooterLogo'
          }, {
            name: 'emailFooterText'
          }, {
            name: 'emailSenderAddress',
            required: true
          }, {
            name: 'emailSenderName',
            required: true
          }, {
            name: 'enableErrorPageOverridesForVisualforce',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'forgotPasswordEmailTemplate'
          }, {
            name: 'picassoSite'
          }, {
            name: 'sObjectType',
            required: true
          }, {
            name: 'sendWelcomeEmail',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'site',
            required: true
          }, {
            name: 'siteAsContainerEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'tabs',
            typeInfo: '.CustomExperienceTabSet'
          }, {
            name: 'urlPathPrefix'
          }, {
            name: 'welcomeEmailTemplate'
          }]
      }, {
        localName: 'LiveAgentConfig',
        propertyInfos: [{
            name: 'enableLiveChat',
            typeInfo: 'Boolean'
          }, {
            name: 'openNewAccountSubtab',
            typeInfo: 'Boolean'
          }, {
            name: 'openNewCaseSubtab',
            typeInfo: 'Boolean'
          }, {
            name: 'openNewContactSubtab',
            typeInfo: 'Boolean'
          }, {
            name: 'openNewLeadSubtab',
            typeInfo: 'Boolean'
          }, {
            name: 'openNewVFPageSubtab',
            typeInfo: 'Boolean'
          }, {
            name: 'pageNamesToOpen',
            minOccurs: 0,
            collection: true
          }, {
            name: 'showKnowledgeArticles',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlowConstant',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'dataType',
            required: true,
            typeInfo: '.FlowDataType'
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'ConnectedApp',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'attributes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ConnectedAppAttribute'
          }, {
            name: 'canvasConfig',
            typeInfo: '.ConnectedAppCanvasConfig'
          }, {
            name: 'contactEmail',
            required: true
          }, {
            name: 'contactPhone'
          }, {
            name: 'description'
          }, {
            name: 'iconUrl'
          }, {
            name: 'infoUrl'
          }, {
            name: 'ipRanges',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ConnectedAppIpRange'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'logoUrl'
          }, {
            name: 'mobileAppConfig',
            typeInfo: '.ConnectedAppMobileDetailConfig'
          }, {
            name: 'mobileStartUrl'
          }, {
            name: 'oauthConfig',
            typeInfo: '.ConnectedAppOauthConfig'
          }, {
            name: 'plugin'
          }, {
            name: 'samlConfig',
            typeInfo: '.ConnectedAppSamlConfig'
          }, {
            name: 'startUrl'
          }]
      }, {
        localName: 'Error',
        propertyInfos: [{
            name: 'extendedErrorDetails',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ExtendedErrorDetails'
          }, {
            name: 'fields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'message',
            required: true
          }, {
            name: 'statusCode',
            required: true,
            values: ['ALL_OR_NONE_OPERATION_ROLLED_BACK', 'ALREADY_IN_PROCESS', 'APEX_DATA_ACCESS_RESTRICTION', 'ASSIGNEE_TYPE_REQUIRED', 'AURA_COMPILE_ERROR', 'BAD_CUSTOM_ENTITY_PARENT_DOMAIN', 'BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED', 'CANNOT_CASCADE_PRODUCT_ACTIVE', 'CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD', 'CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD', 'CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE', 'CANNOT_DEACTIVATE_DIVISION', 'CANNOT_DELETE_GLOBAL_ACTION_LIST', 'CANNOT_DELETE_LAST_DATED_CONVERSION_RATE', 'CANNOT_DELETE_MANAGED_OBJECT', 'CANNOT_DISABLE_LAST_ADMIN', 'CANNOT_ENABLE_IP_RESTRICT_REQUESTS', 'CANNOT_EXECUTE_FLOW_TRIGGER', 'CANNOT_FREEZE_SELF', 'CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY', 'CANNOT_MODIFY_MANAGED_OBJECT', 'CANNOT_PASSWORD_LOCKOUT', 'CANNOT_POST_TO_ARCHIVED_GROUP', 'CANNOT_RENAME_APEX_REFERENCED_FIELD', 'CANNOT_RENAME_APEX_REFERENCED_OBJECT', 'CANNOT_RENAME_REFERENCED_FIELD', 'CANNOT_RENAME_REFERENCED_OBJECT', 'CANNOT_REPARENT_RECORD', 'CANNOT_UPDATE_CONVERTED_LEAD', 'CANT_DISABLE_CORP_CURRENCY', 'CANT_UNSET_CORP_CURRENCY', 'CHILD_SHARE_FAILS_PARENT', 'CIRCULAR_DEPENDENCY', 'CLEAN_SERVICE_ERROR', 'COLLISION_DETECTED', 'COMMERCIAL_CONTROL_ERROR', 'COMMUNITY_NOT_ACCESSIBLE', 'CONFLICTING_ENVIRONMENT_HUB_MEMBER', 'CONFLICTING_SSO_USER_MAPPING', 'CUSTOM_APEX_ERROR', 'CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED', 'CUSTOM_ENTITY_OR_FIELD_LIMIT', 'CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED', 'CUSTOM_INDEX_EXISTS', 'CUSTOM_LINK_LIMIT_EXCEEDED', 'CUSTOM_METADATA_LIMIT_EXCEEDED', 'CUSTOM_METADATA_REL_FIELD_MANAGEABILITY', 'CUSTOM_SETTINGS_LIMIT_EXCEEDED', 'CUSTOM_TAB_LIMIT_EXCEEDED', 'DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR', 'DATAASSESSMENT_CONFIG_SERVICE_ERROR', 'DATACLOUDADDRESS_NO_RECORDS_FOUND', 'DATACLOUDADDRESS_PROCESSING_ERROR', 'DATACLOUDADDRESS_SERVER_ERROR', 'DELETE_FAILED', 'DELETE_NOT_ALLOWED', 'DELETE_OPERATION_TOO_LARGE', 'DELETE_REQUIRED_ON_CASCADE', 'DEPENDENCY_EXISTS', 'DUPLICATES_DETECTED', 'DUPLICATE_CASE_SOLUTION', 'DUPLICATE_COMM_NICKNAME', 'DUPLICATE_CUSTOM_ENTITY_DEFINITION', 'DUPLICATE_CUSTOM_TAB_MOTIF', 'DUPLICATE_DEVELOPER_NAME', 'DUPLICATE_EXTERNAL_ID', 'DUPLICATE_MASTER_LABEL', 'DUPLICATE_SENDER_DISPLAY_NAME', 'DUPLICATE_USERNAME', 'DUPLICATE_VALUE', 'EMAIL_ADDRESS_BOUNCED', 'EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR', 'EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR', 'EMAIL_OPTED_OUT', 'EMAIL_TEMPLATE_FORMULA_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR', 'EMAIL_TEMPLATE_PROCESSING_ERROR', 'EMPTY_SCONTROL_FILE_NAME', 'ENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR', 'ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE', 'ENTITY_IS_ARCHIVED', 'ENTITY_IS_DELETED', 'ENTITY_IS_LOCKED', 'ENTITY_SAVE_ERROR', 'ENTITY_SAVE_VALIDATION_ERROR', 'ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT', 'ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB', 'ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB', 'ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN', 'ERROR_IN_MAILER', 'EXCHANGE_WEB_SERVICES_URL_INVALID', 'FAILED_ACTIVATION', 'FIELD_CUSTOM_VALIDATION_EXCEPTION', 'FIELD_FILTER_VALIDATION_EXCEPTION', 'FIELD_INTEGRITY_EXCEPTION', 'FIELD_KEYWORD_LIST_MATCH_LIMIT', 'FIELD_MAPPING_ERROR', 'FIELD_MODERATION_RULE_BLOCK', 'FIELD_NOT_UPDATABLE', 'FILE_EXTENSION_NOT_ALLOWED', 'FILE_SIZE_LIMIT_EXCEEDED', 'FILTERED_LOOKUP_LIMIT_EXCEEDED', 'FIND_DUPLICATES_ERROR', 'FLOW_EXCEPTION', 'FUNCTIONALITY_NOT_ENABLED', 'HAS_PUBLIC_REFERENCES', 'HTML_FILE_UPLOAD_NOT_ALLOWED', 'IMAGE_TOO_LARGE', 'INACTIVE_OWNER_OR_USER', 'INACTIVE_RULE_ERROR', 'INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE', 'INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY', 'INSUFFICIENT_ACCESS_OR_READONLY', 'INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA', 'INSUFFICIENT_CREDITS', 'INTERNAL_ERROR', 'INVALID_ACCESS_LEVEL', 'INVALID_ACCESS_TOKEN', 'INVALID_API_INPUT', 'INVALID_ARGUMENT_TYPE', 'INVALID_ASSIGNEE_TYPE', 'INVALID_ASSIGNMENT_RULE', 'INVALID_BATCH_OPERATION', 'INVALID_CONTENT_TYPE', 'INVALID_CREDIT_CARD_INFO', 'INVALID_CROSS_REFERENCE_KEY', 'INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD', 'INVALID_CURRENCY_CONV_RATE', 'INVALID_CURRENCY_CORP_RATE', 'INVALID_CURRENCY_ISO', 'INVALID_DATASET_REFERENCE_INPUT', 'INVALID_DATA_CATEGORY_GROUP_REFERENCE', 'INVALID_DATA_URI', 'INVALID_EMAIL_ADDRESS', 'INVALID_EMPTY_KEY_OWNER', 'INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR', 'INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR', 'INVALID_ENTITY_FOR_UPSERT', 'INVALID_ENVIRONMENT_HUB_MEMBER', 'INVALID_EVENT_DELIVERY', 'INVALID_EVENT_INPUT', 'INVALID_EVENT_SUBSCRIPTION', 'INVALID_EXTENSION_ID', 'INVALID_FIELD', 'INVALID_FIELD_FOR_INSERT_UPDATE', 'INVALID_FIELD_WHEN_USING_TEMPLATE', 'INVALID_FILTER_ACTION', 'INVALID_GOOGLE_DOCS_URL', 'INVALID_ID_FIELD', 'INVALID_INET_ADDRESS', 'INVALID_INPUT', 'INVALID_KEY_FIELD_INPUT', 'INVALID_LINEITEM_CLONE_STATE', 'INVALID_MARKUP', 'INVALID_MASTER_OR_TRANSLATED_SOLUTION', 'INVALID_MESSAGE_ID_REFERENCE', 'INVALID_NAMESPACE_PREFIX', 'INVALID_OAUTH_URL', 'INVALID_OPERATION', 'INVALID_OPERATOR', 'INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST', 'INVALID_OWNER', 'INVALID_PACKAGE_LICENSE', 'INVALID_PACKAGE_VERSION', 'INVALID_PARTNER_NETWORK_STATUS', 'INVALID_PAYLOAD_VERSION', 'INVALID_PERSON_ACCOUNT_OPERATION', 'INVALID_PROVIDER_TYPE', 'INVALID_QUERY_LOCATOR', 'INVALID_READ_ONLY_USER_DML', 'INVALID_REFRESH_TOKEN', 'INVALID_RUNTIME_VALUE', 'INVALID_SAVE_AS_ACTIVITY_FLAG', 'INVALID_SESSION_ID', 'INVALID_SETUP_OWNER', 'INVALID_SIGNUP_COUNTRY', 'INVALID_SIGNUP_OPTION', 'INVALID_SITE_DELETE_EXCEPTION', 'INVALID_SITE_FILE_IMPORTED_EXCEPTION', 'INVALID_SITE_FILE_TYPE_EXCEPTION', 'INVALID_STATUS', 'INVALID_SUBDOMAIN', 'INVALID_TEXT_REPRESENTATION', 'INVALID_TYPE', 'INVALID_TYPE_FOR_OPERATION', 'INVALID_TYPE_ON_FIELD_IN_RECORD', 'INVALID_USERID', 'IP_RANGE_LIMIT_EXCEEDED', 'ITEM_NOT_FOUND', 'JIGSAW_IMPORT_LIMIT_EXCEEDED', 'LICENSE_LIMIT_EXCEEDED', 'LIGHT_PORTAL_USER_EXCEPTION', 'LIMIT_EXCEEDED', 'MALFORMED_ID', 'MANAGER_NOT_DEFINED', 'MASSMAIL_RETRY_LIMIT_EXCEEDED', 'MASS_MAIL_LIMIT_EXCEEDED', 'MATCH_DEFINITION_ERROR', 'MATCH_OPERATION_ERROR', 'MATCH_OPERATION_INVALID_ENGINE_ERROR', 'MATCH_OPERATION_INVALID_RULE_ERROR', 'MATCH_OPERATION_MISSING_ENGINE_ERROR', 'MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR', 'MATCH_OPERATION_MISSING_OPTIONS_ERROR', 'MATCH_OPERATION_MISSING_RULE_ERROR', 'MATCH_OPERATION_UNKNOWN_RULE_ERROR', 'MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR', 'MATCH_PRECONDITION_FAILED', 'MATCH_RUNTIME_ERROR', 'MATCH_SERVICE_ERROR', 'MATCH_SERVICE_TIMED_OUT', 'MATCH_SERVICE_UNAVAILABLE_ERROR', 'MAXIMUM_CCEMAILS_EXCEEDED', 'MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED', 'MAXIMUM_HIERARCHY_CHILDREN_REACHED', 'MAXIMUM_HIERARCHY_LEVELS_REACHED', 'MAXIMUM_HIERARCHY_TREE_SIZE_REACHED', 'MAXIMUM_SIZE_OF_ATTACHMENT', 'MAXIMUM_SIZE_OF_DOCUMENT', 'MAX_ACTIONS_PER_RULE_EXCEEDED', 'MAX_ACTIVE_RULES_EXCEEDED', 'MAX_APPROVAL_STEPS_EXCEEDED', 'MAX_DEPTH_IN_FLOW_EXECUTION', 'MAX_FORMULAS_PER_RULE_EXCEEDED', 'MAX_LIMIT_EXCEEDED', 'MAX_RULES_EXCEEDED', 'MAX_RULE_ENTRIES_EXCEEDED', 'MAX_TASK_DESCRIPTION_EXCEEEDED', 'MAX_TM_RULES_EXCEEDED', 'MAX_TM_RULE_ITEMS_EXCEEDED', 'MAX_TRIGGERS_EXCEEDED', 'MERGE_FAILED', 'METADATA_FIELD_UPDATE_ERROR', 'MISSING_ARGUMENT', 'MISSING_RECORD', 'MIXED_DML_OPERATION', 'NONUNIQUE_SHIPPING_ADDRESS', 'NO_ACCESS_TOKEN', 'NO_ACCESS_TOKEN_FROM_REFRESH', 'NO_APPLICABLE_PROCESS', 'NO_ATTACHMENT_PERMISSION', 'NO_AUTH_PROVIDER', 'NO_INACTIVE_DIVISION_MEMBERS', 'NO_MASS_MAIL_PERMISSION', 'NO_PARTNER_PERMISSION', 'NO_REFRESH_TOKEN', 'NO_SUCH_USER_EXISTS', 'NO_TOKEN_ENDPOINT', 'NUMBER_OUTSIDE_VALID_RANGE', 'NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED', 'OPTED_OUT_OF_MASS_MAIL', 'OP_WITH_INVALID_USER_TYPE_EXCEPTION', 'ORCHESTRATION_INVALID', 'PACKAGE_LICENSE_REQUIRED', 'PACKAGING_API_INSTALL_FAILED', 'PACKAGING_API_UNINSTALL_FAILED', 'PALI_INVALID_ACTION_ID', 'PALI_INVALID_ACTION_NAME', 'PALI_INVALID_ACTION_TYPE', 'PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID', 'PAL_INVALID_ENTITY_ID', 'PAL_INVALID_FLEXIPAGE_ID', 'PAL_INVALID_LAYOUT_ID', 'PAL_INVALID_PARAMETERS', 'PAYLOAD_SIZE_EXCEEDED', 'PA_API_EXCEPTION', 'PA_AXIS_FAULT', 'PA_INVALID_ID_EXCEPTION', 'PA_NO_ACCESS_EXCEPTION', 'PA_NO_DATA_FOUND_EXCEPTION', 'PA_URI_SYNTAX_EXCEPTION', 'PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION', 'PORTAL_NO_ACCESS', 'PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT', 'PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION', 'PRIVATE_CONTACT_ON_ASSET', 'PROCESSING_HALTED', 'QA_INVALID_CREATE_FEED_ITEM', 'QA_INVALID_SUCCESS_MESSAGE', 'QUERY_TIMEOUT', 'QUICK_ACTION_LIST_ITEM_NOT_ALLOWED', 'QUICK_ACTION_LIST_NOT_ALLOWED', 'RECORD_IN_USE_BY_WORKFLOW', 'REL_FIELD_BAD_ACCESSIBILITY', 'REPUTATION_MINIMUM_NUMBER_NOT_REACHED', 'REQUEST_RUNNING_TOO_LONG', 'REQUIRED_FEATURE_MISSING', 'REQUIRED_FIELD_MISSING', 'RETRIEVE_EXCHANGE_ATTACHMENT_FAILED', 'RETRIEVE_EXCHANGE_EMAIL_FAILED', 'RETRIEVE_EXCHANGE_EVENT_FAILED', 'RETRIEVE_GOOGLE_EMAIL_FAILED', 'RETRIEVE_GOOGLE_EVENT_FAILED', 'RETRIEVE_USER_CONFIG_ERROR', 'SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR', 'SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR', 'SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR', 'SELF_REFERENCE_FROM_FLOW', 'SELF_REFERENCE_FROM_TRIGGER', 'SHARE_NEEDED_FOR_CHILD_OWNER', 'SINGLE_EMAIL_LIMIT_EXCEEDED', 'SOCIAL_ACCOUNT_NOT_FOUND', 'SOCIAL_ACTION_INVALID', 'SOCIAL_PERSONA_NOT_FOUND', 'SOCIAL_POST_INVALID', 'SOCIAL_POST_NOT_FOUND', 'STANDARD_PRICE_NOT_DEFINED', 'STORAGE_LIMIT_EXCEEDED', 'STRING_TOO_LONG', 'SUBDOMAIN_IN_USE', 'TABSET_LIMIT_EXCEEDED', 'TEMPLATE_NOT_ACTIVE', 'TEMPLATE_NOT_FOUND', 'TERMS_OF_SERVICE_UNREAD', 'TERRITORY_REALIGN_IN_PROGRESS', 'TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET', 'TOO_MANY_APEX_REQUESTS', 'TOO_MANY_ENUM_VALUE', 'TOO_MANY_POSSIBLE_USERS_EXIST', 'TRANSFER_REQUIRES_READ', 'UNABLE_TO_LOCK_ROW', 'UNAVAILABLE_RECORDTYPE_EXCEPTION', 'UNAVAILABLE_REF', 'UNDELETE_FAILED', 'UNKNOWN_EXCEPTION', 'UNKNOWN_TOKEN_ERROR', 'UNSAFE_HTML_CONTENT', 'UNSPECIFIED_EMAIL_ADDRESS', 'UNSUPPORTED_APEX_TRIGGER_OPERATON', 'UNSUPPORTED_SOCIAL_PROVIDER', 'UNVERIFIED_SENDER_ADDRESS', 'UPDATE_GOOGLE_EMAIL_LABEL_FAILED', 'USER_OWNS_PORTAL_ACCOUNT_EXCEPTION', 'USER_WITH_APEX_SHARES_EXCEPTION', 'VF_COMPILE_ERROR', 'WEBLINK_SIZE_LIMIT_EXCEEDED', 'WEBLINK_URL_INVALID', 'WRONG_CONTROLLER_TYPE', 'XCLEAN_UNEXPECTED_ERROR']
          }]
      }, {
        localName: 'ValueSet',
        propertyInfos: [{
            name: 'controllingField'
          }, {
            name: 'restricted',
            typeInfo: 'Boolean'
          }, {
            name: 'valueSetDefinition',
            typeInfo: '.ValueSetValuesDefinition'
          }, {
            name: 'valueSetName'
          }, {
            name: 'valueSettings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ValueSettings'
          }]
      }, {
        localName: 'ObjectNameCaseValue',
        propertyInfos: [{
            name: 'article',
            typeInfo: '.Article'
          }, {
            name: 'caseType',
            typeInfo: '.CaseType'
          }, {
            name: 'plural',
            typeInfo: 'Boolean'
          }, {
            name: 'possessive',
            typeInfo: '.Possessive'
          }, {
            name: 'value',
            required: true
          }]
      }, {
        localName: 'Community',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            typeInfo: 'Boolean'
          }, {
            name: 'chatterAnswersFacebookSsoUrl'
          }, {
            name: 'communityFeedPage'
          }, {
            name: 'dataCategoryName'
          }, {
            name: 'description'
          }, {
            name: 'emailFooterDocument'
          }, {
            name: 'emailHeaderDocument'
          }, {
            name: 'emailNotificationUrl'
          }, {
            name: 'enableChatterAnswers',
            typeInfo: 'Boolean'
          }, {
            name: 'enablePrivateQuestions',
            typeInfo: 'Boolean'
          }, {
            name: 'expertsGroup'
          }, {
            name: 'portal'
          }, {
            name: 'reputationLevels',
            typeInfo: '.ReputationLevels'
          }, {
            name: 'showInPortal',
            typeInfo: 'Boolean'
          }, {
            name: 'site'
          }]
      }, {
        localName: 'WorkflowTaskTranslation',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'subject'
          }]
      }, {
        localName: 'QueueMembers',
        propertyInfos: [{
            name: 'publicGroups',
            typeInfo: '.PublicGroups'
          }, {
            name: 'roleAndSubordinates',
            typeInfo: '.RoleAndSubordinates'
          }, {
            name: 'roleAndSubordinatesInternal',
            typeInfo: '.RoleAndSubordinatesInternal'
          }, {
            name: 'roles',
            typeInfo: '.Roles'
          }, {
            name: 'users',
            typeInfo: '.Users'
          }]
      }, {
        localName: 'ValueTypeField',
        propertyInfos: [{
            name: 'fields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ValueTypeField'
          }, {
            name: 'foreignKeyDomain',
            minOccurs: 0,
            collection: true
          }, {
            name: 'isForeignKey',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isNameField',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'minOccurs',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'picklistValues',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PicklistEntry'
          }, {
            name: 'soapType',
            required: true
          }, {
            name: 'valueRequired',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FilterItem',
        propertyInfos: [{
            name: 'field',
            required: true
          }, {
            name: 'operation',
            required: true,
            typeInfo: '.FilterOperation'
          }, {
            name: 'value'
          }, {
            name: 'valueField'
          }]
      }, {
        localName: 'MilestoneType',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'recurrenceType',
            typeInfo: '.MilestoneTypeRecurrenceType'
          }]
      }, {
        localName: 'RetrieveResult',
        propertyInfos: [{
            name: 'done',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'errorMessage'
          }, {
            name: 'errorStatusCode',
            values: ['ALL_OR_NONE_OPERATION_ROLLED_BACK', 'ALREADY_IN_PROCESS', 'APEX_DATA_ACCESS_RESTRICTION', 'ASSIGNEE_TYPE_REQUIRED', 'AURA_COMPILE_ERROR', 'BAD_CUSTOM_ENTITY_PARENT_DOMAIN', 'BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED', 'CANNOT_CASCADE_PRODUCT_ACTIVE', 'CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD', 'CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD', 'CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE', 'CANNOT_DEACTIVATE_DIVISION', 'CANNOT_DELETE_GLOBAL_ACTION_LIST', 'CANNOT_DELETE_LAST_DATED_CONVERSION_RATE', 'CANNOT_DELETE_MANAGED_OBJECT', 'CANNOT_DISABLE_LAST_ADMIN', 'CANNOT_ENABLE_IP_RESTRICT_REQUESTS', 'CANNOT_EXECUTE_FLOW_TRIGGER', 'CANNOT_FREEZE_SELF', 'CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY', 'CANNOT_MODIFY_MANAGED_OBJECT', 'CANNOT_PASSWORD_LOCKOUT', 'CANNOT_POST_TO_ARCHIVED_GROUP', 'CANNOT_RENAME_APEX_REFERENCED_FIELD', 'CANNOT_RENAME_APEX_REFERENCED_OBJECT', 'CANNOT_RENAME_REFERENCED_FIELD', 'CANNOT_RENAME_REFERENCED_OBJECT', 'CANNOT_REPARENT_RECORD', 'CANNOT_UPDATE_CONVERTED_LEAD', 'CANT_DISABLE_CORP_CURRENCY', 'CANT_UNSET_CORP_CURRENCY', 'CHILD_SHARE_FAILS_PARENT', 'CIRCULAR_DEPENDENCY', 'CLEAN_SERVICE_ERROR', 'COLLISION_DETECTED', 'COMMERCIAL_CONTROL_ERROR', 'COMMUNITY_NOT_ACCESSIBLE', 'CONFLICTING_ENVIRONMENT_HUB_MEMBER', 'CONFLICTING_SSO_USER_MAPPING', 'CUSTOM_APEX_ERROR', 'CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED', 'CUSTOM_ENTITY_OR_FIELD_LIMIT', 'CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED', 'CUSTOM_INDEX_EXISTS', 'CUSTOM_LINK_LIMIT_EXCEEDED', 'CUSTOM_METADATA_LIMIT_EXCEEDED', 'CUSTOM_METADATA_REL_FIELD_MANAGEABILITY', 'CUSTOM_SETTINGS_LIMIT_EXCEEDED', 'CUSTOM_TAB_LIMIT_EXCEEDED', 'DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR', 'DATAASSESSMENT_CONFIG_SERVICE_ERROR', 'DATACLOUDADDRESS_NO_RECORDS_FOUND', 'DATACLOUDADDRESS_PROCESSING_ERROR', 'DATACLOUDADDRESS_SERVER_ERROR', 'DELETE_FAILED', 'DELETE_NOT_ALLOWED', 'DELETE_OPERATION_TOO_LARGE', 'DELETE_REQUIRED_ON_CASCADE', 'DEPENDENCY_EXISTS', 'DUPLICATES_DETECTED', 'DUPLICATE_CASE_SOLUTION', 'DUPLICATE_COMM_NICKNAME', 'DUPLICATE_CUSTOM_ENTITY_DEFINITION', 'DUPLICATE_CUSTOM_TAB_MOTIF', 'DUPLICATE_DEVELOPER_NAME', 'DUPLICATE_EXTERNAL_ID', 'DUPLICATE_MASTER_LABEL', 'DUPLICATE_SENDER_DISPLAY_NAME', 'DUPLICATE_USERNAME', 'DUPLICATE_VALUE', 'EMAIL_ADDRESS_BOUNCED', 'EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR', 'EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR', 'EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR', 'EMAIL_OPTED_OUT', 'EMAIL_TEMPLATE_FORMULA_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_ERROR', 'EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR', 'EMAIL_TEMPLATE_PROCESSING_ERROR', 'EMPTY_SCONTROL_FILE_NAME', 'ENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR', 'ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE', 'ENTITY_IS_ARCHIVED', 'ENTITY_IS_DELETED', 'ENTITY_IS_LOCKED', 'ENTITY_SAVE_ERROR', 'ENTITY_SAVE_VALIDATION_ERROR', 'ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT', 'ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB', 'ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB', 'ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN', 'ERROR_IN_MAILER', 'EXCHANGE_WEB_SERVICES_URL_INVALID', 'FAILED_ACTIVATION', 'FIELD_CUSTOM_VALIDATION_EXCEPTION', 'FIELD_FILTER_VALIDATION_EXCEPTION', 'FIELD_INTEGRITY_EXCEPTION', 'FIELD_KEYWORD_LIST_MATCH_LIMIT', 'FIELD_MAPPING_ERROR', 'FIELD_MODERATION_RULE_BLOCK', 'FIELD_NOT_UPDATABLE', 'FILE_EXTENSION_NOT_ALLOWED', 'FILE_SIZE_LIMIT_EXCEEDED', 'FILTERED_LOOKUP_LIMIT_EXCEEDED', 'FIND_DUPLICATES_ERROR', 'FLOW_EXCEPTION', 'FUNCTIONALITY_NOT_ENABLED', 'HAS_PUBLIC_REFERENCES', 'HTML_FILE_UPLOAD_NOT_ALLOWED', 'IMAGE_TOO_LARGE', 'INACTIVE_OWNER_OR_USER', 'INACTIVE_RULE_ERROR', 'INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE', 'INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY', 'INSUFFICIENT_ACCESS_OR_READONLY', 'INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA', 'INSUFFICIENT_CREDITS', 'INTERNAL_ERROR', 'INVALID_ACCESS_LEVEL', 'INVALID_ACCESS_TOKEN', 'INVALID_API_INPUT', 'INVALID_ARGUMENT_TYPE', 'INVALID_ASSIGNEE_TYPE', 'INVALID_ASSIGNMENT_RULE', 'INVALID_BATCH_OPERATION', 'INVALID_CONTENT_TYPE', 'INVALID_CREDIT_CARD_INFO', 'INVALID_CROSS_REFERENCE_KEY', 'INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD', 'INVALID_CURRENCY_CONV_RATE', 'INVALID_CURRENCY_CORP_RATE', 'INVALID_CURRENCY_ISO', 'INVALID_DATASET_REFERENCE_INPUT', 'INVALID_DATA_CATEGORY_GROUP_REFERENCE', 'INVALID_DATA_URI', 'INVALID_EMAIL_ADDRESS', 'INVALID_EMPTY_KEY_OWNER', 'INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR', 'INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR', 'INVALID_ENTITY_FOR_UPSERT', 'INVALID_ENVIRONMENT_HUB_MEMBER', 'INVALID_EVENT_DELIVERY', 'INVALID_EVENT_INPUT', 'INVALID_EVENT_SUBSCRIPTION', 'INVALID_EXTENSION_ID', 'INVALID_FIELD', 'INVALID_FIELD_FOR_INSERT_UPDATE', 'INVALID_FIELD_WHEN_USING_TEMPLATE', 'INVALID_FILTER_ACTION', 'INVALID_GOOGLE_DOCS_URL', 'INVALID_ID_FIELD', 'INVALID_INET_ADDRESS', 'INVALID_INPUT', 'INVALID_KEY_FIELD_INPUT', 'INVALID_LINEITEM_CLONE_STATE', 'INVALID_MARKUP', 'INVALID_MASTER_OR_TRANSLATED_SOLUTION', 'INVALID_MESSAGE_ID_REFERENCE', 'INVALID_NAMESPACE_PREFIX', 'INVALID_OAUTH_URL', 'INVALID_OPERATION', 'INVALID_OPERATOR', 'INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST', 'INVALID_OWNER', 'INVALID_PACKAGE_LICENSE', 'INVALID_PACKAGE_VERSION', 'INVALID_PARTNER_NETWORK_STATUS', 'INVALID_PAYLOAD_VERSION', 'INVALID_PERSON_ACCOUNT_OPERATION', 'INVALID_PROVIDER_TYPE', 'INVALID_QUERY_LOCATOR', 'INVALID_READ_ONLY_USER_DML', 'INVALID_REFRESH_TOKEN', 'INVALID_RUNTIME_VALUE', 'INVALID_SAVE_AS_ACTIVITY_FLAG', 'INVALID_SESSION_ID', 'INVALID_SETUP_OWNER', 'INVALID_SIGNUP_COUNTRY', 'INVALID_SIGNUP_OPTION', 'INVALID_SITE_DELETE_EXCEPTION', 'INVALID_SITE_FILE_IMPORTED_EXCEPTION', 'INVALID_SITE_FILE_TYPE_EXCEPTION', 'INVALID_STATUS', 'INVALID_SUBDOMAIN', 'INVALID_TEXT_REPRESENTATION', 'INVALID_TYPE', 'INVALID_TYPE_FOR_OPERATION', 'INVALID_TYPE_ON_FIELD_IN_RECORD', 'INVALID_USERID', 'IP_RANGE_LIMIT_EXCEEDED', 'ITEM_NOT_FOUND', 'JIGSAW_IMPORT_LIMIT_EXCEEDED', 'LICENSE_LIMIT_EXCEEDED', 'LIGHT_PORTAL_USER_EXCEPTION', 'LIMIT_EXCEEDED', 'MALFORMED_ID', 'MANAGER_NOT_DEFINED', 'MASSMAIL_RETRY_LIMIT_EXCEEDED', 'MASS_MAIL_LIMIT_EXCEEDED', 'MATCH_DEFINITION_ERROR', 'MATCH_OPERATION_ERROR', 'MATCH_OPERATION_INVALID_ENGINE_ERROR', 'MATCH_OPERATION_INVALID_RULE_ERROR', 'MATCH_OPERATION_MISSING_ENGINE_ERROR', 'MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR', 'MATCH_OPERATION_MISSING_OPTIONS_ERROR', 'MATCH_OPERATION_MISSING_RULE_ERROR', 'MATCH_OPERATION_UNKNOWN_RULE_ERROR', 'MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR', 'MATCH_PRECONDITION_FAILED', 'MATCH_RUNTIME_ERROR', 'MATCH_SERVICE_ERROR', 'MATCH_SERVICE_TIMED_OUT', 'MATCH_SERVICE_UNAVAILABLE_ERROR', 'MAXIMUM_CCEMAILS_EXCEEDED', 'MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED', 'MAXIMUM_HIERARCHY_CHILDREN_REACHED', 'MAXIMUM_HIERARCHY_LEVELS_REACHED', 'MAXIMUM_HIERARCHY_TREE_SIZE_REACHED', 'MAXIMUM_SIZE_OF_ATTACHMENT', 'MAXIMUM_SIZE_OF_DOCUMENT', 'MAX_ACTIONS_PER_RULE_EXCEEDED', 'MAX_ACTIVE_RULES_EXCEEDED', 'MAX_APPROVAL_STEPS_EXCEEDED', 'MAX_DEPTH_IN_FLOW_EXECUTION', 'MAX_FORMULAS_PER_RULE_EXCEEDED', 'MAX_LIMIT_EXCEEDED', 'MAX_RULES_EXCEEDED', 'MAX_RULE_ENTRIES_EXCEEDED', 'MAX_TASK_DESCRIPTION_EXCEEEDED', 'MAX_TM_RULES_EXCEEDED', 'MAX_TM_RULE_ITEMS_EXCEEDED', 'MAX_TRIGGERS_EXCEEDED', 'MERGE_FAILED', 'METADATA_FIELD_UPDATE_ERROR', 'MISSING_ARGUMENT', 'MISSING_RECORD', 'MIXED_DML_OPERATION', 'NONUNIQUE_SHIPPING_ADDRESS', 'NO_ACCESS_TOKEN', 'NO_ACCESS_TOKEN_FROM_REFRESH', 'NO_APPLICABLE_PROCESS', 'NO_ATTACHMENT_PERMISSION', 'NO_AUTH_PROVIDER', 'NO_INACTIVE_DIVISION_MEMBERS', 'NO_MASS_MAIL_PERMISSION', 'NO_PARTNER_PERMISSION', 'NO_REFRESH_TOKEN', 'NO_SUCH_USER_EXISTS', 'NO_TOKEN_ENDPOINT', 'NUMBER_OUTSIDE_VALID_RANGE', 'NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED', 'OPTED_OUT_OF_MASS_MAIL', 'OP_WITH_INVALID_USER_TYPE_EXCEPTION', 'ORCHESTRATION_INVALID', 'PACKAGE_LICENSE_REQUIRED', 'PACKAGING_API_INSTALL_FAILED', 'PACKAGING_API_UNINSTALL_FAILED', 'PALI_INVALID_ACTION_ID', 'PALI_INVALID_ACTION_NAME', 'PALI_INVALID_ACTION_TYPE', 'PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID', 'PAL_INVALID_ENTITY_ID', 'PAL_INVALID_FLEXIPAGE_ID', 'PAL_INVALID_LAYOUT_ID', 'PAL_INVALID_PARAMETERS', 'PAYLOAD_SIZE_EXCEEDED', 'PA_API_EXCEPTION', 'PA_AXIS_FAULT', 'PA_INVALID_ID_EXCEPTION', 'PA_NO_ACCESS_EXCEPTION', 'PA_NO_DATA_FOUND_EXCEPTION', 'PA_URI_SYNTAX_EXCEPTION', 'PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION', 'PORTAL_NO_ACCESS', 'PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT', 'PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION', 'PRIVATE_CONTACT_ON_ASSET', 'PROCESSING_HALTED', 'QA_INVALID_CREATE_FEED_ITEM', 'QA_INVALID_SUCCESS_MESSAGE', 'QUERY_TIMEOUT', 'QUICK_ACTION_LIST_ITEM_NOT_ALLOWED', 'QUICK_ACTION_LIST_NOT_ALLOWED', 'RECORD_IN_USE_BY_WORKFLOW', 'REL_FIELD_BAD_ACCESSIBILITY', 'REPUTATION_MINIMUM_NUMBER_NOT_REACHED', 'REQUEST_RUNNING_TOO_LONG', 'REQUIRED_FEATURE_MISSING', 'REQUIRED_FIELD_MISSING', 'RETRIEVE_EXCHANGE_ATTACHMENT_FAILED', 'RETRIEVE_EXCHANGE_EMAIL_FAILED', 'RETRIEVE_EXCHANGE_EVENT_FAILED', 'RETRIEVE_GOOGLE_EMAIL_FAILED', 'RETRIEVE_GOOGLE_EVENT_FAILED', 'RETRIEVE_USER_CONFIG_ERROR', 'SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR', 'SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR', 'SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR', 'SELF_REFERENCE_FROM_FLOW', 'SELF_REFERENCE_FROM_TRIGGER', 'SHARE_NEEDED_FOR_CHILD_OWNER', 'SINGLE_EMAIL_LIMIT_EXCEEDED', 'SOCIAL_ACCOUNT_NOT_FOUND', 'SOCIAL_ACTION_INVALID', 'SOCIAL_PERSONA_NOT_FOUND', 'SOCIAL_POST_INVALID', 'SOCIAL_POST_NOT_FOUND', 'STANDARD_PRICE_NOT_DEFINED', 'STORAGE_LIMIT_EXCEEDED', 'STRING_TOO_LONG', 'SUBDOMAIN_IN_USE', 'TABSET_LIMIT_EXCEEDED', 'TEMPLATE_NOT_ACTIVE', 'TEMPLATE_NOT_FOUND', 'TERMS_OF_SERVICE_UNREAD', 'TERRITORY_REALIGN_IN_PROGRESS', 'TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET', 'TOO_MANY_APEX_REQUESTS', 'TOO_MANY_ENUM_VALUE', 'TOO_MANY_POSSIBLE_USERS_EXIST', 'TRANSFER_REQUIRES_READ', 'UNABLE_TO_LOCK_ROW', 'UNAVAILABLE_RECORDTYPE_EXCEPTION', 'UNAVAILABLE_REF', 'UNDELETE_FAILED', 'UNKNOWN_EXCEPTION', 'UNKNOWN_TOKEN_ERROR', 'UNSAFE_HTML_CONTENT', 'UNSPECIFIED_EMAIL_ADDRESS', 'UNSUPPORTED_APEX_TRIGGER_OPERATON', 'UNSUPPORTED_SOCIAL_PROVIDER', 'UNVERIFIED_SENDER_ADDRESS', 'UPDATE_GOOGLE_EMAIL_LABEL_FAILED', 'USER_OWNS_PORTAL_ACCOUNT_EXCEPTION', 'USER_WITH_APEX_SHARES_EXCEPTION', 'VF_COMPILE_ERROR', 'WEBLINK_SIZE_LIMIT_EXCEEDED', 'WEBLINK_URL_INVALID', 'WRONG_CONTROLLER_TYPE', 'XCLEAN_UNEXPECTED_ERROR']
          }, {
            name: 'fileProperties',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FileProperties'
          }, {
            name: 'id',
            required: true
          }, {
            name: 'messages',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RetrieveMessage'
          }, {
            name: 'status',
            required: true,
            typeInfo: '.RetrieveStatus'
          }, {
            name: 'success',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'zipFile',
            required: true,
            typeInfo: 'Base64Binary'
          }]
      }, {
        localName: 'CodeLocation',
        propertyInfos: [{
            name: 'column',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'line',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'numExecutions',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'time',
            required: true,
            typeInfo: 'Double'
          }]
      }, {
        localName: 'DashboardComponent',
        propertyInfos: [{
            name: 'autoselectColumnsFromReport',
            typeInfo: 'Boolean'
          }, {
            name: 'chartAxisRange',
            typeInfo: '.ChartRangeType'
          }, {
            name: 'chartAxisRangeMax',
            typeInfo: 'Double'
          }, {
            name: 'chartAxisRangeMin',
            typeInfo: 'Double'
          }, {
            name: 'chartSummary',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ChartSummary'
          }, {
            name: 'componentChartTheme',
            typeInfo: '.ChartTheme'
          }, {
            name: 'componentType',
            required: true,
            typeInfo: '.DashboardComponentType'
          }, {
            name: 'dashboardFilterColumns',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DashboardFilterColumn'
          }, {
            name: 'dashboardTableColumn',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DashboardTableColumn'
          }, {
            name: 'displayUnits',
            typeInfo: '.ChartUnits'
          }, {
            name: 'drillDownUrl'
          }, {
            name: 'drillEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'drillToDetailEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'enableHover',
            typeInfo: 'Boolean'
          }, {
            name: 'expandOthers',
            typeInfo: 'Boolean'
          }, {
            name: 'flexComponentProperties',
            typeInfo: '.DashboardFlexTableComponentProperties'
          }, {
            name: 'footer'
          }, {
            name: 'gaugeMax',
            typeInfo: 'Double'
          }, {
            name: 'gaugeMin',
            typeInfo: 'Double'
          }, {
            name: 'groupingColumn',
            minOccurs: 0,
            collection: true
          }, {
            name: 'header'
          }, {
            name: 'indicatorBreakpoint1',
            typeInfo: 'Double'
          }, {
            name: 'indicatorBreakpoint2',
            typeInfo: 'Double'
          }, {
            name: 'indicatorHighColor'
          }, {
            name: 'indicatorLowColor'
          }, {
            name: 'indicatorMiddleColor'
          }, {
            name: 'legendPosition',
            typeInfo: '.ChartLegendPosition'
          }, {
            name: 'maxValuesDisplayed',
            typeInfo: 'Int'
          }, {
            name: 'metricLabel'
          }, {
            name: 'page'
          }, {
            name: 'pageHeightInPixels',
            typeInfo: 'Int'
          }, {
            name: 'report'
          }, {
            name: 'scontrol'
          }, {
            name: 'scontrolHeightInPixels',
            typeInfo: 'Int'
          }, {
            name: 'showPercentage',
            typeInfo: 'Boolean'
          }, {
            name: 'showPicturesOnCharts',
            typeInfo: 'Boolean'
          }, {
            name: 'showPicturesOnTables',
            typeInfo: 'Boolean'
          }, {
            name: 'showRange',
            typeInfo: 'Boolean'
          }, {
            name: 'showTotal',
            typeInfo: 'Boolean'
          }, {
            name: 'showValues',
            typeInfo: 'Boolean'
          }, {
            name: 'sortBy',
            typeInfo: '.DashboardComponentFilter'
          }, {
            name: 'title'
          }, {
            name: 'useReportChart',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlowChoiceUserInput',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'isRequired',
            typeInfo: 'Boolean'
          }, {
            name: 'promptText'
          }, {
            name: 'validationRule',
            typeInfo: '.FlowInputValidationRule'
          }]
      }, {
        localName: 'DashboardComponentSortInfo',
        propertyInfos: [{
            name: 'sortColumn'
          }, {
            name: 'sortOrder'
          }]
      }, {
        localName: 'CodeCoverageResult',
        propertyInfos: [{
            name: 'dmlInfo',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CodeLocation'
          }, {
            name: 'id',
            required: true
          }, {
            name: 'locationsNotCovered',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CodeLocation'
          }, {
            name: 'methodInfo',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CodeLocation'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'namespace',
            required: true
          }, {
            name: 'numLocations',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'numLocationsNotCovered',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'soqlInfo',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CodeLocation'
          }, {
            name: 'soslInfo',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CodeLocation'
          }, {
            name: 'type',
            required: true
          }]
      }, {
        localName: 'UpdateMetadataResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SaveResult'
          }]
      }, {
        localName: 'AppProfileActionOverride',
        baseTypeInfo: '.ProfileActionOverride',
        propertyInfos: [{
            name: 'profile',
            required: true
          }]
      }, {
        localName: 'DashboardFolder',
        baseTypeInfo: '.Folder'
      }, {
        localName: 'ReadMetadata',
        typeName: null,
        propertyInfos: [{
            name: 'type',
            required: true
          }, {
            name: 'fullNames',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'KnowledgeWorkOrderLineItemField',
        propertyInfos: [{
            name: 'name'
          }]
      }, {
        localName: 'PushNotification',
        propertyInfos: [{
            name: 'fieldNames',
            minOccurs: 0,
            collection: true
          }, {
            name: 'objectName',
            required: true
          }]
      }, {
        localName: 'FlowChoiceUserInputTranslation',
        propertyInfos: [{
            name: 'promptText'
          }, {
            name: 'validationRule',
            typeInfo: '.FlowInputValidationRuleTranslation'
          }]
      }, {
        localName: 'Scontrol',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'contentSource',
            required: true,
            typeInfo: '.SControlContentSource'
          }, {
            name: 'description'
          }, {
            name: 'encodingKey',
            required: true,
            typeInfo: '.Encoding'
          }, {
            name: 'fileContent',
            typeInfo: 'Base64Binary'
          }, {
            name: 'fileName'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'supportsCaching',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ExternalDataSource',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'authProvider'
          }, {
            name: 'certificate'
          }, {
            name: 'customConfiguration'
          }, {
            name: 'endpoint'
          }, {
            name: 'isWritable',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'oauthRefreshToken'
          }, {
            name: 'oauthScope'
          }, {
            name: 'oauthToken'
          }, {
            name: 'password'
          }, {
            name: 'principalType',
            required: true,
            typeInfo: '.ExternalPrincipalType'
          }, {
            name: 'protocol',
            required: true,
            typeInfo: '.AuthenticationProtocol'
          }, {
            name: 'repository'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.ExternalDataSourceType'
          }, {
            name: 'username'
          }, {
            name: 'version'
          }]
      }, {
        localName: 'CommunityThemeDefinition',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'customThemeLayoutType',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CommunityCustomThemeLayoutType'
          }, {
            name: 'description'
          }, {
            name: 'enableExtendedCleanUpOnDelete',
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'themeSetting',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CommunityThemeSetting'
          }]
      }, {
        localName: 'ApexClass',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'apiVersion',
            required: true,
            typeInfo: 'Double'
          }, {
            name: 'packageVersions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PackageVersion'
          }, {
            name: 'status',
            required: true,
            typeInfo: '.ApexCodeUnitStatus'
          }]
      }, {
        localName: 'CustomLabel',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'categories'
          }, {
            name: 'language',
            required: true
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }, {
            name: 'shortDescription',
            required: true
          }, {
            name: 'value',
            required: true
          }]
      }, {
        localName: 'UiFormulaCriterion',
        propertyInfos: [{
            name: 'leftValue',
            required: true
          }, {
            name: 'operator',
            required: true
          }, {
            name: 'rightValue'
          }]
      }, {
        localName: 'GlobalValueSetTranslation',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'valueTranslation',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ValueTranslation'
          }]
      }, {
        localName: 'RecommendationAudienceDetail',
        propertyInfos: [{
            name: 'audienceCriteriaType',
            typeInfo: '.AudienceCriteriaType'
          }, {
            name: 'audienceCriteriaValue'
          }, {
            name: 'setupName'
          }]
      }, {
        localName: 'Country',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'integrationValue',
            required: true
          }, {
            name: 'isoCode',
            required: true
          }, {
            name: 'label',
            required: true
          }, {
            name: 'orgDefault',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'standard',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'states',
            minOccurs: 0,
            collection: true,
            typeInfo: '.State'
          }, {
            name: 'visible',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'HomePageLayout',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'narrowComponents',
            minOccurs: 0,
            collection: true
          }, {
            name: 'wideComponents',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'NetworkPageOverride',
        propertyInfos: [{
            name: 'changePasswordPageOverrideSetting',
            typeInfo: '.NetworkPageOverrideSetting'
          }, {
            name: 'forgotPasswordPageOverrideSetting',
            typeInfo: '.NetworkPageOverrideSetting'
          }, {
            name: 'homePageOverrideSetting',
            typeInfo: '.NetworkPageOverrideSetting'
          }, {
            name: 'loginPageOverrideSetting',
            typeInfo: '.NetworkPageOverrideSetting'
          }, {
            name: 'selfRegProfilePageOverrideSetting',
            typeInfo: '.NetworkPageOverrideSetting'
          }]
      }, {
        localName: 'DashboardFilterColumn',
        propertyInfos: [{
            name: 'column',
            required: true
          }]
      }, {
        localName: 'EscalationRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            typeInfo: 'Boolean'
          }, {
            name: 'ruleEntry',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RuleEntry'
          }]
      }, {
        localName: 'FlowSubflowOutputAssignment',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'assignToReference',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'FlowScreenRuleAction',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'attribute',
            required: true
          }, {
            name: 'fieldReference',
            required: true
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'WaveDashboard',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'application',
            required: true
          }, {
            name: 'description'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'templateAssetSourceName'
          }]
      }, {
        localName: 'WaveApplication',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'assetIcon'
          }, {
            name: 'description'
          }, {
            name: 'folder',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'shares',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FolderShare'
          }, {
            name: 'templateOrigin'
          }, {
            name: 'templateVersion'
          }]
      }, {
        localName: 'EclairGeoData',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'maps',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EclairMap'
          }, {
            name: 'masterLabel',
            required: true
          }]
      }, {
        localName: 'InsightType',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'defaultTrendType',
            required: true,
            typeInfo: '.InsightTrendType'
          }, {
            name: 'description',
            required: true
          }, {
            name: 'isProtected',
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'parentType',
            required: true,
            typeInfo: '.InsightParentType'
          }, {
            name: 'title',
            required: true
          }]
      }, {
        localName: 'ContentAssetVersions',
        propertyInfos: [{
            name: 'version',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ContentAssetVersion'
          }]
      }, {
        localName: 'StandardValueSet',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'groupingStringEnum'
          }, {
            name: 'sorted',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'standardValue',
            minOccurs: 0,
            collection: true,
            typeInfo: '.StandardValue'
          }]
      }, {
        localName: 'CaseSubjectParticle',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'index',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'textField'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.CaseSubjectParticleType'
          }]
      }, {
        localName: 'FlowSubflowInputAssignment',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'WaveTemplateBundle',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'assetIcon'
          }, {
            name: 'assetVersion',
            typeInfo: 'Double'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'templateBadgeIcon'
          }, {
            name: 'templateDetailIcon'
          }, {
            name: 'templateType',
            required: true
          }]
      }, {
        localName: 'LiveChatButton',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'animation',
            typeInfo: '.LiveChatButtonPresentation'
          }, {
            name: 'autoGreeting'
          }, {
            name: 'chasitorIdleTimeout',
            typeInfo: 'Int'
          }, {
            name: 'chasitorIdleTimeoutWarning',
            typeInfo: 'Int'
          }, {
            name: 'chatPage'
          }, {
            name: 'customAgentName'
          }, {
            name: 'deployments',
            typeInfo: '.LiveChatButtonDeployments'
          }, {
            name: 'enableQueue',
            typeInfo: 'Boolean'
          }, {
            name: 'inviteEndPosition',
            typeInfo: '.LiveChatButtonInviteEndPosition'
          }, {
            name: 'inviteImage'
          }, {
            name: 'inviteStartPosition',
            typeInfo: '.LiveChatButtonInviteStartPosition'
          }, {
            name: 'isActive',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'numberOfReroutingAttempts',
            typeInfo: 'Int'
          }, {
            name: 'offlineImage'
          }, {
            name: 'onlineImage'
          }, {
            name: 'optionsCustomRoutingIsEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'optionsHasChasitorIdleTimeout',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'optionsHasInviteAfterAccept',
            typeInfo: 'Boolean'
          }, {
            name: 'optionsHasInviteAfterReject',
            typeInfo: 'Boolean'
          }, {
            name: 'optionsHasRerouteDeclinedRequest',
            typeInfo: 'Boolean'
          }, {
            name: 'optionsIsAutoAccept',
            typeInfo: 'Boolean'
          }, {
            name: 'optionsIsInviteAutoRemove',
            typeInfo: 'Boolean'
          }, {
            name: 'overallQueueLength',
            typeInfo: 'Int'
          }, {
            name: 'perAgentQueueLength',
            typeInfo: 'Int'
          }, {
            name: 'postChatPage'
          }, {
            name: 'postChatUrl'
          }, {
            name: 'preChatFormPage'
          }, {
            name: 'preChatFormUrl'
          }, {
            name: 'pushTimeOut',
            typeInfo: 'Int'
          }, {
            name: 'routingType',
            required: true,
            typeInfo: '.LiveChatButtonRoutingType'
          }, {
            name: 'site'
          }, {
            name: 'skills',
            typeInfo: '.LiveChatButtonSkills'
          }, {
            name: 'timeToRemoveInvite',
            typeInfo: 'Int'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.LiveChatButtonType'
          }, {
            name: 'windowLanguage',
            typeInfo: '.Language'
          }]
      }, {
        localName: 'CommunityTemplateBundleInfo',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'image'
          }, {
            name: 'order',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'title',
            required: true
          }, {
            name: 'type',
            required: true,
            typeInfo: '.CommunityTemplateBundleInfoType'
          }]
      }, {
        localName: 'DeployRecentValidationResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true
          }]
      }, {
        localName: 'PicklistValueTranslation',
        propertyInfos: [{
            name: 'masterLabel',
            required: true
          }, {
            name: 'translation'
          }]
      }, {
        localName: 'ReportTypeColumn',
        propertyInfos: [{
            name: 'checkedByDefault',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'displayNameOverride'
          }, {
            name: 'field',
            required: true
          }, {
            name: 'table',
            required: true
          }]
      }, {
        localName: 'DescribeMetadataResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true,
            typeInfo: '.DescribeMetadataResult'
          }]
      }, {
        localName: 'DuplicateRuleFilterItem',
        baseTypeInfo: '.FilterItem',
        propertyInfos: [{
            name: 'sortOrder',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'table',
            required: true
          }]
      }, {
        localName: 'Letterhead',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'available',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'backgroundColor',
            required: true
          }, {
            name: 'bodyColor',
            required: true
          }, {
            name: 'bottomLine',
            required: true,
            typeInfo: '.LetterheadLine'
          }, {
            name: 'description'
          }, {
            name: 'footer',
            required: true,
            typeInfo: '.LetterheadHeaderFooter'
          }, {
            name: 'header',
            required: true,
            typeInfo: '.LetterheadHeaderFooter'
          }, {
            name: 'middleLine',
            required: true,
            typeInfo: '.LetterheadLine'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'topLine',
            required: true,
            typeInfo: '.LetterheadLine'
          }]
      }, {
        localName: 'RuleEntry',
        propertyInfos: [{
            name: 'assignedTo'
          }, {
            name: 'assignedToType',
            typeInfo: '.AssignToLookupValueType'
          }, {
            name: 'booleanFilter'
          }, {
            name: 'businessHours'
          }, {
            name: 'businessHoursSource',
            typeInfo: '.BusinessHoursSourceType'
          }, {
            name: 'criteriaItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FilterItem'
          }, {
            name: 'disableEscalationWhenModified',
            typeInfo: 'Boolean'
          }, {
            name: 'escalationAction',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EscalationAction'
          }, {
            name: 'escalationStartTime',
            typeInfo: '.EscalationStartTimeType'
          }, {
            name: 'formula'
          }, {
            name: 'notifyCcRecipients',
            typeInfo: 'Boolean'
          }, {
            name: 'overrideExistingTeams',
            typeInfo: 'Boolean'
          }, {
            name: 'replyToEmail'
          }, {
            name: 'senderEmail'
          }, {
            name: 'senderName'
          }, {
            name: 'team',
            minOccurs: 0,
            collection: true
          }, {
            name: 'template'
          }]
      }, {
        localName: 'ReportBucketField',
        propertyInfos: [{
            name: 'bucketType',
            required: true,
            typeInfo: '.ReportBucketFieldType'
          }, {
            name: 'developerName',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'nullTreatment',
            typeInfo: '.ReportFormulaNullTreatment'
          }, {
            name: 'otherBucketLabel'
          }, {
            name: 'sourceColumnName',
            required: true
          }, {
            name: 'useOther',
            typeInfo: 'Boolean'
          }, {
            name: 'values',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportBucketFieldValue'
          }]
      }, {
        localName: 'WorkflowSend',
        baseTypeInfo: '.WorkflowAction',
        propertyInfos: [{
            name: 'action',
            required: true,
            typeInfo: '.SendAction'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'language'
          }, {
            name: '_protected',
            required: true,
            elementName: 'protected',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'EmailServicesFunction',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'apexClass',
            required: true
          }, {
            name: 'attachmentOption',
            required: true,
            typeInfo: '.EmailServicesAttOptions'
          }, {
            name: 'authenticationFailureAction',
            required: true,
            typeInfo: '.EmailServicesErrorAction'
          }, {
            name: 'authorizationFailureAction',
            required: true,
            typeInfo: '.EmailServicesErrorAction'
          }, {
            name: 'authorizedSenders'
          }, {
            name: 'emailServicesAddresses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EmailServicesAddress'
          }, {
            name: 'errorRoutingAddress'
          }, {
            name: 'functionInactiveAction',
            required: true,
            typeInfo: '.EmailServicesErrorAction'
          }, {
            name: 'functionName',
            required: true
          }, {
            name: 'isActive',
            typeInfo: 'Boolean'
          }, {
            name: 'isAuthenticationRequired',
            typeInfo: 'Boolean'
          }, {
            name: 'isErrorRoutingEnabled',
            typeInfo: 'Boolean'
          }, {
            name: 'isTextAttachmentsAsBinary',
            typeInfo: 'Boolean'
          }, {
            name: 'isTlsRequired',
            typeInfo: 'Boolean'
          }, {
            name: 'overLimitAction',
            required: true,
            typeInfo: '.EmailServicesErrorAction'
          }]
      }, {
        localName: 'KnowledgeLanguage',
        propertyInfos: [{
            name: 'active',
            typeInfo: 'Boolean'
          }, {
            name: 'defaultAssignee'
          }, {
            name: 'defaultAssigneeType',
            typeInfo: '.KnowledgeLanguageLookupValueType'
          }, {
            name: 'defaultReviewer'
          }, {
            name: 'defaultReviewerType',
            typeInfo: '.KnowledgeLanguageLookupValueType'
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'AnalyticSnapshot',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'groupColumn'
          }, {
            name: 'mappings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.AnalyticSnapshotMapping'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'runningUser'
          }, {
            name: 'sourceReport',
            required: true
          }, {
            name: 'targetObject',
            required: true
          }]
      }, {
        localName: 'SiteWebAddress',
        propertyInfos: [{
            name: 'certificate'
          }, {
            name: 'domainName',
            required: true
          }, {
            name: 'primary',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'DuplicateRuleFilter',
        propertyInfos: [{
            name: 'booleanFilter',
            required: true
          }, {
            name: 'duplicateRuleFilterItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DuplicateRuleFilterItem'
          }]
      }, {
        localName: 'Territory2',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'accountAccessLevel'
          }, {
            name: 'caseAccessLevel'
          }, {
            name: 'contactAccessLevel'
          }, {
            name: 'customFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldValue'
          }, {
            name: 'description'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'opportunityAccessLevel'
          }, {
            name: 'parentTerritory'
          }, {
            name: 'ruleAssociations',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Territory2RuleAssociation'
          }, {
            name: 'territory2Type',
            required: true
          }]
      }, {
        localName: 'DeleteMetadataResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DeleteResult'
          }]
      }, {
        localName: 'FieldSetTranslation',
        propertyInfos: [{
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'Holiday',
        propertyInfos: [{
            name: 'activityDate',
            typeInfo: 'Date'
          }, {
            name: 'businessHours',
            minOccurs: 0,
            collection: true
          }, {
            name: 'description'
          }, {
            name: 'endTime',
            typeInfo: 'Time'
          }, {
            name: 'isRecurring',
            typeInfo: 'Boolean'
          }, {
            name: 'name'
          }, {
            name: 'recurrenceDayOfMonth',
            typeInfo: 'Int'
          }, {
            name: 'recurrenceDayOfWeek',
            minOccurs: 0,
            collection: true
          }, {
            name: 'recurrenceDayOfWeekMask',
            typeInfo: 'Int'
          }, {
            name: 'recurrenceEndDate',
            typeInfo: 'Date'
          }, {
            name: 'recurrenceInstance'
          }, {
            name: 'recurrenceInterval',
            typeInfo: 'Int'
          }, {
            name: 'recurrenceMonthOfYear'
          }, {
            name: 'recurrenceStartDate',
            typeInfo: 'Date'
          }, {
            name: 'recurrenceType'
          }, {
            name: 'startTime',
            typeInfo: 'Time'
          }]
      }, {
        localName: 'ProfileLoginIpRange',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'endAddress',
            required: true
          }, {
            name: 'startAddress',
            required: true
          }]
      }, {
        localName: 'LightningBoltFeatures',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'order',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'title',
            required: true
          }]
      }, {
        localName: 'FlowScreenField',
        baseTypeInfo: '.FlowElement',
        propertyInfos: [{
            name: 'choiceReferences',
            minOccurs: 0,
            collection: true
          }, {
            name: 'dataType',
            typeInfo: '.FlowDataType'
          }, {
            name: 'defaultSelectedChoiceReference'
          }, {
            name: 'defaultValue',
            typeInfo: '.FlowElementReferenceOrValue'
          }, {
            name: 'extensionName'
          }, {
            name: 'fieldText'
          }, {
            name: 'fieldType',
            required: true,
            typeInfo: '.FlowScreenFieldType'
          }, {
            name: 'helpText'
          }, {
            name: 'inputParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowScreenFieldInputParameter'
          }, {
            name: 'isRequired',
            typeInfo: 'Boolean'
          }, {
            name: 'isVisible',
            typeInfo: 'Boolean'
          }, {
            name: 'outputParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowScreenFieldOutputParameter'
          }, {
            name: 'scale',
            typeInfo: 'Int'
          }, {
            name: 'validationRule',
            typeInfo: '.FlowInputValidationRule'
          }]
      }, {
        localName: 'AccountSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableAccountOwnerReport',
            typeInfo: 'Boolean'
          }, {
            name: 'enableAccountTeams',
            typeInfo: 'Boolean'
          }, {
            name: 'showViewHierarchyLink',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'KnowledgeSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'answers',
            typeInfo: '.KnowledgeAnswerSettings'
          }, {
            name: 'cases',
            typeInfo: '.KnowledgeCaseSettings'
          }, {
            name: 'defaultLanguage'
          }, {
            name: 'enableChatterQuestionKBDeflection',
            typeInfo: 'Boolean'
          }, {
            name: 'enableCreateEditOnArticlesTab',
            typeInfo: 'Boolean'
          }, {
            name: 'enableExternalMediaContent',
            typeInfo: 'Boolean'
          }, {
            name: 'enableKnowledge',
            typeInfo: 'Boolean'
          }, {
            name: 'enableLightningKnowledge',
            typeInfo: 'Boolean'
          }, {
            name: 'languages',
            typeInfo: '.KnowledgeLanguageSettings'
          }, {
            name: 'showArticleSummariesCustomerPortal',
            typeInfo: 'Boolean'
          }, {
            name: 'showArticleSummariesInternalApp',
            typeInfo: 'Boolean'
          }, {
            name: 'showArticleSummariesPartnerPortal',
            typeInfo: 'Boolean'
          }, {
            name: 'showValidationStatusField',
            typeInfo: 'Boolean'
          }, {
            name: 'suggestedArticles',
            typeInfo: '.KnowledgeSuggestedArticlesSettings'
          }]
      }, {
        localName: 'RunTestFailure',
        propertyInfos: [{
            name: 'id',
            required: true
          }, {
            name: 'message',
            required: true
          }, {
            name: 'methodName',
            required: true
          }, {
            name: 'name',
            required: true
          }, {
            name: 'namespace',
            required: true
          }, {
            name: 'packageName',
            required: true
          }, {
            name: 'seeAllData',
            typeInfo: 'Boolean'
          }, {
            name: 'stackTrace',
            required: true
          }, {
            name: 'time',
            required: true,
            typeInfo: 'Double'
          }, {
            name: 'type',
            required: true
          }]
      }, {
        localName: 'KnowledgeLanguageSettings',
        propertyInfos: [{
            name: 'language',
            minOccurs: 0,
            collection: true,
            typeInfo: '.KnowledgeLanguage'
          }]
      }, {
        localName: 'ProductSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableCascadeActivateToRelatedPrices',
            typeInfo: 'Boolean'
          }, {
            name: 'enableQuantitySchedule',
            typeInfo: 'Boolean'
          }, {
            name: 'enableRevenueSchedule',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'LiveChatSensitiveDataRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'actionType',
            required: true,
            typeInfo: '.SensitiveDataActionType'
          }, {
            name: 'description'
          }, {
            name: 'enforceOn',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'isEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'pattern',
            required: true
          }, {
            name: 'replacement'
          }]
      }, {
        localName: 'NamedCredential',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'allowMergeFieldsInBody',
            typeInfo: 'Boolean'
          }, {
            name: 'allowMergeFieldsInHeader',
            typeInfo: 'Boolean'
          }, {
            name: 'authProvider'
          }, {
            name: 'certificate'
          }, {
            name: 'endpoint'
          }, {
            name: 'generateAuthorizationHeader',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'oauthRefreshToken'
          }, {
            name: 'oauthScope'
          }, {
            name: 'oauthToken'
          }, {
            name: 'password'
          }, {
            name: 'principalType',
            required: true,
            typeInfo: '.ExternalPrincipalType'
          }, {
            name: 'protocol',
            required: true,
            typeInfo: '.AuthenticationProtocol'
          }, {
            name: 'username'
          }]
      }, {
        localName: 'FieldMappingRow',
        propertyInfos: [{
            name: 'sObjectType',
            required: true,
            elementName: 'SObjectType'
          }, {
            name: 'fieldMappingFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldMappingField'
          }, {
            name: 'fieldName',
            required: true
          }, {
            name: 'mappingOperation',
            required: true,
            typeInfo: '.MappingOperation'
          }]
      }, {
        localName: 'RunTestSuccess',
        propertyInfos: [{
            name: 'id',
            required: true
          }, {
            name: 'methodName',
            required: true
          }, {
            name: 'name',
            required: true
          }, {
            name: 'namespace',
            required: true
          }, {
            name: 'seeAllData',
            typeInfo: 'Boolean'
          }, {
            name: 'time',
            required: true,
            typeInfo: 'Double'
          }]
      }, {
        localName: 'SharingReason',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'label',
            required: true
          }]
      }, {
        localName: 'ActionLinkTemplate',
        propertyInfos: [{
            name: 'actionUrl',
            required: true
          }, {
            name: 'headers'
          }, {
            name: 'isConfirmationRequired',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isGroupDefault',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'label'
          }, {
            name: 'labelKey',
            required: true
          }, {
            name: 'linkType',
            required: true,
            typeInfo: '.ActionLinkType'
          }, {
            name: 'method',
            required: true,
            typeInfo: '.ActionLinkHttpMethod'
          }, {
            name: 'position',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'requestBody'
          }, {
            name: 'userAlias'
          }, {
            name: 'userVisibility',
            required: true,
            typeInfo: '.ActionLinkUserVisibility'
          }]
      }, {
        localName: 'KnowledgeAnswerSettings',
        propertyInfos: [{
            name: 'assignTo'
          }, {
            name: 'defaultArticleType'
          }, {
            name: 'enableArticleCreation',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'CustomApplication',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'actionOverrides',
            minOccurs: 0,
            collection: true,
            typeInfo: '.AppActionOverride'
          }, {
            name: 'brand',
            typeInfo: '.AppBrand'
          }, {
            name: 'consoleConfig',
            typeInfo: '.ServiceCloudConsoleConfig'
          }, {
            name: 'defaultLandingTab'
          }, {
            name: 'description'
          }, {
            name: 'formFactors',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FormFactor'
          }, {
            name: 'isServiceCloudConsole',
            typeInfo: 'Boolean'
          }, {
            name: 'label'
          }, {
            name: 'logo'
          }, {
            name: 'navType',
            typeInfo: '.NavType'
          }, {
            name: 'preferences',
            typeInfo: '.AppPreferences'
          }, {
            name: 'profileActionOverrides',
            minOccurs: 0,
            collection: true,
            typeInfo: '.AppProfileActionOverride'
          }, {
            name: 'setupExperience'
          }, {
            name: 'subscriberTabs',
            minOccurs: 0,
            collection: true
          }, {
            name: 'tabs',
            minOccurs: 0,
            collection: true
          }, {
            name: 'uiType',
            typeInfo: '.UiType'
          }, {
            name: 'utilityBar'
          }, {
            name: 'workspaceConfig',
            typeInfo: '.AppWorkspaceConfig'
          }]
      }, {
        localName: 'ListMetadataQuery',
        propertyInfos: [{
            name: 'folder'
          }, {
            name: 'type',
            required: true
          }]
      }, {
        localName: 'EntitlementProcess',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'sObjectType',
            elementName: 'SObjectType'
          }, {
            name: 'active',
            typeInfo: 'Boolean'
          }, {
            name: 'businessHours'
          }, {
            name: 'description'
          }, {
            name: 'entryStartDateField'
          }, {
            name: 'exitCriteriaBooleanFilter'
          }, {
            name: 'exitCriteriaFilterItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FilterItem'
          }, {
            name: 'exitCriteriaFormula'
          }, {
            name: 'isRecordTypeApplied',
            typeInfo: 'Boolean'
          }, {
            name: 'isVersionDefault',
            typeInfo: 'Boolean'
          }, {
            name: 'milestones',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EntitlementProcessMilestoneItem'
          }, {
            name: 'name'
          }, {
            name: 'recordType'
          }, {
            name: 'versionMaster'
          }, {
            name: 'versionNotes'
          }, {
            name: 'versionNumber',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'ManagedTopics',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'managedTopic',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ManagedTopic'
          }]
      }, {
        localName: 'AddressSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'countriesAndStates',
            required: true,
            typeInfo: '.CountriesAndStates'
          }]
      }, {
        localName: 'ChatterAnswersReputationLevel',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'PlatformCachePartitionType',
        propertyInfos: [{
            name: 'allocatedCapacity',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'allocatedPurchasedCapacity',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'allocatedTrialCapacity',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'cacheType',
            required: true,
            typeInfo: '.PlatformCacheType'
          }]
      }, {
        localName: 'EntitlementTemplate',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'businessHours'
          }, {
            name: 'casesPerEntitlement',
            typeInfo: 'Int'
          }, {
            name: 'entitlementProcess'
          }, {
            name: 'isPerIncident',
            typeInfo: 'Boolean'
          }, {
            name: 'term',
            typeInfo: 'Int'
          }, {
            name: 'type'
          }]
      }, {
        localName: 'CaseSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'caseAssignNotificationTemplate'
          }, {
            name: 'caseCloseNotificationTemplate'
          }, {
            name: 'caseCommentNotificationTemplate'
          }, {
            name: 'caseCreateNotificationTemplate'
          }, {
            name: 'caseFeedItemSettings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FeedItemSettings'
          }, {
            name: 'closeCaseThroughStatusChange',
            typeInfo: 'Boolean'
          }, {
            name: 'defaultCaseOwner'
          }, {
            name: 'defaultCaseOwnerType'
          }, {
            name: 'defaultCaseUser'
          }, {
            name: 'emailActionDefaultsHandlerClass'
          }, {
            name: 'emailToCase',
            typeInfo: '.EmailToCaseSettings'
          }, {
            name: 'enableCaseFeed',
            typeInfo: 'Boolean'
          }, {
            name: 'enableDraftEmails',
            typeInfo: 'Boolean'
          }, {
            name: 'enableEarlyEscalationRuleTriggers',
            typeInfo: 'Boolean'
          }, {
            name: 'enableEmailActionDefaultsHandler',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSuggestedArticlesApplication',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSuggestedArticlesCustomerPortal',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSuggestedArticlesPartnerPortal',
            typeInfo: 'Boolean'
          }, {
            name: 'enableSuggestedSolutions',
            typeInfo: 'Boolean'
          }, {
            name: 'keepRecordTypeOnAssignmentRule',
            typeInfo: 'Boolean'
          }, {
            name: 'notifyContactOnCaseComment',
            typeInfo: 'Boolean'
          }, {
            name: 'notifyDefaultCaseOwner',
            typeInfo: 'Boolean'
          }, {
            name: 'notifyOwnerOnCaseComment',
            typeInfo: 'Boolean'
          }, {
            name: 'notifyOwnerOnCaseOwnerChange',
            typeInfo: 'Boolean'
          }, {
            name: 'showEmailAttachmentsInCaseAttachmentsRL',
            typeInfo: 'Boolean'
          }, {
            name: 'showFewerCloseActions',
            typeInfo: 'Boolean'
          }, {
            name: 'systemUserEmail'
          }, {
            name: 'useSystemEmailAddress',
            typeInfo: 'Boolean'
          }, {
            name: 'useSystemUserAsDefaultCaseUser',
            typeInfo: 'Boolean'
          }, {
            name: 'webToCase',
            typeInfo: '.WebToCaseSettings'
          }]
      }, {
        localName: 'ReadResult',
        propertyInfos: [{
            name: 'records',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Metadata'
          }]
      }, {
        localName: 'CustomNotificationType',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'customNotifTypeName',
            required: true
          }, {
            name: 'description'
          }, {
            name: 'desktop',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'email',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'mobile',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FieldSet',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'availableFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldSetItem'
          }, {
            name: 'description',
            required: true
          }, {
            name: 'displayedFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldSetItem'
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'FlowChoiceTranslation',
        propertyInfos: [{
            name: 'choiceText'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'userInput',
            typeInfo: '.FlowChoiceUserInputTranslation'
          }]
      }, {
        localName: 'WaveRecipe',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'dataflow',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'securityPredicate'
          }, {
            name: 'targetDatasetAlias',
            required: true
          }]
      }, {
        localName: 'CallCenterSection',
        propertyInfos: [{
            name: 'items',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CallCenterItem'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'FileUploadAndDownloadSecuritySettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'dispositions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FileTypeDispositionAssignmentBean'
          }, {
            name: 'noHtmlUploadAsAttachment',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'SummaryLayoutItem',
        propertyInfos: [{
            name: 'customLink'
          }, {
            name: 'field'
          }, {
            name: 'posX',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'posY',
            typeInfo: 'Int'
          }, {
            name: 'posZ',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'CommunityTemplatePageSetting',
        propertyInfos: [{
            name: 'page',
            required: true
          }, {
            name: 'themeLayout',
            required: true
          }]
      }, {
        localName: 'ChatterExtension',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'compositionComponent',
            required: true
          }, {
            name: 'description',
            required: true
          }, {
            name: 'extensionName',
            required: true
          }, {
            name: 'headerText'
          }, {
            name: 'hoverText'
          }, {
            name: 'icon',
            required: true
          }, {
            name: 'isProtected',
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'renderComponent',
            required: true
          }, {
            name: 'type',
            required: true,
            typeInfo: '.ChatterExtensionType'
          }]
      }, {
        localName: 'KeywordList',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'keywords',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Keyword'
          }, {
            name: 'masterLabel',
            required: true
          }]
      }, {
        localName: 'ObjectRelationship',
        propertyInfos: [{
            name: 'join',
            typeInfo: '.ObjectRelationship'
          }, {
            name: 'outerJoin',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'relationship',
            required: true
          }]
      }, {
        localName: 'PlatformActionListItem',
        propertyInfos: [{
            name: 'actionName',
            required: true
          }, {
            name: 'actionType',
            required: true,
            typeInfo: '.PlatformActionType'
          }, {
            name: 'sortOrder',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'subtype'
          }]
      }, {
        localName: 'PathAssistant',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'entityName',
            required: true
          }, {
            name: 'fieldName',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'pathAssistantSteps',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PathAssistantStep'
          }, {
            name: 'recordTypeName',
            required: true
          }]
      }, {
        localName: 'WaveXmd',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'application'
          }, {
            name: 'dataset',
            required: true
          }, {
            name: 'datasetConnector'
          }, {
            name: 'datasetFullyQualifiedName'
          }, {
            name: 'dates',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WaveXmdDate'
          }, {
            name: 'dimensions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WaveXmdDimension'
          }, {
            name: 'measures',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WaveXmdMeasure'
          }, {
            name: 'organizations',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WaveXmdOrganization'
          }, {
            name: 'origin'
          }, {
            name: 'type'
          }, {
            name: 'waveVisualization'
          }]
      }, {
        localName: 'DashboardComponentColumn',
        propertyInfos: [{
            name: 'breakPoint1',
            typeInfo: 'Double'
          }, {
            name: 'breakPoint2',
            typeInfo: 'Double'
          }, {
            name: 'breakPointOrder',
            typeInfo: 'Int'
          }, {
            name: 'highRangeColor',
            typeInfo: 'Int'
          }, {
            name: 'lowRangeColor',
            typeInfo: 'Int'
          }, {
            name: 'midRangeColor',
            typeInfo: 'Int'
          }, {
            name: 'reportColumn',
            required: true
          }, {
            name: 'showTotal',
            typeInfo: 'Boolean'
          }, {
            name: 'type',
            required: true
          }]
      }, {
        localName: 'OpportunityListFieldsUnselectedSettings',
        propertyInfos: [{
            name: 'field',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'FlowLoop',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'assignNextValueToReference',
            required: true
          }, {
            name: 'collectionReference',
            required: true
          }, {
            name: 'iterationOrder',
            typeInfo: '.IterationOrder'
          }, {
            name: 'nextValueConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'noMoreValuesConnector',
            typeInfo: '.FlowConnector'
          }]
      }, {
        localName: 'CommunityTemplateDefinition',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'baseTemplate',
            typeInfo: '.CommunityBaseTemplate'
          }, {
            name: 'bundlesInfo',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CommunityTemplateBundleInfo'
          }, {
            name: 'category',
            required: true,
            typeInfo: '.CommunityTemplateCategory'
          }, {
            name: 'defaultBrandingSet'
          }, {
            name: 'defaultThemeDefinition',
            required: true
          }, {
            name: 'description'
          }, {
            name: 'enableExtendedCleanUpOnDelete',
            typeInfo: 'Boolean'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'navigationLinkSet',
            minOccurs: 0,
            collection: true,
            typeInfo: '.NavigationLinkSet'
          }, {
            name: 'pageSetting',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CommunityTemplatePageSetting'
          }]
      }, {
        localName: 'AgentConfigButtons',
        propertyInfos: [{
            name: 'button',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'AllOrNoneHeader',
        typeName: null,
        propertyInfos: [{
            name: 'allOrNone',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ForecastingDisplayedFamilySettings',
        propertyInfos: [{
            name: 'productFamily'
          }]
      }, {
        localName: 'FeedLayoutComponent',
        propertyInfos: [{
            name: 'componentType',
            required: true,
            typeInfo: '.FeedLayoutComponentType'
          }, {
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'page'
          }]
      }, {
        localName: 'ExtendedErrorDetails',
        propertyInfos: [{
            name: 'extendedErrorCode',
            required: true,
            values: ['ACTIONCALL_DUPLICATE_INPUT_PARAM', 'ACTIONCALL_DUPLICATE_OUTPUT_PARAM', 'ACTIONCALL_MISSING_NAME', 'ACTIONCALL_MISSING_REQUIRED_PARAM', 'ACTIONCALL_MISSING_REQUIRED_TYPE', 'ACTIONCALL_NOT_FOUND_WITH_NAME_AND_TYPE', 'ACTIONCALL_NOT_SUPPORTED_FOR_PROCESSTYPE', 'APEXCALLOUT_INPUT_DUPLICATE', 'APEXCALLOUT_INPUT_INCOMPATIBLE_DATATYPE', 'APEXCALLOUT_INVALID', 'APEXCALLOUT_MISSING_CLASSNAME', 'APEXCALLOUT_NOT_FOUND', 'APEXCALLOUT_OUTPUT_INCOMPATIBLE_DATATYPE', 'APEXCALLOUT_OUTPUT_NOT_FOUND', 'APEXCALLOUT_REQUIRED_INPUT_MISSING', 'APEXCLASS_MISSING_INTERFACE', 'ASSIGNMENTITEM_ELEMENT_MISSING_DATATYPE', 'ASSIGNMENTITEM_ELEMENT_NOT_SUPPORTED', 'ASSIGNMENTITEM_FIELD_INVALID_DATATYPE', 'ASSIGNMENTITEM_FIELD_INVALID_DATATYPE_WITH_ELEMENT', 'ASSIGNMENTITEM_INCOMPATIBLE_DATATYPES', 'ASSIGNMENTITEM_INVALID_COLLECTION', 'ASSIGNMENTITEM_INVALID_DATATYPE_IN_ELEMENT', 'ASSIGNMENTITEM_INVALID_REFERENCE', 'ASSIGNMENTITEM_LEFT_DATATYPE_INVALID_FOR_OPERATOR', 'ASSIGNMENTITEM_MODIFIES_NONVARIABLE', 'ASSIGNMENTITEM_NONEXISTENT_REFERENCE', 'ASSIGNMENTITEM_REQUIRED', 'ASSIGNMENTITEM_RIGHT_DATATYPE_INVALID_FOR_OPERATOR', 'AUTOLAUNCHED_CHOICELOOKUP_NOT_SUPPORTED', 'AUTOLAUNCHED_CHOICE_NOT_SUPPORTED', 'AUTOLAUNCHED_SCREEN_NOT_SUPPORTED', 'AUTOLAUNCHED_STEP_NOT_SUPPORTED', 'AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE', 'AUTOLAUNCHED_WAIT_NOT_SUPPORTED', 'CHOICEFIELD_DEFAULT_CHOICE_NOT_FOUND', 'CHOICEFIELD_MISSING_CHOICE', 'CHOICELOOKUP_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD', 'CHOICE_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD', 'CHOICE_NOT_SUPPORTED_FOR_SCREENFIELDTYPE', 'CHOICE_USED_MULTIPLE_TIMES_IN_SAME_FIELD', 'CONDITION_DATATYPE_INCOMPATIBLE', 'CONDITION_DATATYPE_INCOMPATIBLE_WITH_ELEMENT', 'CONDITION_ELEMENT_DATATYPES_INCOMPATIBLE', 'CONDITION_INVALID_LEFTOPERAND', 'CONDITION_INVALID_LEFT_ELEMENT', 'CONDITION_LOGIC_EXCEEDS_LIMIT', 'CONDITION_LOGIC_INVALID', 'CONDITION_LOGIC_MISSING', 'CONDITION_MISSING_DATATYPE', 'CONDITION_MISSING_OPERATOR', 'CONDITION_REFERENCED_ELEMENT_NOT_FOUND', 'CONDITION_RIGHTOPERAND_NULL', 'CONNECTOR_MISSING_TARGET', 'CONSTANT_INCLUDES_REFERENCES', 'CUSTOMEVENTS_NOT_ENABLED', 'CUSTOMEVENT_MISSING_PROCESSMETADATAVALUES', 'CUSTOMEVENT_OBJECTTYPE_NOT_FOUND', 'CUSTOMEVENT_OBJECTTYPE_NOT_SUPPORTED', 'CUSTOMEVENT_PROCESSMETADATAVALUES_MISSING_NAME', 'CUSTOMEVENT_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME', 'DATATYPE_INVALID', 'DATATYPE_MISSING', 'DECISION_DEFAULT_CONNECTOR_MISSING_LABEL', 'DECISION_MISSING_OUTCOME', 'ELEMENT_CONNECTS_TO_SELF', 'ELEMENT_COORDINATES_INVALID', 'ELEMENT_INVALID_CONNECTOR', 'ELEMENT_INVALID_REFERENCE', 'ELEMENT_MISSING_CONNECTOR', 'ELEMENT_MISSING_LABEL', 'ELEMENT_MISSING_NAME', 'ELEMENT_MISSING_REFERENCE', 'ELEMENT_MORE_THAN_ONE_FIELD', 'ELEMENT_NAME_INVALID', 'ELEMENT_NEVER_USED', 'ELEMENT_SCALE_SMALLER_THAN_DEFAULTVALUE', 'EXTERNAL_OBJECTS_NOT_SUPPORTED', 'EXTERNAL_OBJECT_FIELDS_NOT_SUPPORTED', 'FIELDASSIGNMENT_FIELD_INCOMPATIBLE_DATATYPE', 'FIELDASSIGNMENT_INVALID_DATATYPE', 'FIELDASSIGNMENT_INVALID_ELEMENT', 'FIELDASSIGNMENT_INVALID_REFERENCE', 'FIELDASSIGNMENT_MULTIPLE_REFERENCES_SAME_FIELD', 'FIELDASSIGNMENT_PICKLISTFIELD_INCOMPATIBLE_DATATYPE', 'FIELDASSIGNMENT_REFERENCED_ELEMENT_MISSING_DATATYPE', 'FIELDSERVICE_UNSUPPORTED_FIELD_TYPE', 'FIELD_INVALID_VALUE', 'FIELD_NOT_FOUND', 'FIELD_RELATIONSHIP_NOT_SUPPORTED', 'FLEXIPAGE_COMPONENT_ATTRIBUTE_EXPRESSION_EXCEPTION', 'FLEXIPAGE_COMPONENT_ATTRIBUTE_GENERIC_EXCEPTION', 'FLEXIPAGE_COMPONENT_ATTRIBUTE_MISSING_REQUIRED', 'FLEXIPAGE_COMPONENT_ATTRIBUTE_TOO_LONG', 'FLEXIPAGE_COMPONENT_MAX_LIMIT_EXCEPTION', 'FLEXIPAGE_COMPONENT_RULE_VALIDATION_EXCEPTION', 'FLEXIPAGE_PICKLIST_INVALID_VALUE_EXCEPTION', 'FLOW_INCLUDES_STEP', 'FLOW_NAME_USED_IN_OTHER_CLIENT', 'FORMULA_EXPRESSION_INVALID', 'INPUTPARAM_INCOMPATIBLE_DATATYPE', 'INPUTPARAM_INCOMPATIBLE_WITH_COLLECTION_VARIABLE', 'INPUTPARAM_INCOMPATIBLE_WITH_NONCOLLECTION_VARIABLE', 'INPUTPARAM_MISMATCHED_OBJECTTYPE', 'INVALID_FLOW', 'INVALID_SURVEY_VARIABLE_NAME_OR_TYPE', 'LOOP_ASSIGNNEXTVALUETO_MISMATCHED_DATATYPE', 'LOOP_ASSIGNNEXTVALUETO_MISMATCHED_OBJECTTYPE', 'LOOP_ASSIGNNEXTVALUETO_MISSING', 'LOOP_ASSIGNNEXTVALUETO_MISSING_VARIABLE', 'LOOP_ASSIGNNEXTVALUETO_REFERENCE_NOT_FOUND', 'LOOP_COLLECTION_ELEMENT_NOT_FOUND', 'LOOP_COLLECTION_NOT_FOUND', 'LOOP_COLLECTION_NOT_SUPPORTED_FOR_FIELD', 'LOOP_MISSING_COLLECTION', 'OBJECTTYPE_INVALID', 'OBJECT_CANNOT_BE_CREATED', 'OBJECT_CANNOT_BE_DELETED', 'OBJECT_CANNOT_BE_QUERIED', 'OBJECT_CANNOT_BE_UPDATED', 'OBJECT_ENCRYPTED_FIELDS_NOT_SUPPORTED', 'OBJECT_NOT_FOUND', 'OUTPUTPARAM_ASSIGNTOREFERENCE_NOTFOUND', 'OUTPUTPARAM_INCOMPATIBLE_DATATYPE', 'OUTPUTPARAM_MISMATCHED_OBJECTTYPE', 'OUTPUTPARAM_MISMATCHED_WITH_COLLECTION_VARIABLE', 'OUTPUTPARAM_MISSING_ASSIGNTOREFERENCE', 'OUTPUTPARAM_MISTMATCHED_WITH_NONCOLLECTION_VARIABLE', 'PARAM_DATATYPE_NOT_SUPPORTED', 'PROCESSMETADATAVALUES_NOT_SUPPORTED_FOR_PROCESSTYPE', 'PROCESSMETADATAVALUE_NONEXISTENT_ELEMENT', 'PROCESSTYPE_ELEMENT_NOT_SUPPORTED', 'PROCESSTYPE_NOT_SUPPORTED', 'RECORDFILTER_ENCRYPTED_FIELDS_NOT_SUPPORTED', 'RECORDFILTER_GEOLOCATION_FIELDS_NOT_SUPPORTED', 'RECORDFILTER_INVALID_DATATYPE', 'RECORDFILTER_INVALID_ELEMENT', 'RECORDFILTER_INVALID_OPERATOR', 'RECORDFILTER_INVALID_REFERENCE', 'RECORDFILTER_MISSING_DATATYPE', 'RECORDFILTER_MULTIPLE_QUERIES_SAME_FIELD', 'RECORDLOOKUP_IDASSIGNMENT_VARIABLE_INCOMPATIBLE_DATATYPE', 'RECORDLOOKUP_IDASSIGNMENT_VARIABLE_NOT_FOUND', 'RECORDUPDATE_MISSING_FILTERS', 'REFERENCED_ELEMENT_NOT_FOUND', 'RULE_MISSING_CONDITION', 'SCREENFIELD_BOOLEAN_ISREQUIRED_IS_FALSE', 'SCREENFIELD_DEFAULTVALUE_NOT_SUPPORTED', 'SCREENFIELD_EXTENSION_COMPONENT_NOT_GLOBAL', 'SCREENFIELD_EXTENSION_DUPLICATE_INPUT_PARAM', 'SCREENFIELD_EXTENSION_DUPLICATE_OUTPUT_PARAM', 'SCREENFIELD_EXTENSION_IMPLEMENTATION_INVALID', 'SCREENFIELD_EXTENSION_INPUT_ATTRIBUTE_INVALID', 'SCREENFIELD_EXTENSION_NAME_INVALID', 'SCREENFIELD_EXTENSION_NAME_MISSING', 'SCREENFIELD_EXTENSION_NAME_NOT_SUPPORTED', 'SCREENFIELD_EXTENSION_OUTPUT_ATTRIBUTE_INVALID', 'SCREENFIELD_EXTENSION_REQUIRED_INPUT_MISSING', 'SCREENFIELD_INPUTS_NOT_SUPPORTED', 'SCREENFIELD_INVALID_DATATYPE', 'SCREENFIELD_MULTISELECTCHOICE_SEMICOLON_NOT_SUPPORTED', 'SCREENFIELD_OUTPUTS_NOT_SUPPORTED', 'SCREENFIELD_TYPE_NOT_SUPPORTED', 'SCREENFIELD_USERINPUT_NOT_SUPPORTED_FOR_CHOICETYPE', 'SCREENFIELD_VALIDATIONRULE_NOT_SUPPORTED', 'SCREENRULE_ACTION_INVALID_ATTRIBUTE', 'SCREENRULE_ACTION_INVALID_ATTRIBUTE_FOR_API_VERSION', 'SCREENRULE_ACTION_INVALID_VALUE', 'SCREENRULE_ACTION_MISSING_ATTRIBUTE', 'SCREENRULE_ACTION_MISSING_FIELDREFERENCE', 'SCREENRULE_ACTION_MISSING_VALUE', 'SCREENRULE_ATTRIBUTE_NOT_SUPPORTED_FOR_SCREENFIELD', 'SCREENRULE_FIELD_NOT_FOUND_ON_SCREEN', 'SCREENRULE_MISSING_ACTION', 'SCREENRULE_NOT_SUPPORTED_IN_ORG', 'SCREENRULE_SCREENFIELD_NOT_VISIBLE', 'SCREENRULE_VISIBILITY_NOT_SUPPORTED_IN_ORG', 'SCREEN_ALLOWBACK_ALLOWFINISH_BOTH_FALSE', 'SCREEN_CONTAINS_LIGHTNING_COMPONENT', 'SCREEN_MISSING_FOOTER_AND_LIGHTNING_COMPONENT', 'SCREEN_MISSING_LABEL', 'SCREEN_MULTISELECTFIELD_DOESNT_SUPPORT_CHOICE_WITH_USERINPUT', 'SCREEN_PAUSEDTEXT_NOT_SHOWN_WHEN_ALLOWPAUSE_IS_FALSE', 'SETTING_FIELD_MAKES_OTHER_FIELD_REQUIRED', 'SETTING_FIELD_MAKES_OTHER_FIELD_UNSUPPORTED', 'SOBJECT_ELEMENT_INCOMPATIBLE_DATATYPE', 'SOBJECT_ELEMENT_MISMATCHED_OBJECTTYPE', 'SORT_ENCRYPTED_FIELDS_NOT_SUPPORTED', 'SORT_FIELD_MISSING', 'SORT_FIELD_NOT_SUPPORTED', 'SORT_GEOLOCATION_FIELDS_NOT_SUPPORTED', 'SORT_LIMIT_INVALID', 'SORT_ORDER_MISSING', 'SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_REQUIRED', 'START_ELEMENT_MISSING', 'SUBFLOW_DESKTOP_DESIGNER_FLOWS_NOT_SUPPORTED', 'SUBFLOW_INPUT_ELEMENT_INCOMPATIBLE_DATATYPES', 'SUBFLOW_INPUT_INVALID_VALUE', 'SUBFLOW_INPUT_MISMATCHED_COLLECTIONTYPES', 'SUBFLOW_INPUT_MISMATCHED_OBJECTS', 'SUBFLOW_INPUT_MISSING_NAME', 'SUBFLOW_INPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE', 'SUBFLOW_INPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE', 'SUBFLOW_INPUT_VALUE_INCOMPATIBLE_DATATYPES', 'SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW', 'SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW', 'SUBFLOW_INPUT_VARIABLE_NO_INPUT_ACCESS', 'SUBFLOW_INVALID_NAME', 'SUBFLOW_INVALID_REFERENCE', 'SUBFLOW_MASTER_FLOW_TYPE_NOT_AUTOLAUNCHED', 'SUBFLOW_MISSING_NAME', 'SUBFLOW_NO_ACTIVE_VERSION', 'SUBFLOW_OUTPUT_INCOMPATIBLE_DATATYPES', 'SUBFLOW_OUTPUT_MISMATCHED_COLLECTIONTYPES', 'SUBFLOW_OUTPUT_MISMATCHED_OBJECTS', 'SUBFLOW_OUTPUT_MISSING_ASSIGNTOREFERENCE', 'SUBFLOW_OUTPUT_MISSING_NAME', 'SUBFLOW_OUTPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE', 'SUBFLOW_OUTPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE', 'SUBFLOW_OUTPUT_TARGET_DOES_NOT_EXIST_IN_MASTER_FLOW', 'SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW', 'SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW', 'SUBFLOW_OUTPUT_VARIABLE_NO_OUTPUT_ACCESS', 'SUBFLOW_REFERENCES_MASTERFLOW', 'SURVEY_CHOICE_NOT_REFERENCED_BY_A_QUESTION', 'SURVEY_CHOICE_REFERENCED_BY_MULTIPLE_QUESTIONS', 'SURVEY_INACTIVE_SUBFLOWS', 'SURVEY_MISSING_QUESTION_OR_SUBFLOW', 'SURVEY_MISSING_REQUIRED_VARIABLES', 'SURVEY_NESTED_SUBFLOWS', 'SURVEY_NONSURVEY_SUBFLOWS', 'SURVEY_SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_QUESTION', 'SURVEY_START_ELEMENT_INVALID', 'SURVEY_VARIABLE_ACCESS_INVALID', 'UNEXPECTED_ERROR', 'VALUE_CHAR_LIMIT_EXCEEDED', 'VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE', 'VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE_AND_COLLECTION', 'VARIABLE_FIELD_REQUIRED_FOR_DATATYPE', 'VARIABLE_SCALE_EXCEEDS_LIMIT', 'VARIABLE_SCALE_NEGATIVE_INTEGER', 'VARIABLE_SCALE_NULL', 'WAITEVENT_DEFAULT_CONNECTOR_MISSING_LABEL', 'WAITEVENT_DUPLICATE_INPUT_PARAM', 'WAITEVENT_INPUT_NOT_SUPPORTED_FOR_EVENTTYPE', 'WAITEVENT_INPUT_REQUIRES_LITERAL_VALUE', 'WAITEVENT_INVALID_CONDITION_LOGIC', 'WAITEVENT_MISSING', 'WAITEVENT_MISSING_CONNECTOR', 'WAITEVENT_MISSING_EVENTTYPE', 'WAITEVENT_OBJECT_NOT_SUPPORTED_FOR_EVENTTYPE', 'WAITEVENT_OUTPUT_NOT_SUPPORTED_FOR_EVENTTYPE', 'WAITEVENT_RELATIVEALARM_INVALID_DATETIME_FIELD', 'WAITEVENT_RELATIVEALARM_INVALID_FIELD', 'WAITEVENT_RELATIVEALARM_INVALID_OBJECTTYPE', 'WAITEVENT_RELATIVEALARM_INVALID_OFFSETNUMBER', 'WAITEVENT_RELATIVEALARM_INVALID_OFFSETUNIT', 'WAITEVENT_REQUIRED_INPUT_MISSING', 'WAITEVENT_TYPE_INVALID_OR_NOT_SUPPORTED', 'WORKFLOW_MISSING_PROCESSMETADATAVALUES', 'WORKFLOW_OBJECTTYPE_NOT_FOUND', 'WORKFLOW_OBJECTTYPE_NOT_SUPPORTED', 'WORKFLOW_OBJECTVARIABLE_AND_OLDOBJECTVARIABLE_REFERENCE_SAME_SOBJECT_VARIABLE', 'WORKFLOW_OBJECTVARIABLE_DOESNT_SUPPORT_INPUT', 'WORKFLOW_OLDOBJECTVARIABLE_DOESNT_SUPPORT_INPUT', 'WORKFLOW_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME', 'WORKFLOW_PROCESS_METADATAVALUES_MISSING_NAME', 'WORKFLOW_RECURSIVECOUNTVARIABLE_DOESNT_SUPPORT_INPUT', 'WORKFLOW_TRIGGERTYPE_INVALID_VALUE']
          }, {
            name: 'any',
            minOccurs: 0,
            collection: true,
            mixed: false,
            type: 'anyElement'
          }]
      }, {
        localName: 'ApprovalPageField',
        propertyInfos: [{
            name: 'field',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'ManagedTopic',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'managedTopicType',
            required: true
          }, {
            name: 'name',
            required: true
          }, {
            name: 'parentName',
            required: true
          }, {
            name: 'position',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'topicDescription',
            required: true
          }]
      }, {
        localName: 'QuotasSettings',
        propertyInfos: [{
            name: 'showQuotas',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'DeleteMetadata',
        typeName: null,
        propertyInfos: [{
            name: 'type',
            required: true
          }, {
            name: 'fullNames',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'AppPreferences',
        propertyInfos: [{
            name: 'enableCustomizeMyTabs',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enableKeyboardShortcuts',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enableListViewHover',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enableListViewReskin',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enableMultiMonitorComponents',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enablePinTabs',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enableTabHover',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'enableTabLimits',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'saveUserSessions',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'Territory2RuleAssociation',
        propertyInfos: [{
            name: 'inherited',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'ruleName',
            required: true
          }]
      }, {
        localName: 'CorsWhitelistOrigin',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'urlPattern',
            required: true
          }]
      }, {
        localName: 'PersonalJourneySettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableExactTargetForSalesforceApps',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'SiteRedirectMapping',
        propertyInfos: [{
            name: 'action',
            required: true,
            typeInfo: '.SiteRedirect'
          }, {
            name: 'isActive',
            typeInfo: 'Boolean'
          }, {
            name: 'source',
            required: true
          }, {
            name: 'target',
            required: true
          }]
      }, {
        localName: 'CheckRetrieveStatusResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true,
            typeInfo: '.RetrieveResult'
          }]
      }, {
        localName: 'SharingCriteriaRule',
        baseTypeInfo: '.SharingBaseRule',
        propertyInfos: [{
            name: 'booleanFilter'
          }, {
            name: 'criteriaItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FilterItem'
          }]
      }, {
        localName: 'SynonymGroup',
        propertyInfos: [{
            name: 'languages',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Language'
          }, {
            name: 'terms',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'DefaultShortcut',
        propertyInfos: [{
            name: 'action',
            required: true
          }, {
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'keyCommand',
            required: true
          }]
      }, {
        localName: 'KnowledgeCaseFieldsSettings',
        propertyInfos: [{
            name: 'field',
            minOccurs: 0,
            collection: true,
            typeInfo: '.KnowledgeCaseField'
          }]
      }, {
        localName: 'AgentConfigProfileAssignments',
        propertyInfos: [{
            name: 'profile',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'SearchSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'documentContentSearchEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'optimizeSearchForCJKEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'recentlyViewedUsersForBlankLookupEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'searchSettingsByObject',
            required: true,
            typeInfo: '.SearchSettingsByObject'
          }, {
            name: 'sidebarAutoCompleteEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'sidebarDropDownListEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'sidebarLimitToItemsIOwnCheckboxEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'singleSearchResultShortcutEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'spellCorrectKnowledgeSearchEnabled',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'WaveLens',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'application',
            required: true
          }, {
            name: 'datasets',
            minOccurs: 0,
            collection: true
          }, {
            name: 'description'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'templateAssetSourceName'
          }, {
            name: 'visualizationType',
            required: true
          }]
      }, {
        localName: 'StandardValueSetTranslation',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'valueTranslation',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ValueTranslation'
          }]
      }, {
        localName: 'Skill',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'assignments',
            typeInfo: '.SkillAssignments'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'DataCategoryGroup',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'dataCategory',
            required: true,
            typeInfo: '.DataCategory'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'objectUsage',
            typeInfo: '.ObjectUsage'
          }]
      }, {
        localName: 'Queue',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'doesSendEmailToMembers',
            typeInfo: 'Boolean'
          }, {
            name: 'email'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'queueMembers',
            typeInfo: '.QueueMembers'
          }, {
            name: 'queueRoutingConfig'
          }, {
            name: 'queueSobject',
            minOccurs: 0,
            collection: true,
            typeInfo: '.QueueSobject'
          }]
      }, {
        localName: 'ListMetadataResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FileProperties'
          }]
      }, {
        localName: 'Flow',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'actionCalls',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowActionCall'
          }, {
            name: 'apexPluginCalls',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowApexPluginCall'
          }, {
            name: 'assignments',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowAssignment'
          }, {
            name: 'choices',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowChoice'
          }, {
            name: 'constants',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowConstant'
          }, {
            name: 'decisions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowDecision'
          }, {
            name: 'description'
          }, {
            name: 'dynamicChoiceSets',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowDynamicChoiceSet'
          }, {
            name: 'formulas',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowFormula'
          }, {
            name: 'interviewLabel'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'loops',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowLoop'
          }, {
            name: 'processMetadataValues',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowMetadataValue'
          }, {
            name: 'processType',
            typeInfo: '.FlowProcessType'
          }, {
            name: 'recordCreates',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowRecordCreate'
          }, {
            name: 'recordDeletes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowRecordDelete'
          }, {
            name: 'recordLookups',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowRecordLookup'
          }, {
            name: 'recordUpdates',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowRecordUpdate'
          }, {
            name: 'screens',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowScreen'
          }, {
            name: 'stages',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowStage'
          }, {
            name: 'startElementReference'
          }, {
            name: 'steps',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowStep'
          }, {
            name: 'subflows',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowSubflow'
          }, {
            name: 'textTemplates',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowTextTemplate'
          }, {
            name: 'variables',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowVariable'
          }, {
            name: 'waits',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowWait'
          }]
      }, {
        localName: 'DebuggingHeader',
        typeName: null,
        propertyInfos: [{
            name: 'categories',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LogInfo'
          }, {
            name: 'debugLevel',
            required: true,
            typeInfo: '.LogType'
          }]
      }, {
        localName: 'CallCenter',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'adapterUrl'
          }, {
            name: 'customSettings'
          }, {
            name: 'displayName',
            required: true
          }, {
            name: 'displayNameLabel',
            required: true
          }, {
            name: 'internalNameLabel',
            required: true
          }, {
            name: 'sections',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CallCenterSection'
          }, {
            name: 'version'
          }]
      }, {
        localName: 'Metadata',
        propertyInfos: [{
            name: 'fullName'
          }]
      }, {
        localName: 'ValueTranslation',
        propertyInfos: [{
            name: 'masterLabel',
            required: true
          }, {
            name: 'translation'
          }]
      }, {
        localName: 'TouchMobileSettings',
        propertyInfos: [{
            name: 'enableTouchAppIPad',
            typeInfo: 'Boolean'
          }, {
            name: 'enableTouchAppIPhone',
            typeInfo: 'Boolean'
          }, {
            name: 'enableTouchBrowserIPad',
            typeInfo: 'Boolean'
          }, {
            name: 'enableTouchIosPhone',
            typeInfo: 'Boolean'
          }, {
            name: 'enableVisualforceInTouch',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'Keyword',
        propertyInfos: [{
            name: 'keyword',
            required: true
          }]
      }, {
        localName: 'CompactLayout',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'fields',
            minOccurs: 0,
            collection: true
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'WaveXmdDate',
        propertyInfos: [{
            name: 'alias',
            required: true
          }, {
            name: 'compact',
            typeInfo: 'Boolean'
          }, {
            name: 'dateFieldDay'
          }, {
            name: 'dateFieldEpochDay'
          }, {
            name: 'dateFieldEpochSecond'
          }, {
            name: 'dateFieldFiscalMonth'
          }, {
            name: 'dateFieldFiscalQuarter'
          }, {
            name: 'dateFieldFiscalWeek'
          }, {
            name: 'dateFieldFiscalYear'
          }, {
            name: 'dateFieldFullYear'
          }, {
            name: 'dateFieldHour'
          }, {
            name: 'dateFieldMinute'
          }, {
            name: 'dateFieldMonth'
          }, {
            name: 'dateFieldQuarter'
          }, {
            name: 'dateFieldSecond'
          }, {
            name: 'dateFieldWeek'
          }, {
            name: 'dateFieldYear'
          }, {
            name: 'description'
          }, {
            name: 'firstDayOfWeek',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'fiscalMonthOffset',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'isYearEndFiscalYear',
            typeInfo: 'Boolean'
          }, {
            name: 'label'
          }, {
            name: 'showInExplorer',
            typeInfo: 'Boolean'
          }, {
            name: 'sortIndex',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'CampaignInfluenceModel',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'isActive',
            typeInfo: 'Boolean'
          }, {
            name: 'isDefaultModel',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isModelLocked',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'modelDescription'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'recordPreference'
          }]
      }, {
        localName: 'WorkflowAction',
        baseTypeInfo: '.Metadata'
      }, {
        localName: 'SkillProfileAssignments',
        propertyInfos: [{
            name: 'profile',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'ValueSetValuesDefinition',
        propertyInfos: [{
            name: 'sorted',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomValue'
          }]
      }, {
        localName: 'CustomApplicationComponent',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'buttonIconUrl'
          }, {
            name: 'buttonStyle'
          }, {
            name: 'buttonText'
          }, {
            name: 'buttonWidth',
            typeInfo: 'Int'
          }, {
            name: 'height',
            typeInfo: 'Int'
          }, {
            name: 'isHeightFixed',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isHidden',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'isWidthFixed',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'visualforcePage',
            required: true
          }, {
            name: 'width',
            typeInfo: 'Int'
          }]
      }, {
        localName: 'Dashboard',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'backgroundEndColor',
            required: true
          }, {
            name: 'backgroundFadeDirection',
            required: true,
            typeInfo: '.ChartBackgroundDirection'
          }, {
            name: 'backgroundStartColor',
            required: true
          }, {
            name: 'chartTheme',
            typeInfo: '.ChartTheme'
          }, {
            name: 'colorPalette',
            typeInfo: '.ChartColorPalettes'
          }, {
            name: 'dashboardChartTheme',
            typeInfo: '.ChartTheme'
          }, {
            name: 'dashboardColorPalette',
            typeInfo: '.ChartColorPalettes'
          }, {
            name: 'dashboardFilters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DashboardFilter'
          }, {
            name: 'dashboardGridLayout',
            typeInfo: '.DashboardGridLayout'
          }, {
            name: 'dashboardResultRefreshedDate'
          }, {
            name: 'dashboardResultRunningUser'
          }, {
            name: 'dashboardType',
            typeInfo: '.DashboardType'
          }, {
            name: 'description'
          }, {
            name: 'folderName'
          }, {
            name: 'isGridLayout',
            typeInfo: 'Boolean'
          }, {
            name: 'leftSection',
            typeInfo: '.DashboardComponentSection'
          }, {
            name: 'middleSection',
            typeInfo: '.DashboardComponentSection'
          }, {
            name: 'numSubscriptions',
            typeInfo: 'Int'
          }, {
            name: 'rightSection',
            typeInfo: '.DashboardComponentSection'
          }, {
            name: 'runningUser'
          }, {
            name: 'textColor',
            required: true
          }, {
            name: 'title',
            required: true
          }, {
            name: 'titleColor',
            required: true
          }, {
            name: 'titleSize',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'ProfileApexPageAccess',
        propertyInfos: [{
            name: 'apexPage',
            required: true
          }, {
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FlowStep',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'connectors',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowConnector'
          }]
      }, {
        localName: 'AgentConfigSkills',
        propertyInfos: [{
            name: 'skill',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'PermissionSetObjectPermissions',
        propertyInfos: [{
            name: 'allowCreate',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'allowDelete',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'allowEdit',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'allowRead',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'modifyAllRecords',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'object',
            required: true
          }, {
            name: 'viewAllRecords',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'WaveXmdMeasure',
        propertyInfos: [{
            name: 'dateFormat'
          }, {
            name: 'description'
          }, {
            name: 'field',
            required: true
          }, {
            name: 'formatCustomFormat'
          }, {
            name: 'formatDecimalDigits',
            typeInfo: 'Int'
          }, {
            name: 'formatIsNegativeParens',
            typeInfo: 'Boolean'
          }, {
            name: 'formatPrefix'
          }, {
            name: 'formatSuffix'
          }, {
            name: 'formatUnit'
          }, {
            name: 'formatUnitMultiplier',
            typeInfo: 'Double'
          }, {
            name: 'fullyQualifiedName'
          }, {
            name: 'isDerived',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'label'
          }, {
            name: 'origin'
          }, {
            name: 'showDetailsDefaultFieldIndex',
            typeInfo: 'Int'
          }, {
            name: 'showInExplorer',
            typeInfo: 'Boolean'
          }, {
            name: 'sortIndex',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'QuickActionListItem',
        propertyInfos: [{
            name: 'quickActionName',
            required: true
          }]
      }, {
        localName: 'CreateMetadataResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SaveResult'
          }]
      }, {
        localName: 'RetrieveRequest',
        propertyInfos: [{
            name: 'apiVersion',
            required: true,
            typeInfo: 'Double'
          }, {
            name: 'packageNames',
            minOccurs: 0,
            collection: true
          }, {
            name: 'singlePackage',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'specificFiles',
            minOccurs: 0,
            collection: true
          }, {
            name: 'unpackaged',
            typeInfo: '.Package'
          }]
      }, {
        localName: 'ContentAsset',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'format',
            typeInfo: '.ContentAssetFormat'
          }, {
            name: 'language',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'originNetwork'
          }, {
            name: 'relationships',
            typeInfo: '.ContentAssetRelationships'
          }, {
            name: 'versions',
            required: true,
            typeInfo: '.ContentAssetVersions'
          }]
      }, {
        localName: 'Territory2Type',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'priority',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'EntitlementProcessMilestoneTimeTrigger',
        propertyInfos: [{
            name: 'actions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowActionReference'
          }, {
            name: 'timeLength',
            typeInfo: 'Int'
          }, {
            name: 'workflowTimeTriggerUnit',
            required: true,
            typeInfo: '.MilestoneTimeUnits'
          }]
      }, {
        localName: 'ForecastingCategoryMapping',
        propertyInfos: [{
            name: 'forecastingItemCategoryApiName',
            required: true
          }, {
            name: 'weightedSourceCategories',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WeightedSourceCategory'
          }]
      }, {
        localName: 'UiPlugin',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'extensionPointIdentifier',
            required: true
          }, {
            name: 'isEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'language',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }]
      }, {
        localName: 'Territory2RuleItem',
        propertyInfos: [{
            name: 'field',
            required: true
          }, {
            name: 'operation',
            required: true,
            typeInfo: '.FilterOperation'
          }, {
            name: 'value'
          }]
      }, {
        localName: 'CustomPermission',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'connectedApp'
          }, {
            name: 'description'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'requiredPermission',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomPermissionDependencyRequired'
          }]
      }, {
        localName: 'FlowRecordFilter',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'field',
            required: true
          }, {
            name: 'operator',
            required: true,
            typeInfo: '.FlowRecordFilterOperator'
          }, {
            name: 'value',
            typeInfo: '.FlowElementReferenceOrValue'
          }]
      }, {
        localName: 'ModeratedEntityField',
        propertyInfos: [{
            name: 'entityName',
            required: true
          }, {
            name: 'fieldName'
          }, {
            name: 'keywordList'
          }]
      }, {
        localName: 'SummaryLayout',
        propertyInfos: [{
            name: 'masterLabel',
            required: true
          }, {
            name: 'sizeX',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'sizeY',
            typeInfo: 'Int'
          }, {
            name: 'sizeZ',
            typeInfo: 'Int'
          }, {
            name: 'summaryLayoutItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SummaryLayoutItem'
          }, {
            name: 'summaryLayoutStyle',
            required: true,
            typeInfo: '.SummaryLayoutStyle'
          }]
      }, {
        localName: 'Portal',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'admin'
          }, {
            name: 'defaultLanguage'
          }, {
            name: 'description'
          }, {
            name: 'emailSenderAddress',
            required: true
          }, {
            name: 'emailSenderName',
            required: true
          }, {
            name: 'enableSelfCloseCase',
            typeInfo: 'Boolean'
          }, {
            name: 'footerDocument'
          }, {
            name: 'forgotPassTemplate'
          }, {
            name: 'headerDocument'
          }, {
            name: 'isSelfRegistrationActivated',
            typeInfo: 'Boolean'
          }, {
            name: 'loginHeaderDocument'
          }, {
            name: 'logoDocument'
          }, {
            name: 'logoutUrl'
          }, {
            name: 'newCommentTemplate'
          }, {
            name: 'newPassTemplate'
          }, {
            name: 'newUserTemplate'
          }, {
            name: 'ownerNotifyTemplate'
          }, {
            name: 'selfRegNewUserUrl'
          }, {
            name: 'selfRegUserDefaultProfile'
          }, {
            name: 'selfRegUserDefaultRole',
            typeInfo: '.PortalRoles'
          }, {
            name: 'selfRegUserTemplate'
          }, {
            name: 'showActionConfirmation',
            typeInfo: 'Boolean'
          }, {
            name: 'stylesheetDocument'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.PortalType'
          }]
      }, {
        localName: 'AppMenu',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'appMenuItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.AppMenuItem'
          }]
      }, {
        localName: 'Territory2Settings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'defaultAccountAccessLevel'
          }, {
            name: 'defaultCaseAccessLevel'
          }, {
            name: 'defaultContactAccessLevel'
          }, {
            name: 'defaultOpportunityAccessLevel'
          }, {
            name: 'opportunityFilterSettings',
            typeInfo: '.Territory2SettingsOpportunityFilter'
          }]
      }, {
        localName: 'DeleteResult',
        propertyInfos: [{
            name: 'errors',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Error'
          }, {
            name: 'fullName',
            required: true
          }, {
            name: 'success',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'PermissionSetTabSetting',
        propertyInfos: [{
            name: 'tab',
            required: true
          }, {
            name: 'visibility',
            required: true,
            typeInfo: '.PermissionSetTabVisibility'
          }]
      }, {
        localName: 'ProfilePasswordPolicy',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'lockoutInterval',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'maxLoginAttempts',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'minimumPasswordLength',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'minimumPasswordLifetime',
            typeInfo: 'Boolean'
          }, {
            name: 'obscure',
            typeInfo: 'Boolean'
          }, {
            name: 'passwordComplexity',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'passwordExpiration',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'passwordHistory',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'passwordQuestion',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'profile',
            required: true
          }]
      }, {
        localName: 'IpRange',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'end'
          }, {
            name: 'start'
          }]
      }, {
        localName: 'RelatedContent',
        propertyInfos: [{
            name: 'relatedContentItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RelatedContentItem'
          }]
      }, {
        localName: 'FieldOverride',
        propertyInfos: [{
            name: 'field',
            required: true
          }, {
            name: 'formula'
          }, {
            name: 'literalValue'
          }]
      }, {
        localName: 'ContractSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'autoCalculateEndDate',
            typeInfo: 'Boolean'
          }, {
            name: 'autoExpirationDelay'
          }, {
            name: 'autoExpirationRecipient'
          }, {
            name: 'autoExpireContracts',
            typeInfo: 'Boolean'
          }, {
            name: 'enableContractHistoryTracking',
            typeInfo: 'Boolean'
          }, {
            name: 'notifyOwnersOnContractExpiration',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'GlobalPicklistValue',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'color'
          }, {
            name: '_default',
            required: true,
            elementName: 'default',
            typeInfo: 'Boolean'
          }, {
            name: 'description'
          }, {
            name: 'isActive',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'OrgPreferenceSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'preferences',
            minOccurs: 0,
            collection: true,
            typeInfo: '.OrganizationSettingsDetail'
          }]
      }, {
        localName: 'EmbeddedServiceFieldService',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'appointmentBookingFlowName'
          }, {
            name: 'cancelApptBookingFlowName'
          }, {
            name: 'embeddedServiceConfig',
            required: true
          }, {
            name: 'enabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'fieldServiceConfirmCardImg'
          }, {
            name: 'fieldServiceHomeImg'
          }, {
            name: 'fieldServiceLogoImg'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'modifyApptBookingFlowName'
          }, {
            name: 'shouldShowExistingAppointment',
            typeInfo: 'Boolean'
          }, {
            name: 'shouldShowNewAppointment',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'EventDelivery',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'eventParameters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.EventParameterMap'
          }, {
            name: 'eventSubscription',
            required: true
          }, {
            name: 'referenceData'
          }, {
            name: 'type',
            required: true,
            typeInfo: '.EventDeliveryType'
          }]
      }, {
        localName: 'FieldMapping',
        propertyInfos: [{
            name: 'sObjectType',
            required: true,
            elementName: 'SObjectType'
          }, {
            name: 'developerName',
            required: true
          }, {
            name: 'fieldMappingRows',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldMappingRow'
          }, {
            name: 'masterLabel',
            required: true
          }]
      }, {
        localName: 'CustomLabels',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'labels',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomLabel'
          }]
      }, {
        localName: 'OrchestrationContext',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'events',
            minOccurs: 0,
            collection: true,
            typeInfo: '.OrchestrationContextEvent'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'runtimeType',
            required: true
          }, {
            name: 'salesforceObject'
          }, {
            name: 'salesforceObjectPrimaryKey'
          }]
      }, {
        localName: 'SkillAssignments',
        propertyInfos: [{
            name: 'profiles',
            typeInfo: '.SkillProfileAssignments'
          }, {
            name: 'users',
            typeInfo: '.SkillUserAssignments'
          }]
      }, {
        localName: 'DescribeMetadataObject',
        propertyInfos: [{
            name: 'childXmlNames',
            minOccurs: 0,
            collection: true
          }, {
            name: 'directoryName',
            required: true
          }, {
            name: 'inFolder',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'metaFile',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'suffix'
          }, {
            name: 'xmlName',
            required: true
          }]
      }, {
        localName: 'KnowledgeWorkOrderField',
        propertyInfos: [{
            name: 'name'
          }]
      }, {
        localName: 'CreateMetadata',
        typeName: null,
        propertyInfos: [{
            name: 'metadata',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Metadata'
          }]
      }, {
        localName: 'FlowRecordCreate',
        baseTypeInfo: '.FlowNode',
        propertyInfos: [{
            name: 'assignRecordIdToReference'
          }, {
            name: 'connector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'faultConnector',
            typeInfo: '.FlowConnector'
          }, {
            name: 'inputAssignments',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowInputFieldAssignment'
          }, {
            name: 'inputReference'
          }, {
            name: 'object'
          }]
      }, {
        localName: 'CodeCoverageWarning',
        propertyInfos: [{
            name: 'id',
            required: true
          }, {
            name: 'message',
            required: true
          }, {
            name: 'name',
            required: true
          }, {
            name: 'namespace',
            required: true
          }]
      }, {
        localName: 'DataPipeline',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'apiVersion',
            required: true,
            typeInfo: 'Double'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'scriptType',
            required: true,
            typeInfo: '.DataPipelineType'
          }]
      }, {
        localName: 'ListView',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'booleanFilter'
          }, {
            name: 'columns',
            minOccurs: 0,
            collection: true
          }, {
            name: 'division'
          }, {
            name: 'filterScope',
            required: true,
            typeInfo: '.FilterScope'
          }, {
            name: 'filters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ListViewFilter'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'language',
            typeInfo: '.Language'
          }, {
            name: 'queue'
          }, {
            name: 'sharedTo',
            typeInfo: '.SharedTo'
          }]
      }, {
        localName: 'UpsertResult',
        propertyInfos: [{
            name: 'created',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'errors',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Error'
          }, {
            name: 'fullName',
            required: true
          }, {
            name: 'success',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'FieldMappingField',
        propertyInfos: [{
            name: 'dataServiceField',
            required: true
          }, {
            name: 'dataServiceObjectName',
            required: true
          }, {
            name: 'priority',
            required: true,
            typeInfo: 'Int'
          }]
      }, {
        localName: 'Translations',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'customApplications',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomApplicationTranslation'
          }, {
            name: 'customDataTypeTranslations',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomDataTypeTranslation'
          }, {
            name: 'customLabels',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomLabelTranslation'
          }, {
            name: 'customPageWebLinks',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomPageWebLinkTranslation'
          }, {
            name: 'customTabs',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomTabTranslation'
          }, {
            name: 'flowDefinitions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FlowDefinitionTranslation'
          }, {
            name: 'quickActions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.GlobalQuickActionTranslation'
          }, {
            name: 'reportTypes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportTypeTranslation'
          }, {
            name: 'scontrols',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ScontrolTranslation'
          }]
      }, {
        localName: 'BusinessHoursEntry',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            typeInfo: 'Boolean'
          }, {
            name: '_default',
            required: true,
            elementName: 'default',
            typeInfo: 'Boolean'
          }, {
            name: 'fridayEndTime',
            typeInfo: 'Time'
          }, {
            name: 'fridayStartTime',
            typeInfo: 'Time'
          }, {
            name: 'mondayEndTime',
            typeInfo: 'Time'
          }, {
            name: 'mondayStartTime',
            typeInfo: 'Time'
          }, {
            name: 'name'
          }, {
            name: 'saturdayEndTime',
            typeInfo: 'Time'
          }, {
            name: 'saturdayStartTime',
            typeInfo: 'Time'
          }, {
            name: 'sundayEndTime',
            typeInfo: 'Time'
          }, {
            name: 'sundayStartTime',
            typeInfo: 'Time'
          }, {
            name: 'thursdayEndTime',
            typeInfo: 'Time'
          }, {
            name: 'thursdayStartTime',
            typeInfo: 'Time'
          }, {
            name: 'timeZoneId'
          }, {
            name: 'tuesdayEndTime',
            typeInfo: 'Time'
          }, {
            name: 'tuesdayStartTime',
            typeInfo: 'Time'
          }, {
            name: 'wednesdayEndTime',
            typeInfo: 'Time'
          }, {
            name: 'wednesdayStartTime',
            typeInfo: 'Time'
          }]
      }, {
        localName: 'ReadMetadataResponse',
        typeName: null,
        propertyInfos: [{
            name: 'result',
            required: true,
            typeInfo: '.ReadResult'
          }]
      }, {
        localName: 'ScheduledRecommendation',
        propertyInfos: [{
            name: 'scheduledRecommendationDetails',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ScheduledRecommendationDetail'
          }]
      }, {
        localName: 'KeyboardShortcuts',
        propertyInfos: [{
            name: 'customShortcuts',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomShortcut'
          }, {
            name: 'defaultShortcuts',
            minOccurs: 0,
            collection: true,
            typeInfo: '.DefaultShortcut'
          }]
      }, {
        localName: 'CustomObjectTranslation',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'caseValues',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ObjectNameCaseValue'
          }, {
            name: 'fieldSets',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldSetTranslation'
          }, {
            name: 'fields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.CustomFieldTranslation'
          }, {
            name: 'gender',
            typeInfo: '.Gender'
          }, {
            name: 'layouts',
            minOccurs: 0,
            collection: true,
            typeInfo: '.LayoutTranslation'
          }, {
            name: 'nameFieldLabel'
          }, {
            name: 'quickActions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.QuickActionTranslation'
          }, {
            name: 'recordTypes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RecordTypeTranslation'
          }, {
            name: 'sharingReasons',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SharingReasonTranslation'
          }, {
            name: 'standardFields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.StandardFieldTranslation'
          }, {
            name: 'startsWith',
            typeInfo: '.StartsWith'
          }, {
            name: 'validationRules',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ValidationRuleTranslation'
          }, {
            name: 'webLinks',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WebLinkTranslation'
          }, {
            name: 'workflowTasks',
            minOccurs: 0,
            collection: true,
            typeInfo: '.WorkflowTaskTranslation'
          }]
      }, {
        localName: 'PlatformActionList',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'actionListContext',
            required: true,
            typeInfo: '.PlatformActionListContext'
          }, {
            name: 'platformActionListItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PlatformActionListItem'
          }, {
            name: 'relatedSourceEntity'
          }]
      }, {
        localName: 'FlowActionCallOutputParameter',
        baseTypeInfo: '.FlowBaseElement',
        propertyInfos: [{
            name: 'assignToReference',
            required: true
          }, {
            name: 'name',
            required: true
          }]
      }, {
        localName: 'ReportParam',
        propertyInfos: [{
            name: 'name',
            required: true
          }, {
            name: 'value',
            required: true
          }]
      }, {
        localName: 'CleanRule',
        propertyInfos: [{
            name: 'bulkEnabled',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'bypassTriggers',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'bypassWorkflow',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'description',
            required: true
          }, {
            name: 'developerName',
            required: true
          }, {
            name: 'fieldMappings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.FieldMapping'
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'matchRule',
            required: true
          }, {
            name: 'sourceSobjectType',
            required: true
          }, {
            name: 'status',
            required: true,
            typeInfo: '.CleanRuleStatus'
          }, {
            name: 'targetSobjectType',
            required: true
          }]
      }, {
        localName: 'Report',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'aggregates',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportAggregate'
          }, {
            name: 'block',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Report'
          }, {
            name: 'blockInfo',
            typeInfo: '.ReportBlockInfo'
          }, {
            name: 'buckets',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportBucketField'
          }, {
            name: 'chart',
            typeInfo: '.ReportChart'
          }, {
            name: 'colorRanges',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportColorRange'
          }, {
            name: 'columns',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportColumn'
          }, {
            name: 'crossFilters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportCrossFilter'
          }, {
            name: 'currency',
            typeInfo: '.CurrencyIsoCode'
          }, {
            name: 'dataCategoryFilters',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportDataCategoryFilter'
          }, {
            name: 'description'
          }, {
            name: 'division'
          }, {
            name: 'filter',
            typeInfo: '.ReportFilter'
          }, {
            name: 'folderName'
          }, {
            name: 'format',
            required: true,
            typeInfo: '.ReportFormat'
          }, {
            name: 'groupingsAcross',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportGrouping'
          }, {
            name: 'groupingsDown',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportGrouping'
          }, {
            name: 'historicalSelector',
            typeInfo: '.ReportHistoricalSelector'
          }, {
            name: 'name',
            required: true
          }, {
            name: 'numSubscriptions',
            typeInfo: 'Int'
          }, {
            name: 'params',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportParam'
          }, {
            name: 'reportType',
            required: true
          }, {
            name: 'roleHierarchyFilter'
          }, {
            name: 'rowLimit',
            typeInfo: 'Int'
          }, {
            name: 'scope'
          }, {
            name: 'showCurrentDate',
            typeInfo: 'Boolean'
          }, {
            name: 'showDetails',
            typeInfo: 'Boolean'
          }, {
            name: 'sortColumn'
          }, {
            name: 'sortOrder',
            typeInfo: '.SortOrder'
          }, {
            name: 'territoryHierarchyFilter'
          }, {
            name: 'timeFrameFilter',
            typeInfo: '.ReportTimeFrameFilter'
          }, {
            name: 'userFilter'
          }]
      }, {
        localName: 'OrderSettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'enableNegativeQuantity',
            typeInfo: 'Boolean'
          }, {
            name: 'enableOrders',
            typeInfo: 'Boolean'
          }, {
            name: 'enableReductionOrders',
            typeInfo: 'Boolean'
          }, {
            name: 'enableZeroQuantity',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ReportFolder',
        baseTypeInfo: '.Folder'
      }, {
        localName: 'EmbeddedServiceQuickAction',
        propertyInfos: [{
            name: 'embeddedServiceLiveAgent',
            required: true
          }, {
            name: 'order',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'quickActionDefinition',
            required: true
          }]
      }, {
        localName: 'PermissionSetApplicationVisibility',
        propertyInfos: [{
            name: 'application',
            required: true
          }, {
            name: 'visible',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'Index',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'fields',
            minOccurs: 0,
            collection: true,
            typeInfo: '.IndexField'
          }, {
            name: 'label',
            required: true
          }]
      }, {
        localName: 'Document',
        baseTypeInfo: '.MetadataWithContent',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'internalUseOnly',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'keywords'
          }, {
            name: 'name'
          }, {
            name: '_public',
            required: true,
            elementName: 'public',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ReportBucketFieldSourceValue',
        propertyInfos: [{
            name: 'from'
          }, {
            name: 'sourceValue'
          }, {
            name: 'to'
          }]
      }, {
        localName: 'PackageVersion',
        propertyInfos: [{
            name: 'majorNumber',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'minorNumber',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'namespace',
            required: true
          }]
      }, {
        localName: 'CustomSite',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'allowHomePage',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'allowStandardAnswersPages',
            typeInfo: 'Boolean'
          }, {
            name: 'allowStandardIdeasPages',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'allowStandardLookups',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'allowStandardPortalPages',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'allowStandardSearch',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'analyticsTrackingCode'
          }, {
            name: 'authorizationRequiredPage'
          }, {
            name: 'bandwidthExceededPage'
          }, {
            name: 'browserXssProtection',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'changePasswordPage'
          }, {
            name: 'chatterAnswersForgotPasswordConfirmPage'
          }, {
            name: 'chatterAnswersForgotPasswordPage'
          }, {
            name: 'chatterAnswersHelpPage'
          }, {
            name: 'chatterAnswersLoginPage'
          }, {
            name: 'chatterAnswersRegistrationPage'
          }, {
            name: 'clickjackProtectionLevel',
            required: true,
            typeInfo: '.SiteClickjackProtectionLevel'
          }, {
            name: 'contentSniffingProtection',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'cspUpgradeInsecureRequests',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'customWebAddresses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SiteWebAddress'
          }, {
            name: 'description'
          }, {
            name: 'favoriteIcon'
          }, {
            name: 'fileNotFoundPage'
          }, {
            name: 'forgotPasswordPage'
          }, {
            name: 'genericErrorPage'
          }, {
            name: 'guestProfile'
          }, {
            name: 'inMaintenancePage'
          }, {
            name: 'inactiveIndexPage'
          }, {
            name: 'indexPage',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'myProfilePage'
          }, {
            name: 'portal'
          }, {
            name: 'referrerPolicyOriginWhenCrossOrigin',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'requireHttps',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'requireInsecurePortalAccess',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'robotsTxtPage'
          }, {
            name: 'rootComponent'
          }, {
            name: 'selfRegPage'
          }, {
            name: 'serverIsDown'
          }, {
            name: 'siteAdmin'
          }, {
            name: 'siteRedirectMappings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.SiteRedirectMapping'
          }, {
            name: 'siteTemplate'
          }, {
            name: 'siteType',
            required: true,
            typeInfo: '.SiteType'
          }, {
            name: 'subdomain'
          }, {
            name: 'urlPathPrefix'
          }]
      }, {
        localName: 'PermissionSet',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'applicationVisibilities',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetApplicationVisibility'
          }, {
            name: 'classAccesses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetApexClassAccess'
          }, {
            name: 'customPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetCustomPermissions'
          }, {
            name: 'description'
          }, {
            name: 'externalDataSourceAccesses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetExternalDataSourceAccess'
          }, {
            name: 'fieldPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetFieldPermissions'
          }, {
            name: 'hasActivationRequired',
            typeInfo: 'Boolean'
          }, {
            name: 'label',
            required: true
          }, {
            name: 'license'
          }, {
            name: 'objectPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetObjectPermissions'
          }, {
            name: 'pageAccesses',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetApexPageAccess'
          }, {
            name: 'recordTypeVisibilities',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetRecordTypeVisibility'
          }, {
            name: 'tabSettings',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetTabSetting'
          }, {
            name: 'userPermissions',
            minOccurs: 0,
            collection: true,
            typeInfo: '.PermissionSetUserPermission'
          }]
      }, {
        localName: 'VisualizationPlugin',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'description'
          }, {
            name: 'developerName',
            required: true
          }, {
            name: 'icon',
            required: true
          }, {
            name: 'masterLabel',
            required: true
          }, {
            name: 'visualizationResources',
            minOccurs: 0,
            collection: true,
            typeInfo: '.VisualizationResource'
          }, {
            name: 'visualizationTypes',
            minOccurs: 0,
            collection: true,
            typeInfo: '.VisualizationType'
          }]
      }, {
        localName: 'UpsertMetadata',
        typeName: null,
        propertyInfos: [{
            name: 'metadata',
            minOccurs: 0,
            collection: true,
            typeInfo: '.Metadata'
          }]
      }, {
        localName: 'EmailFolder',
        baseTypeInfo: '.Folder'
      }, {
        localName: 'ProfileSessionSetting',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'externalCommunityUserIdentityVerif',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'forceLogout',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'profile',
            required: true
          }, {
            name: 'requiredSessionLevel',
            typeInfo: '.SessionSecurityLevel'
          }, {
            name: 'sessionPersistence',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'sessionTimeout',
            required: true,
            typeInfo: 'Int'
          }, {
            name: 'sessionTimeoutWarning',
            required: true,
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ObjectMappingField',
        propertyInfos: [{
            name: 'inputField',
            required: true
          }, {
            name: 'outputField',
            required: true
          }]
      }, {
        localName: 'EmailServicesAddress',
        propertyInfos: [{
            name: 'authorizedSenders'
          }, {
            name: 'developerName',
            required: true
          }, {
            name: 'isActive',
            typeInfo: 'Boolean'
          }, {
            name: 'localPart',
            required: true
          }, {
            name: 'runAsUser',
            required: true
          }]
      }, {
        localName: 'ProfileCategoryGroupVisibility',
        propertyInfos: [{
            name: 'dataCategories',
            minOccurs: 0,
            collection: true
          }, {
            name: 'dataCategoryGroup',
            required: true
          }, {
            name: 'visibility',
            required: true,
            typeInfo: '.CategoryGroupVisibility'
          }]
      }, {
        localName: 'TransactionSecurityPolicy',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'action',
            required: true,
            typeInfo: '.TransactionSecurityAction'
          }, {
            name: 'active',
            required: true,
            typeInfo: 'Boolean'
          }, {
            name: 'apexClass'
          }, {
            name: 'description'
          }, {
            name: 'developerName'
          }, {
            name: 'eventName',
            typeInfo: '.TransactionSecurityEventName'
          }, {
            name: 'eventType',
            typeInfo: '.MonitoredEvents'
          }, {
            name: 'executionUser',
            required: true
          }, {
            name: 'flow'
          }, {
            name: 'masterLabel'
          }, {
            name: 'resourceName'
          }, {
            name: 'type',
            typeInfo: '.TxnSecurityPolicyType'
          }]
      }, {
        localName: 'SkillUserAssignments',
        propertyInfos: [{
            name: 'user',
            minOccurs: 0,
            collection: true
          }]
      }, {
        localName: 'OpportunitySettings',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'autoActivateNewReminders',
            typeInfo: 'Boolean'
          }, {
            name: 'enableFindSimilarOpportunities',
            typeInfo: 'Boolean'
          }, {
            name: 'enableOpportunityTeam',
            typeInfo: 'Boolean'
          }, {
            name: 'enableUpdateReminders',
            typeInfo: 'Boolean'
          }, {
            name: 'findSimilarOppFilter',
            typeInfo: '.FindSimilarOppFilter'
          }, {
            name: 'promptToAddProducts',
            typeInfo: 'Boolean'
          }]
      }, {
        localName: 'ReportCrossFilter',
        propertyInfos: [{
            name: 'criteriaItems',
            minOccurs: 0,
            collection: true,
            typeInfo: '.ReportFilterItem'
          }, {
            name: 'operation',
            required: true,
            typeInfo: '.ObjectFilterOperator'
          }, {
            name: 'primaryTableColumn',
            required: true
          }, {
            name: 'relatedTable',
            required: true
          }, {
            name: 'relatedTableJoinColumn',
            required: true
          }]
      }, {
        localName: 'AssignmentRule',
        baseTypeInfo: '.Metadata',
        propertyInfos: [{
            name: 'active',
            typeInfo: 'Boolean'
          }, {
            name: 'ruleEntry',
            minOccurs: 0,
            collection: true,
            typeInfo: '.RuleEntry'
          }]
      }, {
        localName: 'ScheduledRecommendationDetail',
        propertyInfos: [{
            name: 'channel',
            typeInfo: '.RecommendationChannel'
          }, {
            name: 'enabled',
            typeInfo: 'Boolean'
          }, {
            name: 'rank',
            typeInfo: 'Int'
          }, {
            name: 'recommendationAudience'
          }]
      }, {
        type: 'enumInfo',
        localName: 'ComponentInstancePropertyTypeEnum',
        values: ['decorator']
      }, {
        type: 'enumInfo',
        localName: 'SessionTimeout',
        values: ['TwentyFourHours', 'TwelveHours', 'EightHours', 'FourHours', 'TwoHours', 'SixtyMinutes', 'ThirtyMinutes', 'FifteenMinutes']
      }, {
        type: 'enumInfo',
        localName: 'UiBehavior',
        values: ['Edit', 'Required', 'Readonly']
      }, {
        type: 'enumInfo',
        localName: 'SamlIdentityLocationType',
        values: ['SubjectNameId', 'Attribute']
      }, {
        type: 'enumInfo',
        localName: 'ChartAxis',
        values: ['x', 'y', 'y2', 'r']
      }, {
        type: 'enumInfo',
        localName: 'CurrencyIsoCode',
        values: ['ADP', 'AED', 'AFA', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'ATS', 'AUD', 'AWG', 'AZM', 'AZN', 'BAM', 'BBD', 'BDT', 'BEF', 'BGL', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRB', 'BRL', 'BSD', 'BTN', 'BWP', 'BYB', 'BYR', 'BZD', 'CAD', 'CDF', 'CHF', 'CLF', 'CLP', 'CNY', 'COP', 'CRC', 'CSD', 'CUC', 'CUP', 'CVE', 'CYP', 'CZK', 'DEM', 'DJF', 'DKK', 'DOP', 'DZD', 'ECS', 'EEK', 'EGP', 'ERN', 'ESP', 'ETB', 'EUR', 'FIM', 'FJD', 'FKP', 'FRF', 'GBP', 'GEL', 'GHC', 'GHS', 'GIP', 'GMD', 'GNF', 'GRD', 'GTQ', 'GWP', 'GYD', 'HKD', 'HNL', 'HRD', 'HRK', 'HTG', 'HUF', 'IDR', 'IEP', 'ILS', 'INR', 'IQD', 'IRR', 'ISK', 'ITL', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LTL', 'LUF', 'LVL', 'LYD', 'MAD', 'MDL', 'MGA', 'MGF', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MTL', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZM', 'MZN', 'NAD', 'NGN', 'NIO', 'NLG', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PTE', 'PYG', 'QAR', 'RMB', 'ROL', 'RON', 'RSD', 'RUB', 'RUR', 'RWF', 'SAR', 'SBD', 'SCR', 'SDD', 'SDG', 'SEK', 'SGD', 'SHP', 'SIT', 'SKK', 'SLL', 'SOS', 'SRD', 'SRG', 'SSP', 'STD', 'SUR', 'SVC', 'SYP', 'SZL', 'THB', 'TJR', 'TJS', 'TMM', 'TMT', 'TND', 'TOP', 'TPE', 'TRL', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VEB', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'YUM', 'ZAR', 'ZMK', 'ZMW', 'ZWD', 'ZWL']
      }, {
        type: 'enumInfo',
        localName: 'UserDateGranularity',
        values: ['None', 'Day', 'Week', 'Month', 'Quarter', 'Year', 'FiscalQuarter', 'FiscalYear', 'MonthInYear', 'DayInMonth', 'FiscalPeriod', 'FiscalWeek']
      }, {
        type: 'enumInfo',
        localName: 'ReportFormulaNullTreatment',
        values: ['n', 'z']
      }, {
        type: 'enumInfo',
        localName: 'Possessive',
        values: ['None', 'First', 'Second']
      }, {
        type: 'enumInfo',
        localName: 'CommunityThemeLayoutType',
        values: ['Login', 'Home', 'Inner']
      }, {
        type: 'enumInfo',
        localName: 'DupeActionType',
        values: ['Allow', 'Block']
      }, {
        type: 'enumInfo',
        localName: 'RoutingType',
        values: ['Unanimous', 'FirstResponse']
      }, {
        type: 'enumInfo',
        localName: 'CategoryGroupVisibility',
        values: ['ALL', 'NONE', 'CUSTOM']
      }, {
        type: 'enumInfo',
        localName: 'CanvasOptions',
        values: ['HideShare', 'HideHeader', 'PersonalEnabled']
      }, {
        type: 'enumInfo',
        localName: 'FileType',
        values: ['UNKNOWN', 'PDF', 'POWER_POINT', 'POWER_POINT_X', 'POWER_POINT_M', 'POWER_POINT_T', 'WORD', 'WORD_X', 'WORD_M', 'WORD_T', 'PPS', 'PPSX', 'EXCEL', 'EXCEL_X', 'EXCEL_M', 'EXCEL_T', 'GOOGLE_DOCUMENT', 'GOOGLE_PRESENTATION', 'GOOGLE_SPREADSHEET', 'GOOGLE_DRAWING', 'GOOGLE_FORM', 'GOOGLE_SCRIPT', 'LINK', 'SLIDE', 'AAC', 'ACGI', 'AI', 'AVI', 'BMP', 'BOXNOTE', 'CSV', 'EPS', 'EXE', 'FLASH', 'GIF', 'GZIP', 'HTM', 'HTML', 'HTX', 'JPEG', 'JPE', 'PJP', 'PJPEG', 'JFIF', 'JPG', 'JS', 'MHTM', 'MHTML', 'MP3', 'M4A', 'M4V', 'MP4', 'MPEG', 'MPG', 'MOV', 'MSG', 'ODP', 'ODS', 'ODT', 'OGV', 'PNG', 'PSD', 'RTF', 'QUIPDOC', 'QUIPSHEET', 'SHTM', 'SHTML', 'SNOTE', 'STYPI', 'SVG', 'SVGZ', 'TEXT', 'THTML', 'VISIO', 'WMV', 'WRF', 'XML', 'ZIP', 'XZIP', 'WMA', 'XSN', 'TRTF', 'TXML', 'WEBVIEW', 'RFC822', 'ASF', 'DWG', 'JAR', 'XJS', 'OPX', 'XPSD', 'TIF', 'TIFF', 'WAV', 'CSS', 'THUMB720BY480', 'THUMB240BY180', 'THUMB120BY90', 'ALLTHUMBS', 'PAGED_FLASH', 'PACK', 'C', 'CPP', 'WORDT', 'INI', 'JAVA', 'LOG', 'POWER_POINTT', 'SQL', 'XHTML', 'EXCELT']
      }, {
        type: 'enumInfo',
        localName: 'DisplayCurrency',
        values: ['CORPORATE', 'PERSONAL']
      }, {
        type: 'enumInfo',
        localName: 'DeploymentStatus',
        values: ['InDevelopment', 'Deployed']
      }, {
        type: 'enumInfo',
        localName: 'MatchingMethod',
        values: ['Exact', 'FirstName', 'LastName', 'CompanyName', 'Phone', 'City', 'Street', 'Zip', 'Title']
      }, {
        type: 'enumInfo',
        localName: 'LogCategory',
        values: ['Db', 'Workflow', 'Validation', 'Callout', 'Apex_code', 'Apex_profiling', 'Visualforce', 'System', 'Wave', 'All']
      }, {
        type: 'enumInfo',
        localName: 'VisualizationResourceType',
        values: ['js', 'css']
      }, {
        type: 'enumInfo',
        localName: 'EventDeliveryType',
        values: ['StartFlow', 'ResumeFlow']
      }, {
        type: 'enumInfo',
        localName: 'CleanRuleStatus',
        values: ['Inactive', 'Active']
      }, {
        type: 'enumInfo',
        localName: 'PortalType',
        values: ['CustomerSuccess', 'Partner', 'Network']
      }, {
        type: 'enumInfo',
        localName: 'EmbeddedServiceFontSize',
        values: ['Small', 'Medium', 'Large']
      }, {
        type: 'enumInfo',
        localName: 'ReportTypeCategory',
        values: ['accounts', 'opportunities', 'forecasts', 'cases', 'leads', 'campaigns', 'activities', 'busop', 'products', 'admin', 'territory', 'other', 'content', 'usage_entitlement', 'wdc', 'calibration', 'territory2']
      }, {
        type: 'enumInfo',
        localName: 'AsyncRequestState',
        values: ['Queued', 'InProgress', 'Completed', 'Error']
      }, {
        type: 'enumInfo',
        localName: 'ApexCodeUnitStatus',
        values: ['Inactive', 'Active', 'Deleted']
      }, {
        type: 'enumInfo',
        localName: 'DataCategoryFilterOperation',
        values: ['above', 'below', 'at', 'aboveOrBelow']
      }, {
        type: 'enumInfo',
        localName: 'ActionEmailRecipientTypes',
        values: ['group', 'role', 'user', 'opportunityTeam', 'accountTeam', 'roleSubordinates', 'owner', 'creator', 'partnerUser', 'accountOwner', 'customerPortalUser', 'portalRole', 'portalRoleSubordinates', 'contactLookup', 'userLookup', 'roleSubordinatesInternal', 'email', 'caseTeam', 'campaignMemberDerivedOwner']
      }, {
        type: 'enumInfo',
        localName: 'SensitiveDataActionType',
        values: ['Remove', 'Replace']
      }, {
        type: 'enumInfo',
        localName: 'FormFactor',
        values: ['Small', 'Medium', 'Large']
      }, {
        type: 'enumInfo',
        localName: 'DataPipelineType',
        values: ['Pig']
      }, {
        type: 'enumInfo',
        localName: 'FlexiPageType',
        values: ['AppPage', 'ObjectPage', 'RecordPage', 'HomePage', 'MailAppAppPage', 'CommAppPage', 'CommForgotPasswordPage', 'CommLoginPage', 'CommObjectPage', 'CommQuickActionCreatePage', 'CommRecordPage', 'CommRelatedListPage', 'CommSearchResultPage', 'CommGlobalSearchResultPage', 'CommSelfRegisterPage', 'CommThemeLayoutPage', 'UtilityBar', 'RecordPreview']
      }, {
        type: 'enumInfo',
        localName: 'FlexiPageRegionMode',
        values: ['Append', 'Prepend', 'Replace']
      }, {
        type: 'enumInfo',
        localName: 'BlankValueBehavior',
        values: ['MatchBlanks', 'NullNotAllowed']
      }, {
        type: 'enumInfo',
        localName: 'AssignToLookupValueType',
        values: ['User', 'Queue']
      }, {
        type: 'enumInfo',
        localName: 'FeedLayoutFilterType',
        values: ['AllUpdates', 'FeedItemType', 'Custom']
      }, {
        type: 'enumInfo',
        localName: 'InvocableActionType',
        values: ['apex', 'chatterPost', 'contentWorkspaceEnableFolders', 'emailAlert', 'emailSimple', 'flow', 'metricRefresh', 'quickAction', 'submit', 'thanks', 'thunderResponse', 'createServiceReport', 'deployOrchestration', 'createResponseEventAction', 'generateWorkOrders', 'deactivateSessionPermSet', 'activateSessionPermSet', 'aggregateValue', 'orchestrationTimer', 'orchestrationDebugLog', 'choosePricebook', 'localAction']
      }, {
        type: 'enumInfo',
        localName: 'KnowledgeLanguageLookupValueType',
        values: ['User', 'Queue']
      }, {
        type: 'enumInfo',
        localName: 'PortalRoles',
        values: ['Executive', 'Manager', 'Worker', 'PersonAccount']
      }, {
        type: 'enumInfo',
        localName: 'PageComponentType',
        values: ['links', 'htmlArea', 'imageOrNote', 'visualforcePage']
      }, {
        type: 'enumInfo',
        localName: 'LetterheadVerticalAlignment',
        values: ['None', 'Top', 'Middle', 'Bottom']
      }, {
        type: 'enumInfo',
        localName: 'LiveChatButtonRoutingType',
        values: ['Choice', 'LeastActive', 'MostAvailable']
      }, {
        type: 'enumInfo',
        localName: 'WebLinkWindowType',
        values: ['newWindow', 'sidebar', 'noSidebar', 'replace', 'onClickJavaScript']
      }, {
        type: 'enumInfo',
        localName: 'ActionLinkExecutionsAllowed',
        values: ['Once', 'OncePerUser', 'Unlimited']
      }, {
        type: 'enumInfo',
        localName: 'CanvasLocationOptions',
        values: ['None', 'Chatter', 'UserProfile', 'Visualforce', 'Aura', 'Publisher', 'ChatterFeed', 'ServiceDesk', 'OpenCTI', 'AppLauncher', 'MobileNav', 'PageLayout']
      }, {
        type: 'enumInfo',
        localName: 'AudienceCriteriaType',
        values: ['CustomList', 'MaxDaysInCommunity']
      }, {
        type: 'enumInfo',
        localName: 'CaseSubjectParticleType',
        values: ['ProvidedString', 'Source', 'MessageType', 'SocialHandle', 'SocialNetwork', 'Sentiment', 'RealName', 'Content', 'PipeSeparator', 'ColonSeparator', 'HyphenSeparator']
      }, {
        type: 'enumInfo',
        localName: 'PlatformActionGroupCategory',
        values: ['Primary', 'Overflow']
      }, {
        type: 'enumInfo',
        localName: 'EmailServicesErrorAction',
        values: ['UseSystemDefault', 'Bounce', 'Discard', 'Requeue']
      }, {
        type: 'enumInfo',
        localName: 'MatchingRuleStatus',
        values: ['Inactive', 'DeactivationFailed', 'Activating', 'Deactivating', 'Active', 'ActivationFailed']
      }, {
        type: 'enumInfo',
        localName: 'ContentAssetAccess',
        values: ['VIEWER', 'COLLABORATOR', 'INFERRED']
      }, {
        type: 'enumInfo',
        localName: 'TabVisibility',
        values: ['Hidden', 'DefaultOff', 'DefaultOn']
      }, {
        type: 'enumInfo',
        localName: 'SamlInitiationMethod',
        values: ['None', 'IdpInitiated', 'SpInitiated']
      }, {
        type: 'enumInfo',
        localName: 'DeleteConstraint',
        values: ['Cascade', 'Restrict', 'SetNull']
      }, {
        type: 'enumInfo',
        localName: 'PageComponentWidth',
        values: ['narrow', 'wide']
      }, {
        type: 'enumInfo',
        localName: 'NetworkUserType',
        values: ['Internal', 'Customer', 'Partner']
      }, {
        type: 'enumInfo',
        localName: 'StepRejectBehaviorType',
        values: ['RejectRequest', 'BackToPrevious']
      }, {
        type: 'enumInfo',
        localName: 'EmailTemplateUiType',
        values: ['Aloha', 'SFX', 'SFX_Sample']
      }, {
        type: 'enumInfo',
        localName: 'LiveChatButtonType',
        values: ['Standard', 'Invite']
      }, {
        type: 'enumInfo',
        localName: 'LayoutSectionStyle',
        values: ['TwoColumnsTopToBottom', 'TwoColumnsLeftToRight', 'OneColumn', 'CustomLinks']
      }, {
        type: 'enumInfo',
        localName: 'PermissionSetTabVisibility',
        values: ['None', 'Available', 'Visible']
      }, {
        type: 'enumInfo',
        localName: 'KnowledgeWorkflowAction',
        values: ['PublishAsNew', 'Publish']
      }, {
        type: 'enumInfo',
        localName: 'WorkflowTimeUnits',
        values: ['Hours', 'Days']
      }, {
        type: 'enumInfo',
        localName: 'SamlEncryptionType',
        values: ['AES_128', 'AES_256', 'Triple_Des']
      }, {
        type: 'enumInfo',
        localName: 'QuestionRestriction',
        values: ['None', 'DoesNotContainPassword']
      }, {
        type: 'enumInfo',
        localName: 'LogType',
        values: ['None', 'Debugonly', 'Db', 'Profiling', 'Callout', 'Detail']
      }, {
        type: 'enumInfo',
        localName: 'ConnectedAppOauthAccessScope',
        values: ['Basic', 'Api', 'Web', 'Full', 'Chatter', 'CustomApplications', 'RefreshToken', 'OpenID', 'Profile', 'Email', 'Address', 'Phone', 'OfflineAccess', 'CustomPermissions', 'Wave', 'Eclair']
      }, {
        type: 'enumInfo',
        localName: 'DashboardComponentFilter',
        values: ['RowLabelAscending', 'RowLabelDescending', 'RowValueAscending', 'RowValueDescending']
      }, {
        type: 'enumInfo',
        localName: 'Channel',
        values: ['AllChannels', 'App', 'Pkb', 'Csp', 'Prm']
      }, {
        type: 'enumInfo',
        localName: 'RegionFlagStatus',
        values: ['disabled', 'enabled']
      }, {
        type: 'enumInfo',
        localName: 'FeedItemType',
        values: ['TrackedChange', 'UserStatus', 'TextPost', 'AdvancedTextPost', 'LinkPost', 'ContentPost', 'PollPost', 'RypplePost', 'ProfileSkillPost', 'DashboardComponentSnapshot', 'ApprovalPost', 'CaseCommentPost', 'ReplyPost', 'EmailMessageEvent', 'CallLogPost', 'ChangeStatusPost', 'AttachArticleEvent', 'MilestoneEvent', 'ActivityEvent', 'ChatTranscriptPost', 'CollaborationGroupCreated', 'CollaborationGroupUnarchived', 'SocialPost', 'QuestionPost', 'FacebookPost', 'BasicTemplateFeedItem', 'CreateRecordEvent', 'CanvasPost', 'AnnouncementPost']
      }, {
        type: 'enumInfo',
        localName: 'ExternalDataSourceType',
        values: ['Datacloud', 'Datajourney', 'OpenSearch', 'Identity', 'outgoingemail', 'recommendation', 'SfdcOrg', 'OData', 'OData4', 'SimpleURL', 'Wrapper']
      }, {
        type: 'enumInfo',
        localName: 'KnowledgeCaseEditor',
        values: ['simple', 'standard']
      }, {
        type: 'enumInfo',
        localName: 'ReportChartComponentSize',
        values: ['SMALL', 'MEDIUM', 'LARGE']
      }, {
        type: 'enumInfo',
        localName: 'StepCriteriaNotMetType',
        values: ['ApproveRecord', 'RejectRecord', 'GotoNextStep']
      }, {
        type: 'enumInfo',
        localName: 'FeedLayoutComponentType',
        values: ['HelpAndToolLinks', 'CustomButtons', 'Following', 'Followers', 'CustomLinks', 'Milestones', 'Topics', 'CaseUnifiedFiles', 'Visualforce']
      }, {
        type: 'enumInfo',
        localName: 'SetupObjectVisibility',
        values: ['Protected', 'Public']
      }, {
        type: 'enumInfo',
        localName: 'ProcessSubmitterType',
        values: ['group', 'role', 'user', 'roleSubordinates', 'roleSubordinatesInternal', 'owner', 'creator', 'partnerUser', 'customerPortalUser', 'portalRole', 'portalRoleSubordinates', 'allInternalUsers']
      }, {
        type: 'enumInfo',
        localName: 'RecommendationChannel',
        values: ['DefaultChannel', 'CustomChannel1', 'CustomChannel2', 'CustomChannel3', 'CustomChannel4', 'CustomChannel5']
      }, {
        type: 'enumInfo',
        localName: 'ChartRangeType',
        values: ['Auto', 'Manual']
      }, {
        type: 'enumInfo',
        localName: 'FlowProcessType',
        values: ['AutoLaunchedFlow', 'Flow', 'Workflow', 'CustomEvent', 'InvocableProcess', 'LoginFlow', 'ActionPlan', 'JourneyBuilderIntegration', 'UserProvisioningFlow', 'Survey', 'FieldServiceMobile', 'OrchestrationFlow', 'FieldServiceWeb', 'TransactionSecurityFlow']
      }, {
        type: 'enumInfo',
        localName: 'LockoutInterval',
        values: ['FifteenMinutes', 'ThirtyMinutes', 'SixtyMinutes', 'Forever']
      }, {
        type: 'enumInfo',
        localName: 'FeedItemDisplayFormat',
        values: ['Default', 'HideBlankLines']
      }, {
        type: 'enumInfo',
        localName: 'RecordEditabilityType',
        values: ['AdminOnly', 'AdminOrCurrentApprover']
      }, {
        type: 'enumInfo',
        localName: 'CommunityTemplateCategory',
        values: ['IT', 'Marketing', 'Sales', 'Service']
      }, {
        type: 'enumInfo',
        localName: 'ChartColorPalettes',
        values: ['Default', 'gray', 'colorSafe', 'unity', 'justice', 'nightfall', 'sunrise', 'bluegrass', 'tropic', 'heat', 'dusk', 'pond', 'watermelon', 'fire', 'water', 'earth', 'accessible']
      }, {
        type: 'enumInfo',
        localName: 'TreatBlanksAs',
        values: ['BlankAsBlank', 'BlankAsZero']
      }, {
        type: 'enumInfo',
        localName: 'FilterOperation',
        values: ['equals', 'notEqual', 'lessThan', 'greaterThan', 'lessOrEqual', 'greaterOrEqual', 'contains', 'notContain', 'startsWith', 'includes', 'excludes', 'within']
      }, {
        type: 'enumInfo',
        localName: 'SupervisorAgentStatusFilter',
        values: ['Online', 'Away', 'Offline']
      }, {
        type: 'enumInfo',
        localName: 'WorkflowActionType',
        values: ['FieldUpdate', 'KnowledgePublish', 'Task', 'Alert', 'Send', 'OutboundMessage', 'FlowAction']
      }, {
        type: 'enumInfo',
        localName: 'ChartBackgroundDirection',
        values: ['TopToBottom', 'LeftToRight', 'Diagonal']
      }, {
        type: 'enumInfo',
        localName: 'TransactionSecurityEventName',
        values: ['ReportEvent', 'ApiEvent', 'AdminSetupEvent', 'LoginEvent']
      }, {
        type: 'enumInfo',
        localName: 'ChartPosition',
        values: ['CHART_TOP', 'CHART_BOTTOM']
      }, {
        type: 'enumInfo',
        localName: 'ActionEmailSenderType',
        values: ['CurrentUser', 'OrgWideEmailAddress', 'DefaultWorkflowUser']
      }, {
        type: 'enumInfo',
        localName: 'QuickActionLabel',
        values: ['LogACall', 'LogANote', 'New', 'NewRecordType', 'Update', 'NewChild', 'NewChildRecordType', 'CreateNew', 'CreateNewRecordType', 'SendEmail', 'QuickRecordType', 'Quick', 'EditDescription', 'Defer', 'ChangeDueDate', 'ChangePriority', 'ChangeStatus', 'SocialPost', 'Escalate', 'EscalateToRecord', 'OfferFeedback', 'RequestFeedback', 'AddRecord', 'AddMember', 'Reply', 'ReplyAll', 'Forward']
      }, {
        type: 'enumInfo',
        localName: 'FlowAssignmentOperator',
        values: ['Assign', 'Add', 'Subtract', 'AddItem']
      }, {
        type: 'enumInfo',
        localName: 'SessionSecurityLevel',
        values: ['LOW', 'STANDARD', 'HIGH_ASSURANCE']
      }, {
        type: 'enumInfo',
        localName: 'SiteType',
        values: ['Siteforce', 'Visualforce', 'ChatterNetwork', 'ChatterNetworkPicasso', 'User']
      }, {
        type: 'enumInfo',
        localName: 'MaxLoginAttempts',
        values: ['ThreeAttempts', 'FiveAttempts', 'TenAttempts', 'NoLimit']
      }, {
        type: 'enumInfo',
        localName: 'CustomSettingsType',
        values: ['List', 'Hierarchy']
      }, {
        type: 'enumInfo',
        localName: 'LiveChatButtonInviteEndPosition',
        values: ['TopLeft', 'Top', 'TopRight', 'Left', 'Center', 'Right', 'BottomLeft', 'Bottom', 'BottomRight']
      }, {
        type: 'enumInfo',
        localName: 'FilterScope',
        values: ['Everything', 'Mine', 'Queue', 'Delegated', 'MyTerritory', 'MyTeamTerritory', 'Team', 'AssignedToMe']
      }, {
        type: 'enumInfo',
        localName: 'AuthProviderType',
        values: ['Facebook', 'Janrain', 'Salesforce', 'OpenIdConnect', 'MicrosoftACS', 'LinkedIn', 'Twitter', 'Google', 'GitHub', 'Custom']
      }, {
        type: 'enumInfo',
        localName: 'LiveChatButtonInviteStartPosition',
        values: ['TopLeft', 'TopLeftTop', 'Top', 'TopRightTop', 'TopRight', 'TopRightRight', 'Right', 'BottomRightRight', 'BottomRight', 'BottomRightBottom', 'Bottom', 'BottomLeftBottom', 'BottomLeft', 'BottomLeftLeft', 'Left', 'TopLeftLeft']
      }, {
        type: 'enumInfo',
        localName: 'SamlIdentityType',
        values: ['Username', 'FederationId', 'UserId']
      }, {
        type: 'enumInfo',
        localName: 'EmailServicesAttOptions',
        values: ['None', 'TextOnly', 'BinaryOnly', 'All', 'NoContent']
      }, {
        type: 'enumInfo',
        localName: 'FieldUpdateOperation',
        values: ['Formula', 'Literal', 'Null', 'NextValue', 'PreviousValue', 'LookupValue']
      }, {
        type: 'enumInfo',
        localName: 'FlexiPageRegionType',
        values: ['Region', 'Facet']
      }, {
        type: 'enumInfo',
        localName: 'DeviceType',
        values: ['phone', 'tablet', 'minitablet']
      }, {
        type: 'enumInfo',
        localName: 'TestLevel',
        values: ['NoTestRun', 'RunSpecifiedTests', 'RunLocalTests', 'RunAllTestsInOrg']
      }, {
        type: 'enumInfo',
        localName: 'ReportSortType',
        values: ['Column', 'Aggregate', 'CustomSummaryFormula']
      }, {
        type: 'enumInfo',
        localName: 'SamlType',
        values: ['SAML1_1', 'SAML2_0']
      }, {
        type: 'enumInfo',
        localName: 'DeployStatus',
        values: ['Pending', 'InProgress', 'Succeeded', 'SucceededPartial', 'Failed', 'Canceling', 'Canceled']
      }, {
        type: 'enumInfo',
        localName: 'CaseSubjectOption',
        values: ['SocialPostSource', 'SocialPostContent', 'BuildCustom']
      }, {
        type: 'enumInfo',
        localName: 'LiveChatButtonPresentation',
        values: ['Slide', 'Fade', 'Appear', 'Custom']
      }, {
        type: 'enumInfo',
        localName: 'EscalationStartTimeType',
        values: ['CaseCreation', 'CaseLastModified']
      }, {
        type: 'enumInfo',
        localName: 'FlowScreenFieldType',
        values: ['DisplayText', 'InputField', 'LargeTextArea', 'PasswordField', 'RadioButtons', 'DropdownBox', 'MultiSelectCheckboxes', 'MultiSelectPicklist', 'ComponentInstance']
      }, {
        type: 'enumInfo',
        localName: 'EmailTemplateType',
        values: ['text', 'html', 'custom', 'visualforce']
      }, {
        type: 'enumInfo',
        localName: 'ReportSummaryType',
        values: ['Sum', 'Average', 'Maximum', 'Minimum', 'None']
      }, {
        type: 'enumInfo',
        localName: 'MilestoneTimeUnits',
        values: ['Minutes', 'Hours', 'Days']
      }, {
        type: 'enumInfo',
        localName: 'FeedItemVisibility',
        values: ['AllUsers', 'InternalUsers']
      }, {
        type: 'enumInfo',
        localName: 'FolderShareAccessLevel',
        values: ['View', 'EditAllContents', 'Manage']
      }, {
        type: 'enumInfo',
        localName: 'SamlSpSLOBinding',
        values: ['RedirectBinding', 'PostBinding']
      }, {
        type: 'enumInfo',
        localName: 'RateLimitTimePeriod',
        values: ['Short', 'Medium']
      }, {
        type: 'enumInfo',
        localName: 'FlowRecordFilterOperator',
        values: ['EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'StartsWith', 'EndsWith', 'Contains', 'IsNull']
      }, {
        type: 'enumInfo',
        localName: 'AuraBundleType',
        values: ['Application', 'Component', 'Event', 'Interface', 'Tokens']
      }, {
        type: 'enumInfo',
        localName: 'TxnSecurityPolicyType',
        values: ['CustomApexPolicy', 'CustomConditionBuilderPolicy']
      }, {
        type: 'enumInfo',
        localName: 'SamlNameIdFormatType',
        values: ['Unspecified', 'EmailAddress', 'Persistent', 'Transient']
      }, {
        type: 'enumInfo',
        localName: 'SControlContentSource',
        values: ['HTML', 'URL', 'Snippet']
      }, {
        type: 'enumInfo',
        localName: 'CommunityTemplateBundleInfoType',
        values: ['Highlight', 'PreviewImage']
      }, {
        type: 'enumInfo',
        localName: 'ObjectFilterOperator',
        values: ['with', 'without']
      }, {
        type: 'enumInfo',
        localName: 'PlatformActionListContext',
        values: ['ListView', 'RelatedList', 'ListViewRecord', 'RelatedListRecord', 'Record', 'FeedElement', 'Chatter', 'Global', 'Flexipage', 'MruList', 'MruRow', 'RecordEdit', 'Photo', 'BannerPhoto', 'ObjectHomeChart', 'ListViewDefinition', 'Dockable', 'Lookup', 'Assistant']
      }, {
        type: 'enumInfo',
        localName: 'SendAction',
        values: ['Send']
      }, {
        type: 'enumInfo',
        localName: 'WorkflowTriggerTypes',
        values: ['onCreateOnly', 'onCreateOrTriggeringUpdate', 'onAllChanges', 'OnRecursiveUpdate']
      }, {
        type: 'enumInfo',
        localName: 'DevicePlatformType',
        values: ['ios', 'android']
      }, {
        type: 'enumInfo',
        localName: 'SiteClickjackProtectionLevel',
        values: ['AllowAllFraming', 'SameOriginOnly', 'NoFraming']
      }, {
        type: 'enumInfo',
        localName: 'ReportFormat',
        values: ['MultiBlock', 'Matrix', 'Summary', 'Tabular']
      }, {
        type: 'enumInfo',
        localName: 'ActionLinkType',
        values: ['API', 'APIAsync', 'Download', 'UI']
      }, {
        type: 'enumInfo',
        localName: 'ContentAssetFormat',
        values: ['Original', 'ZippedVersions']
      }, {
        type: 'enumInfo',
        localName: 'AuthenticationProtocol',
        values: ['NoAuthentication', 'Oauth', 'Password']
      }, {
        type: 'enumInfo',
        localName: 'FlowComparisonOperator',
        values: ['EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'StartsWith', 'EndsWith', 'Contains', 'IsNull', 'WasSet', 'WasSelected', 'WasVisited']
      }, {
        type: 'enumInfo',
        localName: 'SharingModel',
        values: ['Private', 'Read', 'ReadSelect', 'ReadWrite', 'ReadWriteTransfer', 'FullAccess', 'ControlledByParent']
      }, {
        type: 'enumInfo',
        localName: 'EmailTemplateStyle',
        values: ['none', 'freeForm', 'formalLetter', 'promotionRight', 'promotionLeft', 'newsletter', 'products']
      }, {
        type: 'enumInfo',
        localName: 'DashboardFilterOperation',
        values: ['equals', 'notEqual', 'lessThan', 'greaterThan', 'lessOrEqual', 'greaterOrEqual', 'contains', 'notContain', 'startsWith', 'includes', 'excludes', 'between']
      }, {
        type: 'enumInfo',
        localName: 'ForecastingDateType',
        values: ['OpportunityCloseDate', 'ProductDate', 'ScheduleDate']
      }, {
        type: 'enumInfo',
        localName: 'FlowDataType',
        values: ['Currency', 'Date', 'Number', 'String', 'Boolean', 'SObject', 'DateTime', 'Picklist', 'Multipicklist']
      }, {
        type: 'enumInfo',
        localName: 'QuickActionType',
        values: ['Create', 'VisualforcePage', 'Post', 'SendEmail', 'LogACall', 'SocialPost', 'Canvas', 'Update', 'LightningComponent', 'Flow']
      }, {
        type: 'enumInfo',
        localName: 'StaticResourceCacheControl',
        values: ['Private', 'Public']
      }, {
        type: 'enumInfo',
        localName: 'ForecastCategories',
        values: ['Omitted', 'Pipeline', 'BestCase', 'Forecast', 'Closed']
      }, {
        type: 'enumInfo',
        localName: 'SummaryLayoutStyle',
        values: ['Default', 'QuoteTemplate', 'DefaultQuoteTemplate', 'ServiceReportTemplate', 'ChildServiceReportTemplateStyle', 'DefaultServiceReportTemplate', 'CaseInteraction', 'QuickActionLayoutLeftRight', 'QuickActionLayoutTopDown', 'PathAssistant']
      }, {
        type: 'enumInfo',
        localName: 'FolderAccessTypes',
        values: ['Shared', 'Public', 'Hidden', 'PublicInternal']
      }, {
        type: 'enumInfo',
        localName: 'LogCategoryLevel',
        values: ['None', 'Finest', 'Finer', 'Fine', 'Debug', 'Info', 'Warn', 'Error']
      }, {
        type: 'enumInfo',
        localName: 'SiteRedirect',
        values: ['Permanent', 'Temporary']
      }, {
        type: 'enumInfo',
        localName: 'WebLinkAvailability',
        values: ['online', 'offline']
      }, {
        type: 'enumInfo',
        localName: 'ReportBucketFieldType',
        values: ['text', 'number', 'picklist']
      }, {
        type: 'enumInfo',
        localName: 'FieldType',
        values: ['AutoNumber', 'Lookup', 'MasterDetail', 'Checkbox', 'Currency', 'Date', 'DateTime', 'Email', 'Number', 'Percent', 'Phone', 'Picklist', 'MultiselectPicklist', 'Text', 'TextArea', 'LongTextArea', 'Html', 'Url', 'EncryptedText', 'Summary', 'Hierarchy', 'File', 'MetadataRelationship', 'Location', 'ExternalLookup', 'IndirectLookup', 'CustomDataType', 'Time']
      }, {
        type: 'enumInfo',
        localName: 'ChatterExtensionType',
        values: ['Lightning']
      }, {
        type: 'enumInfo',
        localName: 'Language',
        values: ['en_US', 'de', 'es', 'fr', 'it', 'ja', 'sv', 'ko', 'zh_TW', 'zh_CN', 'pt_BR', 'nl_NL', 'da', 'th', 'fi', 'ru', 'es_MX', 'no', 'hu', 'pl', 'cs', 'tr', 'in', 'ro', 'vi', 'uk', 'iw', 'el', 'bg', 'en_GB', 'ar', 'sk', 'pt_PT', 'hr', 'sl', 'fr_CA', 'ka', 'sr', 'sh', 'en_AU', 'en_MY', 'en_IN', 'en_PH', 'en_CA', 'ro_MD', 'bs', 'mk', 'lv', 'lt', 'et', 'sq', 'sh_ME', 'mt', 'ga', 'eu', 'cy', 'is', 'ms', 'tl', 'lb', 'rm', 'hy', 'hi', 'ur', 'bn', 'de_AT', 'de_CH', 'ta', 'ar_DZ', 'ar_BH', 'ar_EG', 'ar_IQ', 'ar_JO', 'ar_KW', 'ar_LB', 'ar_LY', 'ar_MA', 'ar_OM', 'ar_QA', 'ar_SA', 'ar_SD', 'ar_SY', 'ar_TN', 'ar_AE', 'ar_YE', 'zh_SG', 'zh_HK', 'en_HK', 'en_IE', 'en_SG', 'en_ZA', 'fr_BE', 'fr_LU', 'fr_CH', 'de_BE', 'de_LU', 'it_CH', 'nl_BE', 'es_AR', 'es_BO', 'es_CL', 'es_CO', 'es_CR', 'es_DO', 'es_EC', 'es_SV', 'es_GT', 'es_HN', 'es_NI', 'es_PA', 'es_PY', 'es_PE', 'es_PR', 'es_US', 'es_UY', 'es_VE', 'ca', 'eo', 'iw_EO']
      }, {
        type: 'enumInfo',
        localName: 'ActionLinkHttpMethod',
        values: ['HttpDelete', 'HttpHead', 'HttpGet', 'HttpPatch', 'HttpPost', 'HttpPut']
      }, {
        type: 'enumInfo',
        localName: 'CommunityBaseTemplate',
        values: ['c']
      }, {
        type: 'enumInfo',
        localName: 'PublicFolderAccess',
        values: ['ReadOnly', 'ReadWrite']
      }, {
        type: 'enumInfo',
        localName: 'PlatformCacheType',
        values: ['Session', 'Organization']
      }, {
        type: 'enumInfo',
        localName: 'EmailToCaseRoutingAddressType',
        values: ['EmailToCase', 'Outlook']
      }, {
        type: 'enumInfo',
        localName: 'Complexity',
        values: ['NoRestriction', 'AlphaNumeric', 'SpecialCharacters', 'UpperLowerCaseNumeric', 'UpperLowerCaseNumericSpecialCharacters']
      }, {
        type: 'enumInfo',
        localName: 'ReportJobSourceTypes',
        values: ['tabular', 'summary', 'snapshot']
      }, {
        type: 'enumInfo',
        localName: 'ReportAggregateDatatype',
        values: ['currency', 'percent', 'number']
      }, {
        type: 'enumInfo',
        localName: 'PeriodTypes',
        values: ['Month', 'Quarter', 'Week', 'Year']
      }, {
        type: 'enumInfo',
        localName: 'DashboardComponentType',
        values: ['Bar', 'BarGrouped', 'BarStacked', 'BarStacked100', 'Column', 'ColumnGrouped', 'ColumnStacked', 'ColumnStacked100', 'Line', 'LineGrouped', 'Pie', 'Table', 'Metric', 'Gauge', 'LineCumulative', 'LineGroupedCumulative', 'Scontrol', 'VisualforcePage', 'Donut', 'Funnel', 'ColumnLine', 'ColumnLineGrouped', 'ColumnLineStacked', 'ColumnLineStacked100', 'Scatter', 'ScatterGrouped', 'FlexTable']
      }, {
        type: 'enumInfo',
        localName: 'WebLinkType',
        values: ['url', 'sControl', 'javascript', 'page', 'flow']
      }, {
        type: 'enumInfo',
        localName: 'InsightTrendType',
        values: ['Positive', 'Negative', 'Informational', 'Suggestion']
      }, {
        type: 'enumInfo',
        localName: 'FeedLayoutFilterPosition',
        values: ['CenterDropDown', 'LeftFixed', 'LeftFloat']
      }, {
        type: 'enumInfo',
        localName: 'InsightParentType',
        values: ['Opportunity', 'Account']
      }, {
        type: 'enumInfo',
        localName: 'EncryptedFieldMaskChar',
        values: ['asterisk', 'X']
      }, {
        type: 'enumInfo',
        localName: 'ChartTheme',
        values: ['light', 'dark']
      }, {
        type: 'enumInfo',
        localName: 'NetworkPageOverrideSetting',
        values: ['Designer', 'VisualForce', 'Standard']
      }, {
        type: 'enumInfo',
        localName: 'DashboardComponentSize',
        values: ['Narrow', 'Medium', 'Wide']
      }, {
        type: 'enumInfo',
        localName: 'FileDownloadBehavior',
        values: ['DOWNLOAD', 'EXECUTE_IN_BROWSER', 'HYBRID']
      }, {
        type: 'enumInfo',
        localName: 'RetrieveStatus',
        values: ['Pending', 'InProgress', 'Succeeded', 'Failed']
      }, {
        type: 'enumInfo',
        localName: 'ActionTaskAssignedToTypes',
        values: ['user', 'role', 'opportunityTeam', 'accountTeam', 'owner', 'accountOwner', 'creator', 'accountCreator', 'partnerUser', 'portalRole']
      }, {
        type: 'enumInfo',
        localName: 'EmbeddedServiceScenario',
        values: ['Sales', 'Service', 'Basic']
      }, {
        type: 'enumInfo',
        localName: 'Encoding',
        values: ['UTF-8', 'ISO-8859-1', 'Shift_JIS', 'ISO-2022-JP', 'EUC-JP', 'ks_c_5601-1987', 'Big5', 'GB2312', 'Big5-HKSCS', 'x-SJIS_0213']
      }, {
        type: 'enumInfo',
        localName: 'ReportAggrType',
        values: ['Sum', 'Average', 'Maximum', 'Minimum', 'RowCount']
      }, {
        type: 'enumInfo',
        localName: 'Template',
        values: ['Page', 'Tab', 'Toc']
      }, {
        type: 'enumInfo',
        localName: 'FolderSharedToType',
        values: ['Group', 'Role', 'RoleAndSubordinates', 'RoleAndSubordinatesInternal', 'Manager', 'ManagerAndSubordinatesInternal', 'Organization', 'Territory', 'TerritoryAndSubordinates', 'AllPrmUsers', 'User', 'PartnerUser', 'AllCspUsers', 'CustomerPortalUser', 'PortalRole', 'PortalRoleAndSubordinates', 'ChannelProgramGroup']
      }, {
        type: 'enumInfo',
        localName: 'ChartUnits',
        values: ['Auto', 'Integer', 'Hundreds', 'Thousands', 'Millions', 'Billions', 'Trillions']
      }, {
        type: 'enumInfo',
        localName: 'StartsWith',
        values: ['Consonant', 'Vowel', 'Special']
      }, {
        type: 'enumInfo',
        localName: 'SamlIdpSLOBinding',
        values: ['RedirectBinding', 'PostBinding']
      }, {
        type: 'enumInfo',
        localName: 'ActionOverrideType',
        values: ['Default', 'Standard', 'Scontrol', 'Visualforce', 'Flexipage', 'LightningComponent']
      }, {
        type: 'enumInfo',
        localName: 'DashboardType',
        values: ['SpecifiedUser', 'LoggedInUser', 'MyTeamUser']
      }, {
        type: 'enumInfo',
        localName: 'ReportChartSize',
        values: ['Tiny', 'Small', 'Medium', 'Large', 'Huge']
      }, {
        type: 'enumInfo',
        localName: 'ModerationRuleAction',
        values: ['Block', 'FreezeAndNotify', 'Review', 'Replace', 'Flag']
      }, {
        type: 'enumInfo',
        localName: 'UserDateInterval',
        values: ['INTERVAL_CURRENT', 'INTERVAL_CURNEXT1', 'INTERVAL_CURPREV1', 'INTERVAL_NEXT1', 'INTERVAL_PREV1', 'INTERVAL_CURNEXT3', 'INTERVAL_CURFY', 'INTERVAL_PREVFY', 'INTERVAL_PREV2FY', 'INTERVAL_AGO2FY', 'INTERVAL_NEXTFY', 'INTERVAL_PREVCURFY', 'INTERVAL_PREVCUR2FY', 'INTERVAL_CURNEXTFY', 'INTERVAL_CUSTOM', 'INTERVAL_YESTERDAY', 'INTERVAL_TODAY', 'INTERVAL_TOMORROW', 'INTERVAL_LASTWEEK', 'INTERVAL_THISWEEK', 'INTERVAL_NEXTWEEK', 'INTERVAL_LASTMONTH', 'INTERVAL_THISMONTH', 'INTERVAL_NEXTMONTH', 'INTERVAL_LASTTHISMONTH', 'INTERVAL_THISNEXTMONTH', 'INTERVAL_CURRENTQ', 'INTERVAL_CURNEXTQ', 'INTERVAL_CURPREVQ', 'INTERVAL_NEXTQ', 'INTERVAL_PREVQ', 'INTERVAL_CURNEXT3Q', 'INTERVAL_CURY', 'INTERVAL_PREVY', 'INTERVAL_PREV2Y', 'INTERVAL_AGO2Y', 'INTERVAL_NEXTY', 'INTERVAL_PREVCURY', 'INTERVAL_PREVCUR2Y', 'INTERVAL_CURNEXTY', 'INTERVAL_LAST7', 'INTERVAL_LAST30', 'INTERVAL_LAST60', 'INTERVAL_LAST90', 'INTERVAL_LAST120', 'INTERVAL_NEXT7', 'INTERVAL_NEXT30', 'INTERVAL_NEXT60', 'INTERVAL_NEXT90', 'INTERVAL_NEXT120', 'LAST_FISCALWEEK', 'THIS_FISCALWEEK', 'NEXT_FISCALWEEK', 'LAST_FISCALPERIOD', 'THIS_FISCALPERIOD', 'NEXT_FISCALPERIOD', 'LASTTHIS_FISCALPERIOD', 'THISNEXT_FISCALPERIOD', 'CURRENT_ENTITLEMENT_PERIOD', 'PREVIOUS_ENTITLEMENT_PERIOD', 'PREVIOUS_TWO_ENTITLEMENT_PERIODS', 'TWO_ENTITLEMENT_PERIODS_AGO', 'CURRENT_AND_PREVIOUS_ENTITLEMENT_PERIOD', 'CURRENT_AND_PREVIOUS_TWO_ENTITLEMENT_PERIODS']
      }, {
        type: 'enumInfo',
        localName: 'NextOwnerType',
        values: ['adhoc', 'user', 'userHierarchyField', 'relatedUserField', 'queue']
      }, {
        type: 'enumInfo',
        localName: 'Gender',
        values: ['Neuter', 'Masculine', 'Feminine', 'AnimateMasculine']
      }, {
        type: 'enumInfo',
        localName: 'MonitoredEvents',
        values: ['AuditTrail', 'Login', 'Entity', 'DataExport', 'AccessResource']
      }, {
        type: 'enumInfo',
        localName: 'NetworkStatus',
        values: ['UnderConstruction', 'Live', 'DownForMaintenance']
      }, {
        type: 'enumInfo',
        localName: 'LayoutHeader',
        values: ['PersonalTagging', 'PublicTagging']
      }, {
        type: 'enumInfo',
        localName: 'NavType',
        values: ['Standard', 'Console']
      }, {
        type: 'enumInfo',
        localName: 'VisibleOrRequired',
        values: ['VisibleOptional', 'VisibleRequired', 'NotVisible']
      }, {
        type: 'enumInfo',
        localName: 'LookupValueType',
        values: ['User', 'Queue', 'RecordType']
      }, {
        type: 'enumInfo',
        localName: 'DupeSecurityOptionType',
        values: ['EnforceSharingRules', 'BypassSharingRules']
      }, {
        type: 'enumInfo',
        localName: 'ExternalPrincipalType',
        values: ['Anonymous', 'PerUser', 'NamedUser']
      }, {
        type: 'enumInfo',
        localName: 'APIAccessLevel',
        values: ['Unrestricted', 'Restricted']
      }, {
        type: 'enumInfo',
        localName: 'WebLinkDisplayType',
        values: ['link', 'button', 'massActionButton']
      }, {
        type: 'enumInfo',
        localName: 'CaseType',
        values: ['Nominative', 'Accusative', 'Genitive', 'Dative', 'Inessive', 'Elative', 'Illative', 'Adessive', 'Ablative', 'Allative', 'Essive', 'Translative', 'Partitive', 'Objective', 'Subjective', 'Instrumental', 'Prepositional', 'Locative', 'Vocative', 'Sublative', 'Superessive', 'Delative', 'Causalfinal', 'Essiveformal', 'Termanative', 'Distributive', 'Ergative', 'Adverbial', 'Abessive', 'Comitative']
      }, {
        type: 'enumInfo',
        localName: 'ChartLegendPosition',
        values: ['Right', 'Bottom', 'OnChart']
      }, {
        type: 'enumInfo',
        localName: 'WebLinkPosition',
        values: ['fullScreen', 'none', 'topLeft']
      }, {
        type: 'enumInfo',
        localName: 'PlatformEventType',
        values: ['HighVolume', 'StandardVolume']
      }, {
        type: 'enumInfo',
        localName: 'PlatformActionType',
        values: ['QuickAction', 'StandardButton', 'CustomButton', 'ProductivityAction', 'ActionLink', 'InvocableAction']
      }, {
        type: 'enumInfo',
        localName: 'EmailToCaseOnFailureActionType',
        values: ['Bounce', 'Discard', 'Requeue']
      }, {
        type: 'enumInfo',
        localName: 'BusinessHoursSourceType',
        values: ['None', 'Case', 'Static']
      }, {
        type: 'enumInfo',
        localName: 'Expiration',
        values: ['ThirtyDays', 'SixtyDays', 'NinetyDays', 'SixMonths', 'OneYear', 'Never']
      }, {
        type: 'enumInfo',
        localName: 'ManageableState',
        values: ['released', 'deleted', 'deprecated', 'installed', 'beta', 'unmanaged']
      }, {
        type: 'enumInfo',
        localName: 'SamlSubjectType',
        values: ['Username', 'FederationId', 'UserId', 'SpokeId', 'CustomAttribute', 'PersistentId']
      }, {
        type: 'enumInfo',
        localName: 'ChartType',
        values: ['None', 'Scatter', 'ScatterGrouped', 'Bubble', 'BubbleGrouped', 'HorizontalBar', 'HorizontalBarGrouped', 'HorizontalBarStacked', 'HorizontalBarStackedTo100', 'VerticalColumn', 'VerticalColumnGrouped', 'VerticalColumnStacked', 'VerticalColumnStackedTo100', 'Line', 'LineGrouped', 'LineCumulative', 'LineCumulativeGrouped', 'Pie', 'Donut', 'Funnel', 'VerticalColumnLine', 'VerticalColumnGroupedLine', 'VerticalColumnStackedLine', 'Plugin']
      }, {
        type: 'enumInfo',
        localName: 'LightningBoltCategory',
        values: ['IT', 'Marketing', 'Sales', 'Service']
      }, {
        type: 'enumInfo',
        localName: 'SortOrder',
        values: ['Asc', 'Desc']
      }, {
        type: 'enumInfo',
        localName: 'IterationOrder',
        values: ['Asc', 'Desc']
      }, {
        type: 'enumInfo',
        localName: 'ActionLinkUserVisibility',
        values: ['Creator', 'Everyone', 'EveryoneButCreator', 'Manager', 'CustomUser', 'CustomExcludedUser']
      }, {
        type: 'enumInfo',
        localName: 'SecurityClassification',
        values: ['AccountInformation', 'ConfigurationAndUsageData', 'DataIntendedToBePublic', 'BusinessSetupDataBusinessDataAndAggregates', 'AssociativeBusinessOrPersonalData', 'AuthenticationData']
      }, {
        type: 'enumInfo',
        localName: 'ModerationRuleType',
        values: ['Content', 'Rate']
      }, {
        type: 'enumInfo',
        localName: 'EncryptedFieldMaskType',
        values: ['all', 'creditCard', 'ssn', 'lastFour', 'sin', 'nino']
      }, {
        type: 'enumInfo',
        localName: 'UiType',
        values: ['Aloha', 'Lightning']
      }, {
        type: 'enumInfo',
        localName: 'MilestoneTypeRecurrenceType',
        values: ['none', 'recursIndependently', 'recursChained']
      }, {
        type: 'enumInfo',
        localName: 'FieldManageability',
        values: ['DeveloperControlled', 'SubscriberControlled', 'Locked']
      }, {
        type: 'enumInfo',
        localName: 'SummaryOperations',
        values: ['count', 'sum', 'min', 'max']
      }, {
        type: 'enumInfo',
        localName: 'LetterheadHorizontalAlignment',
        values: ['None', 'Left', 'Center', 'Right']
      }, {
        type: 'enumInfo',
        localName: 'DeployProblemType',
        values: ['Warning', 'Error']
      }, {
        type: 'enumInfo',
        localName: 'MappingOperation',
        values: ['Autofill', 'Overwrite']
      }, {
        type: 'enumInfo',
        localName: 'AccessMethod',
        values: ['Get', 'Post']
      }, {
        type: 'enumInfo',
        localName: 'Article',
        values: ['None', 'Indefinite', 'Definite']
      }],
    elementInfos: [{
        typeInfo: '.CheckDeployStatus',
        elementName: 'checkDeployStatus'
      }, {
        typeInfo: '.RenameMetadataResponse',
        elementName: 'renameMetadataResponse'
      }, {
        typeInfo: '.UpsertMetadata',
        elementName: 'upsertMetadata'
      }, {
        typeInfo: '.ListMetadata',
        elementName: 'listMetadata'
      }, {
        typeInfo: '.UpsertMetadataResponse',
        elementName: 'upsertMetadataResponse'
      }, {
        typeInfo: '.ListMetadataResponse',
        elementName: 'listMetadataResponse'
      }, {
        typeInfo: '.DeployResponse',
        elementName: 'deployResponse'
      }, {
        typeInfo: '.CheckDeployStatusResponse',
        elementName: 'checkDeployStatusResponse'
      }, {
        typeInfo: '.DescribeValueType',
        elementName: 'describeValueType'
      }, {
        typeInfo: '.RetrieveResponse',
        elementName: 'retrieveResponse'
      }, {
        typeInfo: 'Double',
        elementName: 'numberValue',
        scope: '.FlowElementReferenceOrValue'
      }, {
        typeInfo: '.CancelDeployResponse',
        elementName: 'cancelDeployResponse'
      }, {
        typeInfo: '.DescribeMetadataResponse',
        elementName: 'describeMetadataResponse'
      }, {
        typeInfo: 'Boolean',
        elementName: 'encryptedWithPlatformEncryption',
        scope: '.Certificate'
      }, {
        typeInfo: '.SessionHeader',
        elementName: 'SessionHeader'
      }, {
        typeInfo: '.DeployRecentValidation',
        elementName: 'deployRecentValidation'
      }, {
        typeInfo: '.DebuggingHeader',
        elementName: 'DebuggingHeader'
      }, {
        typeInfo: '.ReadMetadata',
        elementName: 'readMetadata'
      }, {
        typeInfo: '.CancelDeploy',
        elementName: 'cancelDeploy'
      }, {
        typeInfo: '.CallOptions',
        elementName: 'CallOptions'
      }, {
        typeInfo: '.DeployRecentValidationResponse',
        elementName: 'deployRecentValidationResponse'
      }, {
        typeInfo: '.CreateMetadataResponse',
        elementName: 'createMetadataResponse'
      }, {
        typeInfo: '.UpdateMetadataResponse',
        elementName: 'updateMetadataResponse'
      }, {
        typeInfo: '.CheckRetrieveStatus',
        elementName: 'checkRetrieveStatus'
      }, {
        typeInfo: '.CreateMetadata',
        elementName: 'createMetadata'
      }, {
        typeInfo: '.UpdateMetadata',
        elementName: 'updateMetadata'
      }, {
        typeInfo: 'Boolean',
        elementName: 'booleanValue',
        scope: '.FlowElementReferenceOrValue'
      }, {
        typeInfo: '.AllOrNoneHeader',
        elementName: 'AllOrNoneHeader'
      }, {
        typeInfo: 'DateTime',
        elementName: 'expirationDate',
        scope: '.Certificate'
      }, {
        typeInfo: '.DebuggingInfo',
        elementName: 'DebuggingInfo'
      }, {
        typeInfo: '.DescribeValueTypeResponse',
        elementName: 'describeValueTypeResponse'
      }, {
        typeInfo: '.Retrieve',
        elementName: 'retrieve'
      }, {
        typeInfo: '.ReadMetadataResponse',
        elementName: 'readMetadataResponse'
      }, {
        typeInfo: '.Deploy',
        elementName: 'deploy'
      }, {
        typeInfo: '.CheckRetrieveStatusResponse',
        elementName: 'checkRetrieveStatusResponse'
      }, {
        typeInfo: '.DescribeMetadata',
        elementName: 'describeMetadata'
      }, {
        typeInfo: '.RenameMetadata',
        elementName: 'renameMetadata'
      }, {
        typeInfo: 'Boolean',
        elementName: 'privateKeyExportable',
        scope: '.Certificate'
      }, {
        typeInfo: '.DeleteMetadataResponse',
        elementName: 'deleteMetadataResponse'
      }, {
        typeInfo: '.DeleteMetadata',
        elementName: 'deleteMetadata'
      }]
  };
  return {
    com_sforce_soap__2006__04_metadata: com_sforce_soap__2006__04_metadata
  };
};
if (typeof define === 'function' && define.amd) {
  define([], com_sforce_soap__2006__04_metadata_Module_Factory);
}
else {
  var com_sforce_soap__2006__04_metadata_Module = com_sforce_soap__2006__04_metadata_Module_Factory();
  if (typeof module !== 'undefined' && module.exports) {
    module.exports.com_sforce_soap__2006__04_metadata = com_sforce_soap__2006__04_metadata_Module.com_sforce_soap__2006__04_metadata;
  }
  else {
    var com_sforce_soap__2006__04_metadata = com_sforce_soap__2006__04_metadata_Module.com_sforce_soap__2006__04_metadata;
  }
}